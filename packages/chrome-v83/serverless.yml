service: serverless-headless-chrome-v83

frameworkVersion: ">=2.13.0 <3.0.0"

layers:
  HeadlessChrome:
    name: serverless-headless-chrome-v83
    compatibleRuntimes:
      - nodejs12.x
    description: Layer for puppeteer to launch headless chrome v83
    package:
      artifact: layers/chrome-v83.zip

custom:
  stage: ${opt:stage, 'stage'}
  cors:
    origin: '*'
    headers:
      - Accept-Encoding
      - Content-Type
      - Content-Length
      - X-Amz-Date
      - Authorization
      - X-Api-Key
      - X-Amz-Security-Token
      - X-Amz-User-Agent
      - Access-Control-Allow-Origin
      - Access-Control-Allow-Headers
      - Access-Control-Allow-Methods
    allowCredentials: false
  apigwBinary:
    types:
      - '*/*'

provider:
  name: aws
  runtime: nodejs12.x
  logRetentionInDays: 90
  deploymentBucket: barchart-serverless-deployments

  environment:
    NODE_ENV: ${self:custom.stage}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:PutObject
      Resource: arn:aws:s3:::barchart-aws-lambda-responses/*

  apiGateway:
    shouldStartNameWithService: true

package:
  individually: true

functions:
  printPdf:
    handler: print/print.handler
    description: Generates a PDF from HTML (using Chrome v83)
    memorySize: 1536
    timeout: 30
    layers:
      - { Ref: HeadlessChromeLambdaLayer }
    events:
      - http:
          path: /print
          method: POST
          cors: ${self:custom.cors}

resources:
  Description: API for generating PDF from HTML

plugins:
  - serverless-webpack
  - serverless-apigw-binary
