{
  "resource": "/print",
  "path": "/print",
  "httpMethod": "POST",
  "headers": {
    "Accept": "application/json, text/plain, */*",
    "CloudFront-Forwarded-Proto": "https",
    "CloudFront-Is-Desktop-Viewer": "true",
    "CloudFront-Is-Mobile-Viewer": "false",
    "CloudFront-Is-SmartTV-Viewer": "false",
    "CloudFront-Is-Tablet-Viewer": "false",
    "CloudFront-Viewer-Country": "US",
    "Content-Type": "application/json;charset=utf-8",
    "Host": "qe56b1yu01.execute-api.us-east-1.amazonaws.com",
    "User-Agent": "axios/0.19.2",
    "Via": "1.1 1fa3f854976309f3d11907ad7125291a.cloudfront.net (CloudFront)",
    "X-Amz-Cf-Id": "mm1hYlf1_AiEHY1xV3CPwckPIzQvO_GrDokRyBhGCB27wpincFeFsw==",
    "X-Amzn-Trace-Id": "Root=1-5f160d13-f2dac090bcf19bdbe584aa83",
    "X-Forwarded-For": "54.173.240.35, 130.176.98.75",
    "X-Forwarded-Port": "443",
    "X-Forwarded-Proto": "https"
  },
  "multiValueHeaders": {
    "Accept": [
      "application/json, text/plain, */*"
    ],
    "CloudFront-Forwarded-Proto": [
      "https"
    ],
    "CloudFront-Is-Desktop-Viewer": [
      "true"
    ],
    "CloudFront-Is-Mobile-Viewer": [
      "false"
    ],
    "CloudFront-Is-SmartTV-Viewer": [
      "false"
    ],
    "CloudFront-Is-Tablet-Viewer": [
      "false"
    ],
    "CloudFront-Viewer-Country": [
      "US"
    ],
    "Content-Type": [
      "application/json;charset=utf-8"
    ],
    "Host": [
      "qe56b1yu01.execute-api.us-east-1.amazonaws.com"
    ],
    "User-Agent": [
      "axios/0.19.2"
    ],
    "Via": [
      "1.1 1fa3f854976309f3d11907ad7125291a.cloudfront.net (CloudFront)"
    ],
    "X-Amz-Cf-Id": [
      "mm1hYlf1_AiEHY1xV3CPwckPIzQvO_GrDokRyBhGCB27wpincFeFsw=="
    ],
    "X-Amzn-Trace-Id": [
      "Root=1-5f160d13-f2dac090bcf19bdbe584aa83"
    ],
    "X-Forwarded-For": [
      "54.173.240.35, 130.176.98.75"
    ],
    "X-Forwarded-Port": [
      "443"
    ],
    "X-Forwarded-Proto": [
      "https"
    ]
  },
  "queryStringParameters": null,
  "multiValueQueryStringParameters": null,
  "pathParameters": null,
  "stageVariables": null,
  "requestContext": {
    "resourceId": "yrif2l",
    "resourcePath": "/print",
    "httpMethod": "POST",
    "extendedRequestId": "P_b7FF7roAMFo9Q=",
    "requestTime": "20/Jul/2020:21:30:59 +0000",
    "path": "/stage/print",
    "accountId": "081121675754",
    "protocol": "HTTP/1.1",
    "stage": "stage",
    "domainPrefix": "qe56b1yu01",
    "requestTimeEpoch": 1595280659699,
    "requestId": "c044c9a4-4162-42c3-9235-4ce4b17fa816",
    "identity": {
      "cognitoIdentityPoolId": null,
      "accountId": null,
      "cognitoIdentityId": null,
      "caller": null,
      "sourceIp": "54.173.240.35",
      "principalOrgId": null,
      "accessKey": null,
      "cognitoAuthenticationType": null,
      "cognitoAuthenticationProvider": null,
      "userArn": null,
      "userAgent": "axios/0.19.2",
      "user": null
    },
    "domainName": "qe56b1yu01.execute-api.us-east-1.amazonaws.com",
    "apiId": "qe56b1yu01"
  },
  "body": "{"html":"<!DOCTYPE html><html><head><meta charset=\"utf-8\"><link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\"><style>#portfolio-summary {\n\tmargin-top: 15px;\n}\n\n@page {\n    size: auto;\n}\n\n@media print {\n\t.table .bg-blue {\n\t\tborder-right: 3px solid #ffffff;\n\t\tbackground-color: #D2E3E9 !important;\n\t}\n}\n\nhtml {\n\tfont-size: 12px;\n}\n\n#summary-table .center {\n\ttext-align: center;\n}\n\n.pagebreak {\n\tpage-break-before: always;\n}\n\n#summary-table, #asset-allocation, #transactions {\n\tfont-size: 10px;\n}\n\n.bg-blue {\n\tborder-right: 3px solid #ffffff;\n\tbackground-color: #D2E3E9;\n}\n\n.table th {\n\tfont-weight: 700;\n}\n\n#summary-table th .alert-dark {\n\tmargin-bottom: .25rem;\n}\n\n#summary-table th .alert {\n\tfont-weight: normal;\n}\n\n.borderless {\n\tborder: none !important;\n}\n\n#summary-start-chart {\n\twidth: 49%;\n\tdisplay: inline-block;\n}\n\n#summary-end-chart {\n\twidth: 49%;\n\tdisplay: inline-block;\n}\n\n.alert {\n    font-weight: bold;\n}\n\n.uppercase {\n    text-transform: uppercase;\n}\n\n.bold {\n    font-weight: bold;\n}\n\n.chart-container {\n\theight: 400px;\n\tmargin: 0 auto;\n\twidth: 1000px;\n}\n</style><script src=\"https://code.highcharts.com/highcharts.js\"></script><script>const startingSummaryChartData = []</script><script>const closingSummaryChartData = [{\"name\":\"Funds\",\"y\":37342.49,\"color\":\"#8bbc21\"}]</script><script>!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.Charts=e():(t.Barchart=t.Barchart||{},t.Barchart.RealtimeWidgets=t.Barchart.RealtimeWidgets||{},t.Barchart.RealtimeWidgets.Charts=e())}(window,(function(){return function(t){var e={};function i(n){if(e[n])return e[n].exports;var r=e[n]={i:n,l:!1,exports:{}};return t[n].call(r.exports,r,r.exports,i),r.l=!0,r.exports}return i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var r in t)i.d(n,r,function(e){return t[e]}.bind(null,r));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,\"a\",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p=\"\",i(i.s=231)}({1:function(t,e,i){(function(t){!function(i,n){\"use strict\";var r={};i.PubSub=r;var s=i.define;!function(t){var e={},i=-1;function n(t){var e;for(e in t)if(t.hasOwnProperty(e))return!0;return!1}function r(t,e,i){try{t(e,i)}catch(t){setTimeout(function(t){return function(){throw t}}(t),0)}}function s(t,e,i){t(e,i)}function o(t,i,n,o){var a,l=e[i],c=o?s:r;if(e.hasOwnProperty(i))for(a in l)l.hasOwnProperty(a)&&c(l[a],t,n)}function a(t,i,r,s){var a=function(t,e,i){return function(){var n=String(t),r=n.lastIndexOf(\".\");for(o(t,t,e,i);-1!==r;)r=(n=n.substr(0,r)).lastIndexOf(\".\"),o(t,n,e,i)}}(t=\"symbol\"==typeof t?t.toString():t,i,s);return!!function(t){for(var i=String(t),r=Boolean(e.hasOwnProperty(i)&&n(e[i])),s=i.lastIndexOf(\".\");!r&&-1!==s;)s=(i=i.substr(0,s)).lastIndexOf(\".\"),r=Boolean(e.hasOwnProperty(i)&&n(e[i]));return r}(t)&&(!0===r?a():setTimeout(a,0),!0)}t.publish=function(e,i){return a(e,i,!1,t.immediateExceptions)},t.publishSync=function(e,i){return a(e,i,!0,t.immediateExceptions)},t.subscribe=function(t,n){if(\"function\"!=typeof n)return!1;t=\"symbol\"==typeof t?t.toString():t,e.hasOwnProperty(t)||(e[t]={});var r=\"uid_\"+String(++i);return e[t][r]=n,r},t.subscribeOnce=function(e,i){var n=t.subscribe(e,(function(){t.unsubscribe(n),i.apply(this,arguments)}));return t},t.clearAllSubscriptions=function(){e={}},t.clearSubscriptions=function(t){var i;for(i in e)e.hasOwnProperty(i)&&0===i.indexOf(t)&&delete e[i]},t.countSubscriptions=function(t){var i,n=0;for(i in e)e.hasOwnProperty(i)&&0===i.indexOf(t)&&n++;return n},t.getSubscriptions=function(t){var i,n=[];for(i in e)e.hasOwnProperty(i)&&0===i.indexOf(t)&&n.push(i);return n},t.unsubscribe=function(i){var n,r,s,o=\"string\"==typeof i&&(e.hasOwnProperty(i)||function(t){var i;for(i in e)if(e.hasOwnProperty(i)&&0===i.indexOf(t))return!0;return!1}(i)),a=!o&&\"string\"==typeof i,l=\"function\"==typeof i,c=!1;if(!o){for(n in e)if(e.hasOwnProperty(n)){if(r=e[n],a&&r[i]){delete r[i],c=i;break}if(l)for(s in r)r.hasOwnProperty(s)&&r[s]===i&&(delete r[s],c=!0)}return c}t.clearSubscriptions(i)}}(r),\"function\"==typeof s&&s.amd?s((function(){return r})):(void 0!==t&&t.exports&&(e=t.exports=r),e.PubSub=r,t.exports=e=r)}(\"object\"==typeof window&&window||this)}).call(this,i(16)(t))},12:function(t,e,i){const n=i(13);t.exports=(()=>{\"use strict\";class t extends n{constructor(t,e,i,n,r,s,o,a){super(t,t),this._baseCode=e,this._decimalDigits=i,this._supportsFractions=n,n?(this._fractionFactor=r,this._fractionDigits=s,this._fractionFactorSpecial=o||r,this._fractionDigitsSpecial=a||s):(this._fractionFactor=void 0,this._fractionDigits=void 0,this._fractionFactorSpecial=void 0,this._fractionDigitsSpecial=void 0)}get baseCode(){return this._baseCode}get unitCode(){return this._code}get decimalDigits(){return this._decimalDigits}get supportsFractions(){return this._supportsFractions}get fractionFactor(){return this._fractionFactor}get fractionDigits(){return this._fractionDigits}get fractionFactorSpecial(){return this._fractionFactorSpecial}get fractionDigitsSpecial(){return this._fractionDigitsSpecial}getFractionFactor(t){return!0===t?this._fractionFactorSpecial:this._fractionFactor}getFractionDigits(t){return!0===t?this._fractionDigitsSpecial:this._fractionDigits}static parse(e){return n.fromCode(t,e)}static fromBaseCode(e){return n.getItems(t).find(t=>t.baseCode===e)||null}static toString(){return`[UnitCode (code=${this.code})]`}}new t(\"2\",-1,3,!0,8,1),new t(\"3\",-2,4,!0,16,2),new t(\"4\",-3,5,!0,32,2),new t(\"5\",-4,6,!0,64,2,320,3),new t(\"6\",-5,7,!0,128,3,320,3),new t(\"7\",-6,8,!0,256,3,320,3),new t(\"8\",0,0,!1),new t(\"9\",1,1,!1),new t(\"A\",2,2,!1),new t(\"B\",3,3,!1),new t(\"C\",4,4,!1),new t(\"D\",5,5,!1),new t(\"E\",6,6,!1),new t(\"F\",7,7,!1);return t})()},13:function(t,e,i){const n=i(6);t.exports=(()=>{\"use strict\";const t=new Map;class e{constructor(i,r){n.argumentIsRequired(i,\"code\",String),n.argumentIsRequired(r,\"description\",String),this._code=i,this._description=r;const s=this.constructor;t.has(s)||t.set(s,[]);null===e.fromCode(s,i)&&t.get(s).push(this)}get code(){return this._code}get description(){return this._description}equals(t){return t===this||t instanceof e&&t.constructor===this.constructor&&t.code===this.code}toJSON(){return this.code}static fromCode(t,i){return e.getItems(t).find(t=>t.code===i)||null}static getItems(e){return t.get(e)||[]}toString(){return\"[Enum]\"}}return e})()},14:function(t,e,i){\"use strict\";var n,r,s,o=i(180),a=\"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-\";function l(){s=!1}function c(t){if(t){if(t!==n){if(t.length!==a.length)throw new Error(\"Custom alphabet for shortid must be \"+a.length+\" unique characters. You submitted \"+t.length+\" characters: \"+t);var e=t.split(\"\").filter((function(t,e,i){return e!==i.lastIndexOf(t)}));if(e.length)throw new Error(\"Custom alphabet for shortid must be \"+a.length+\" unique characters. These characters were not unique: \"+e.join(\", \"));n=t,l()}}else n!==a&&(n=a,l())}function u(){return s||(s=function(){n||c(a);for(var t,e=n.split(\"\"),i=[],r=o.nextValue();e.length>0;)r=o.nextValue(),t=Math.floor(r*e.length),i.push(e.splice(t,1)[0]);return i.join(\"\")}())}t.exports={get:function(){return n||a},characters:function(t){return c(t),n},seed:function(t){o.seed(t),r!==t&&(l(),r=t)},lookup:function(t){return u()[t]},shuffled:u}},15:function(t,e,i){const n=i(2),r=i(9),s=i(12);t.exports=(()=>{\"use strict\";return function(t,e,i,o,a,l){if(!n.number(t))return\"\";const c=s.parse(e);if(null===c)return\"\";if((!n.string(i)||i.length>1)&&(i=\".\"),(!n.string(a)||a.length>1)&&(a=\"\"),o=n.boolean(o)&&o,l=n.boolean(l)&&l,c.supportsFractions&&\".\"!==i){let e,n;t<0?l?(e=\"(\",n=\")\"):(e=\"-\",n=\"\"):(e=\"\",n=\"\");const r=Math.abs(t),s=function(t,e){const i=Math.floor(t);return 0===i&&\"\"===e?\"\":i}(r,i),a=function(t){return t-Math.floor(t)}(r)*c.getFractionFactor(o);return[e,s,i,function(t,e){return[\"000\",Math.floor(t)].join(\"\").substr(-1*e)}(Math.floor(parseFloat(a.toFixed(1))),c.getFractionDigits(o)),n].join(\"\")}return r(t,c.decimalDigits,a,l)}})()},16:function(t,e){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children||(t.children=[]),Object.defineProperty(t,\"loaded\",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,\"id\",{enumerable:!0,get:function(){return t.i}}),t.webpackPolyfill=1),t}},163:function(t,e){t.exports=(()=>{\"use strict\";const t={},e={};function i(i,n,r){t[i]=n,e[i]=r}return i(\"F\",\"January\",1),i(\"G\",\"February\",2),i(\"H\",\"March\",3),i(\"J\",\"April\",4),i(\"K\",\"May\",5),i(\"M\",\"June\",6),i(\"N\",\"July\",7),i(\"Q\",\"August\",8),i(\"U\",\"September\",9),i(\"V\",\"October\",10),i(\"X\",\"November\",11),i(\"Z\",\"December\",12),i(\"Y\",\"Cash\",0),{getCodeToNameMap:()=>t,getCodeToNumberMap:()=>e}})()},164:function(t){t.exports=JSON.parse('{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"JSON schema for Barchart HTML5 Charts\",\"definitions\":{\"color\":{\"type\":\"string\",\"pattern\":\"^(#([0-9a-fA-F]{3}){1,2})|(rgba\\\\\\\\((\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*,){3}\\\\\\\\s*[01]+(\\\\\\\\.\\\\\\\\d+)?\\\\\\\\))|(rgb\\\\\\\\((\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*)(,\\\\\\\\s*\\\\\\\\d{1,3}\\\\\\\\s*){2}\\\\\\\\))$\"},\"orientationChoice\":{\"type\":\"string\",\"enum\":[\"vertical\",\"horizontal\",\"both\",\"none\"]},\"dashStyle\":{\"type\":\"string\",\"enum\":[\"Solid\",\"ShortDash\",\"ShortDot\",\"ShortDashDot\",\"ShortDashDotDot\",\"SparseDot\",\"Dot\",\"Dash\",\"LongDash\",\"DashDot\",\"LongDashDot\",\"LongDashDotDot\"]},\"aggUnit\":{\"type\":\"string\",\"enum\":[\"Tick\",\"Intraday\",\"Day\",\"Week\",\"Month\",\"Quarter\",\"Year\"]},\"aggSpec\":{\"type\":\"string\",\"enum\":[\"None\",\"Nearest\",\"Continue\",\"FormT\",\"PerCount\",\"PerVolume\",\"PerRange\",\"PerSeconds\"]},\"period\":{\"type\":\"string\",\"pattern\":\"^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$\"},\"density\":{\"type\":\"integer\",\"minimum\":5},\"curveAttr\":{\"type\":\"string\",\"enum\":[\"ChangeBased\",\"OpenVsClose\"]},\"paddingPercent\":{\"type\":\"number\",\"minimum\":0.001,\"maximum\":0.999},\"detachedScale\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"marginTop\":{\"$ref\":\"#/definitions/paddingPercent\",\"default\":0.01},\"marginBottom\":{\"$ref\":\"#/definitions/paddingPercent\",\"default\":0.01}}},\"fundamental\":{\"type\":\"string\",\"enum\":[\"AccountsPayable\",\"AccruedExpenses\",\"Cash\",\"CommonShares\",\"DeferredIncomeTax\",\"DeferredLongRevenues\",\"EquityOtherInvestments\",\"IncomeTaxPayable\",\"Intangibles\",\"Inventories\",\"LongTermDebt\",\"MarketableSec\",\"OtherCurrentAssets\",\"OtherCurrentLiabilities\",\"OtherEquity\",\"OtherNonCurrentAssets\",\"OtherNonCurrentLiabilities\",\"PpeNet\",\"PrepaidExpenses\",\"Receivables\",\"RetainedEarnings\",\"ShorttermDebt\",\"TotalAssets\",\"TotalCurrentAssets\",\"TotalCurrentLiabilities\",\"TotalLiabilities\",\"TotalLiabilitiesAndEquity\",\"TotalNonCurrentAssets\",\"TotalNonCurrentLiabilities\",\"TotalShareholdersEquity\",\"BasicEpsContOp\",\"BasicEpsTotalOp\",\"CostGoods\",\"DilutedEpsContOp\",\"DilutedEpsTotalOp\",\"Ebitda\",\"GrossProfit\",\"IncomeTax\",\"InterestExpense\",\"NetIncome\",\"OperatingExpenses\",\"OperatingIncome\",\"OtherIncomeExpenses\",\"PreTaxIncome\",\"Sales\"]},\"studyField\":{\"type\":\"string\",\"enum\":[\"MA\",\"EMA\",\"MAHI\",\"MALO\",\"MACD\",\"MACDS\",\"MACDH\",\"ENVU\",\"ENVD\",\"ENVEXPU\",\"ENVEXPD\",\"ENVSMOU\",\"ENVSMOD\",\"SMA\",\"TMA\",\"WMA\",\"VOLMA\",\"OSC\",\"VOSC\",\"RSI\",\"STORSI\",\"HH\",\"LL\",\"PercK\",\"PercD\",\"PercR\",\"WGCL\",\"BOLLBU\",\"BOLLBL\",\"BOLLBM\",\"BOLLBW\",\"BOLLBP\",\"OBVOL\",\"ATR\",\"PDI\",\"MDI\",\"ADX\",\"ADXM\",\"ADL\",\"ADWM\",\"ADWMMA\",\"CHAOSC\",\"TP\",\"KCUP\",\"KCMID\",\"KCLOW\",\"KBUP\",\"KBMID\",\"KBLOW\",\"KCEUP\",\"KCEMID\",\"KCELOW\",\"DONUP\",\"DONMID\",\"DONLOW\",\"DONW\",\"PVT\",\"ROC\",\"TRIX\",\"PVPT\",\"PVPTR\",\"PVPTS\",\"ARNUP\",\"ARNLOW\",\"ARNOSC\",\"TCHNUP\",\"TCHNLOW\",\"ALJAW\",\"ALTEETH\",\"ALLIPS\",\"PLTLN\",\"AWOS\",\"AWOSMA\",\"MFMUL\",\"CLV\",\"CHAMF\",\"CHAVOL\",\"DPO\",\"CCI\",\"EMV\",\"EMVMA\",\"ERBLPOW\",\"ERBRPOW\",\"FI\",\"MI\",\"MOM\",\"MOMMA\",\"MFI\",\"MSD\",\"NVI\",\"NVIEMA\",\"PVI\",\"PVIEMA\",\"PPO\",\"PPOS\",\"PPOH\",\"PVO\",\"PVOS\",\"PVOH\",\"HV\",\"PERF\",\"WASI\",\"WWVSARU\",\"WWVSARD\",\"PARSARS\",\"PARSARL\",\"MOVLR\",\"TRSP1\",\"TRSP2\",\"PPTPIV\",\"PPTR1\",\"PPTR2\",\"PPTR3\",\"PPTS1\",\"PPTS2\",\"PPTS3\",\"COTLCCMSP\",\"COTLCLGSP\",\"COTLCSMSP\",\"COTDAGPRO\",\"COTDAGSPD\",\"COTDAGMNM\",\"COTDAGOTH\",\"COTFTRDLI\",\"COTFTRASM\",\"COTFTRLVF\",\"COTFTROTH\",\"TR\",\"IMPVOL\",\"CTM\",\"GPMI\",\"CTLTM\",\"CTLTMF\",\"DEMA\",\"TEMA\",\"TSI\",\"TSISIG\",\"ADJATR\",\"COTR\",\"GMMA3\",\"GMMA5\",\"GMMA8\",\"GMMA10\",\"GMMA12\",\"GMMA15\",\"GMMA30\",\"GMMA35\",\"GMMA40\",\"GMMA45\",\"GMMA50\",\"GMMA60\",\"MCGD\",\"HMA\",\"COPP\",\"CPPH4\",\"CPPH3\",\"CPPH2\",\"CPPH1\",\"CPPL1\",\"CPPL2\",\"CPPL3\",\"CPPL4\",\"REATRHI\",\"REATRLO\",\"BREL\",\"LINRUP\",\"LINRMID\",\"LINRLOW\",\"CSHO\",\"CSHB\",\"GTPI\",\"TCHRE\",\"PCTCHG\",\"ATRMA\",\"STOMOMIX\",\"CHDMOMOSC\",\"VSTOPUP\",\"VSTOPLOW\",\"SUPTR\",\"BARCOLIX\",\"CONVLN\",\"BASELN\",\"LEADSP1\",\"LEADSP2\",\"LAGGSP\",\"VWAP\"]},\"generalField\":{\"type\":\"string\",\"enum\":[\"DateTime\",\"Open\",\"High\",\"Low\",\"Close\",\"TradeSize\",\"Volume\",\"OpenInterest\",\"Last\",\"Symbol\",\"Change\",\"PercentChange\",\"PreviousOpen\",\"PreviousClose\",\"PreviousHigh\",\"PreviousLow\",\"WeekPreviousClose\",\"WeekPreviousHigh\",\"WeekPreviousLow\",\"MonthPreviousClose\",\"MonthPreviousHigh\",\"MonthPreviousLow\"]},\"eventField\":{\"type\":\"string\",\"enum\":[\"Dividends\",\"Splits\",\"Earnings\"]},\"curveField\":{\"anyOf\":[{\"$ref\":\"#/definitions/generalField\"},{\"$ref\":\"#/definitions/studyField\"},{\"$ref\":\"#/definitions/fundamental\"}]},\"curveStyle\":{\"type\":\"string\",\"enum\":[\"OHLC\",\"Line\",\"Candlestick\",\"Area\",\"Column\",\"Dots\",\"HLC\",\"HL\",\"Ribbon\",\"Step\",\"HollowCandles\",\"HeikinAshi\",\"ElderImpulseSystem\",\"Renko\",\"LineBreak\",\"Kagi\",\"PointAndFigure\"]},\"paneHeight\":{\"type\":\"number\",\"minimum\":0.01},\"plotPlacement\":{\"type\":\"string\",\"enum\":[\"WithSeries\",\"TimeAxis\"],\"default\":\"WithSeries\"},\"comparison\":{\"type\":\"string\",\"enum\":[\"None\",\"Value\",\"Percent\"],\"default\":\"None\"},\"scale\":{\"type\":\"string\",\"enum\":[\"Linear\",\"Logarithmic\"],\"default\":\"Linear\"},\"study\":{\"type\":\"string\",\"enum\":[\"MA\",\"MAEXP\",\"MAHLC\",\"MACD\",\"MACDEXP\",\"VOL\",\"MAENV\",\"MAENVEXP\",\"MAENVSMO\",\"MASMO\",\"MATRI\",\"MAWEI\",\"MAVOL\",\"OSCI\",\"OSCIVOL\",\"RSI\",\"RSIMOD\",\"RSISTO\",\"STOCHF\",\"STOCHS\",\"WPERCR\",\"HHLL\",\"WGCL\",\"BBANDS\",\"BWIDTH\",\"BPERC\",\"OBVOL\",\"ATR\",\"ADX\",\"ADXMOD\",\"ADL\",\"ADWM\",\"CHAOSC\",\"TP\",\"KELCHN\",\"KELEXP\",\"KELBND\",\"DONCHN\",\"DONWIDTH\",\"PVT\",\"ROC\",\"TRIX\",\"PPMOV\",\"ARNUPDW\",\"ARNOSC\",\"TCHN\",\"ALLG\",\"PLTLN\",\"AWEOSC\",\"CLV\",\"CHAMF\",\"CHAVOL\",\"DPO\",\"CCI\",\"EMV\",\"ERBLPOW\",\"ERBRPOW\",\"FI\",\"MI\",\"MOM\",\"MFI\",\"MSD\",\"NVI\",\"PVI\",\"PPO\",\"PVO\",\"HV\",\"PERF\",\"WASI\",\"WWVOL\",\"PARTP\",\"MOVLR\",\"TRSP\",\"COTLC\",\"COTDAG\",\"COTFTR\",\"PIVPTS\",\"IMPVOL\",\"CTM\",\"GPMI\",\"DEMA\",\"TEMA\",\"TSI\",\"ADJATR\",\"COTR\",\"GMMA\",\"MCGD\",\"HMA\",\"COPP\",\"CPP\",\"REATRHI\",\"REATRLO\",\"LINRCHN\",\"CSHO\",\"CSHB\",\"GTPI\",\"TCHRE\",\"PCTCHG\",\"OPINT\",\"STOMOMIX\",\"CHDMOMOSC\",\"VSTOP\",\"SUPTR\",\"ICHCLD\",\"VWAP\"]},\"annId\":{\"type\":\"string\",\"enum\":[\"Line\",\"Ray\",\"GannLine\",\"VerticalLine\",\"HorizontalLine\",\"FiftyPercentLine\",\"LongPosition\",\"ShortPosition\",\"FibonacciRetracement\",\"FibonacciFan\",\"FibonacciArcs\",\"GannFan\",\"SpeedResistanceFan\",\"SpeedResistanceArcs\",\"AndrewsPitchfork\",\"Rectangle\",\"Ellipse\",\"TrendChannel\",\"SymbolArrowUp\",\"SymbolArrowDown\",\"SymbolArrowRight\",\"SymbolArrowLeft\",\"SymbolArcDown\",\"SymbolArcUp\",\"SymbolThumbsUp\",\"SymbolThumbsDown\",\"SymbolOne\",\"SymbolTwo\",\"SymbolThree\",\"SymbolFour\",\"SymbolFive\",\"SymbolQuestion\",\"SymbolFishHook\",\"FibonacciTimeZones\",\"Text\",\"ComputedText\"]},\"aggregation\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"size\":{\"type\":\"integer\",\"minimum\":1,\"multipleOf\":1,\"default\":1},\"unit\":{\"$ref\":\"#/definitions/aggUnit\",\"default\":\"Day\"},\"spec\":{\"$ref\":\"#/definitions/aggSpec\",\"default\":\"None\"},\"isContractVolume\":{\"type\":\"boolean\",\"default\":false},\"dividendsAdjust\":{\"type\":\"boolean\",\"default\":false},\"backAdjust\":{\"type\":\"boolean\",\"default\":false},\"daysToExpiration\":{\"type\":\"integer\",\"minimum\":0,\"maximum\":60,\"default\":1},\"contractRoll\":{\"type\":\"string\",\"enum\":[\"expiration\",\"combined\"],\"default\":\"expiration\"}},\"required\":[\"unit\"]},\"gridLines\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"visible\":{\"type\":\"boolean\",\"default\":true},\"color\":{\"type\":\"string\",\"default\":\"#d8d8d8\"},\"lineWidth\":{\"type\":\"number\",\"default\":1},\"dashStyle\":{\"$ref\":\"#/definitions/dashStyle\",\"default\":\"Solid\"}}},\"range\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"from\":{\"type\":\"number\"},\"to\":{\"type\":\"number\"}}},\"crosshair\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"enabled\":{\"type\":\"boolean\",\"default\":true},\"snap\":{\"type\":\"boolean\",\"default\":false},\"showValue\":{\"type\":\"boolean\",\"default\":true},\"color\":{\"$ref\":\"#/definitions/color\",\"default\":\"#c0c0c0\"},\"dashStyle\":{\"$ref\":\"#/definitions/dashStyle\",\"default\":\"Solid\"},\"format\":{\"type\":\"string\"}}},\"displayAxis\":{\"type\":\"object\",\"properties\":{\"visible\":{\"type\":\"boolean\",\"default\":true},\"gridLines\":{\"$ref\":\"#/definitions/gridLines\"},\"minorGridLines\":{\"$ref\":\"#/definitions/gridLines\"},\"textColor\":{\"$ref\":\"#/definitions/color\",\"default\":\"#000\"},\"crosshair\":{\"$ref\":\"#/definitions/crosshair\"}}},\"displayChart\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"backgroundColor\":{\"$ref\":\"#/definitions/color\",\"default\":\"#fff\"},\"plotBorderColor\":{\"$ref\":\"#/definitions/color\"},\"fontFamily\":{\"type\":\"string\",\"default\":\"\\\\\"Lucida Grande\\\\\", \\\\\"Lucida Sans Unicode\\\\\", Verdana, Arial, Helvetica, sans-serif\"},\"previous\":{\"$ref\":\"#/definitions/previous\"},\"exportUrl\":{\"type\":\"string\"},\"showMinMaxArc\":{\"type\":\"boolean\",\"default\":true},\"showGoToLatest\":{\"type\":\"boolean\",\"default\":false},\"showNoDataText\":{\"type\":\"boolean\"},\"newPaneHeight\":{\"$ref\":\"#/definitions/paneHeight\",\"default\":1},\"plotHover\":{\"type\":\"boolean\",\"default\":false},\"bar\":{\"$ref\":\"#/definitions/barMetrics\"},\"zooming\":{\"$ref\":\"#/definitions/orientationChoice\",\"default\":\"both\"}}},\"barMetrics\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"width\":{\"type\":\"number\"},\"spacing\":{\"type\":\"number\"}}},\"previous\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"color\":{\"$ref\":\"#/definitions/color\",\"default\":\"#000\"},\"dashStyle\":{\"$ref\":\"#/definitions/dashStyle\",\"default\":\"Solid\"},\"forceVisible\":{\"type\":\"boolean\",\"default\":false}}},\"scrollbar\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"barColor\":{\"$ref\":\"#/definitions/color\",\"default\":\"#bfc8d1\"},\"buttonColor\":{\"$ref\":\"#/definitions/color\",\"default\":\"#ebe7e8\"},\"trackColor\":{\"$ref\":\"#/definitions/color\",\"default\":\"#eee\"},\"visible\":{\"type\":\"boolean\",\"default\":true}}},\"tooltip\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"visible\":{\"type\":\"boolean\",\"default\":true},\"mode\":{\"type\":\"string\",\"enum\":[\"standard\",\"cards\",\"bubble\",\"external\"],\"default\":\"standard\"},\"showMainPlot\":{\"type\":\"boolean\",\"default\":false},\"backgroundColor\":{\"$ref\":\"#/definitions/color\",\"default\":\"rgba(255, 255, 255, 0.85)\"},\"borderColor\":{\"$ref\":\"#/definitions/color\",\"default\":\"#000\"}}},\"data\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"aggregation\":{\"$ref\":\"#/definitions/aggregation\"},\"maxDataPoints\":{\"type\":\"number\"},\"range\":{\"$ref\":\"#/definitions/range\"},\"checkRange\":{\"type\":\"boolean\"}},\"required\":[\"aggregation\"]},\"display\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"period\":{\"$ref\":\"#/definitions/period\"},\"density\":{\"$ref\":\"#/definitions/density\"},\"chart\":{\"$ref\":\"#/definitions/displayChart\"},\"scrollbar\":{\"$ref\":\"#/definitions/scrollbar\"},\"scrollBehavior\":{\"type\":\"string\",\"enum\":[\"wheel\",\"wheel+shift\",\"none\"],\"default\":\"wheel\"},\"tooltip\":{\"$ref\":\"#/definitions/tooltip\"},\"yAxis\":{\"allOf\":[{\"$ref\":\"#/definitions/displayAxis\"},{\"properties\":{\"showLastValue\":{\"type\":\"string\",\"enum\":[\"None\",\"All\",\"Main\"],\"default\":\"All\"},\"preventLabelOverlap\":{\"type\":\"boolean\",\"default\":false},\"snapAnnotationsToPrices\":{\"type\":\"boolean\",\"default\":false}}}]},\"xAxis\":{\"allOf\":[{\"$ref\":\"#/definitions/displayAxis\"},{\"properties\":{\"format\":{\"type\":\"string\",\"minLength\":1},\"minTickInterval\":{\"type\":\"number\",\"default\":0},\"tickPixelInterval\":{\"type\":\"number\",\"default\":0},\"visibleRange\":{\"$ref\":\"#/definitions/range\"},\"equidistant\":{\"type\":\"boolean\",\"default\":true},\"marginBars\":{\"type\":\"number\",\"minimum\":0,\"default\":0},\"zoom\":{\"type\":\"number\",\"default\":0},\"resizeHandles\":{\"type\":\"boolean\",\"default\":false},\"forceTicksVisible\":{\"type\":\"boolean\"},\"panning\":{\"type\":\"boolean\"}}}]},\"annotationTraits\":{\"$ref\":\"#/definitions/annTraits\"},\"curveTraits\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/curveTrait\"}}}},\"curveZone\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"value\":{\"type\":\"number\"},\"colors\":{\"type\":\"number\"},\"gradient\":{\"type\":\"string\",\"enum\":[\"linLighten\",\"linDarken\"]}}},\"curveNonStrict\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"attributes\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/curveAttr\"}},\"colors\":{\"type\":\"array\",\"minItems\":1,\"items\":{\"$ref\":\"#/definitions/color\"}},\"fields\":{\"type\":\"array\",\"minItems\":1,\"items\":{\"$ref\":\"#/definitions/curveField\"}},\"style\":{\"$ref\":\"#/definitions/curveStyle\",\"default\":\"Line\"},\"lineWidth\":{\"type\":\"number\",\"default\":2},\"varyColorPerBar\":{\"type\":\"boolean\",\"default\":false},\"visible\":{\"type\":\"boolean\",\"default\":true},\"zones\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/curveZone\"}},\"shift\":{\"type\":\"integer\"}}},\"curve\":{\"allOf\":[{\"$ref\":\"#/definitions/curveNonStrict\"}],\"required\":[\"colors\",\"fields\"]},\"plotEventDividends\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"show\":{\"type\":\"boolean\",\"default\":false},\"color\":{\"$ref\":\"#/definitions/color\",\"default\":\"#037c27\"},\"title\":{\"type\":\"string\",\"default\":\"D\"}},\"required\":[\"show\"]},\"plotEventEarnings\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"show\":{\"type\":\"boolean\",\"default\":false},\"color\":{\"$ref\":\"#/definitions/color\",\"default\":\"#08a0c9\"},\"title\":{\"type\":\"string\",\"default\":\"E\"}},\"required\":[\"show\"]},\"plotEventSplits\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"show\":{\"type\":\"boolean\",\"default\":false},\"color\":{\"$ref\":\"#/definitions/color\",\"default\":\"#de7726\"},\"title\":{\"type\":\"string\",\"default\":\"S\"}},\"required\":[\"show\"]},\"plotEvents\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"dividends\":{\"$ref\":\"#/definitions/plotEventDividends\"},\"earnings\":{\"$ref\":\"#/definitions/plotEventEarnings\"},\"splits\":{\"$ref\":\"#/definitions/plotEventSplits\"},\"placement\":{\"$ref\":\"#/definitions/plotPlacement\",\"default\":\"WithSeries\"}}},\"fundamentalFrequency\":{\"type\":\"string\",\"enum\":[\"Quarter\",\"Year\"]},\"numberInput\":{\"additionalProperties\":false,\"properties\":{\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"number\"}}},\"stringInput\":{\"additionalProperties\":false,\"properties\":{\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"}}},\"input\":{\"type\":\"object\",\"oneOf\":[{\"$ref\":\"#/definitions/numberInput\"},{\"$ref\":\"#/definitions/stringInput\"}]},\"inputs\":{\"type\":\"array\",\"minItems\":1,\"items\":{\"$ref\":\"#/definitions/input\"}},\"curves\":{\"type\":\"array\",\"minItems\":1,\"items\":{\"$ref\":\"#/definitions/curve\"}},\"symbolType\":{\"type\":\"string\",\"pattern\":\"Symbol\"},\"symbolPlot\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"curves\":{\"$ref\":\"#/definitions/curves\"},\"symbol\":{\"type\":\"string\"},\"events\":{\"$ref\":\"#/definitions/plotEvents\"},\"showPrevious\":{\"type\":\"boolean\",\"default\":false},\"type\":{\"$ref\":\"#/definitions/symbolType\"},\"main\":{\"type\":\"boolean\",\"default\":false}},\"required\":[\"curves\",\"symbol\",\"type\"]},\"fundamentalType\":{\"type\":\"string\",\"enum\":[\"BalanceSheet\",\"IncomeStatement\"]},\"fundamentalPlot\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"curves\":{\"$ref\":\"#/definitions/curves\"},\"symbol\":{\"type\":\"string\"},\"fundamental\":{\"$ref\":\"#/definitions/fundamentalFrequency\",\"default\":\"Quarter\"},\"type\":{\"$ref\":\"#/definitions/fundamentalType\"}},\"required\":[\"curves\",\"symbol\",\"type\"]},\"studyLevels\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/studyLevel\"}},\"studyLevel\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"value\":{\"type\":\"number\"},\"line\":{\"$ref\":\"#/definitions/lineTrait\"},\"name\":{\"type\":\"string\"}},\"required\":[\"value\",\"line\"]},\"studyBands\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/studyBand\"}},\"studyBand\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"range\":{\"$ref\":\"#/definitions/range\"},\"fill\":{\"$ref\":\"#/definitions/fillTrait\"}},\"required\":[\"range\",\"fill\"]},\"studyType\":{\"type\":\"string\",\"pattern\":\"Study\"},\"studyPlot\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"curves\":{\"$ref\":\"#/definitions/curves\"},\"basis\":{\"type\":\"string\",\"default\":\"$main\"},\"study\":{\"$ref\":\"#/definitions/study\"},\"source\":{\"$ref\":\"#/definitions/curveField\"},\"inputs\":{\"$ref\":\"#/definitions/inputs\"},\"type\":{\"$ref\":\"#/definitions/studyType\"},\"levels\":{\"$ref\":\"#/definitions/studyLevels\"},\"bands\":{\"$ref\":\"#/definitions/studyBands\"},\"detachedScale\":{\"$ref\":\"#/definitions/detachedScale\"}},\"required\":[\"study\",\"type\"]},\"exprType\":{\"type\":\"string\",\"pattern\":\"Expression\"},\"exprPlot\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"curves\":{\"$ref\":\"#/definitions/curves\",\"default\":[{\"fields\":[\"Close\"],\"style\":\"Line\",\"lineWidth\":2,\"visible\":true,\"colors\":[\"#888\"],\"varyColorPerBar\":false}]},\"expression\":{\"type\":\"string\"},\"type\":{\"$ref\":\"#/definitions/exprType\"},\"main\":{\"type\":\"boolean\",\"default\":false}},\"required\":[\"expression\",\"type\"]},\"forwardType\":{\"type\":\"string\",\"pattern\":\"Forward\"},\"intOffset\":{\"type\":\"integer\",\"minimum\":0,\"multipleOf\":1},\"intOffsets\":{\"type\":\"array\",\"minItems\":1,\"items\":{\"$ref\":\"#/definitions/intOffset\"}},\"forwardPlot\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"curves\":{\"$ref\":\"#/definitions/curves\",\"default\":[{\"fields\":[\"Close\"],\"style\":\"Line\",\"lineWidth\":2,\"visible\":true,\"colors\":[\"#888\"],\"varyColorPerBar\":false}]},\"forward\":{\"type\":\"string\"},\"offsets\":{\"$ref\":\"#/definitions/intOffsets\",\"default\":[0]},\"main\":{\"type\":\"boolean\",\"default\":true},\"type\":{\"$ref\":\"#/definitions/forwardType\"}},\"required\":[\"forward\",\"type\"]},\"annualType\":{\"type\":\"string\",\"pattern\":\"Annual\"},\"annualPlot\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"curves\":{\"$ref\":\"#/definitions/curves\",\"default\":[{\"colors\":[\"#00b04b\"],\"fields\":[\"Close\",\"Change\"],\"style\":\"Line\",\"lineWidth\":2,\"visible\":true,\"varyColorPerBar\":false},{\"colors\":[\"#8b6038\"],\"fields\":[\"Close\"],\"style\":\"Line\",\"lineWidth\":2,\"visible\":true,\"varyColorPerBar\":false}]},\"annual\":{\"type\":\"string\"},\"main\":{\"type\":\"boolean\",\"default\":true},\"type\":{\"$ref\":\"#/definitions/annualType\"}},\"required\":[\"annual\",\"type\"]},\"seasonalType\":{\"type\":\"string\",\"pattern\":\"Seasonal\"},\"seasonalPlot\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"curves\":{\"$ref\":\"#/definitions/curves\",\"default\":[{\"fields\":[\"Close\"],\"style\":\"Line\",\"lineWidth\":2,\"visible\":true,\"colors\":[\"#888\"],\"varyColorPerBar\":false}]},\"seasonal\":{\"type\":\"string\"},\"offsets\":{\"$ref\":\"#/definitions/intOffsets\",\"default\":[0]},\"main\":{\"type\":\"boolean\",\"default\":true},\"type\":{\"$ref\":\"#/definitions/seasonalType\"}},\"required\":[\"seasonal\",\"type\"]},\"annPoint\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"price\":{\"type\":\"number\"},\"time\":{\"type\":\"number\"}},\"required\":[\"price\",\"time\"]},\"lineTrait\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"width\":{\"type\":\"number\",\"minimum\":0,\"default\":1},\"color\":{\"$ref\":\"#/definitions/color\",\"default\":\"#000\"},\"dashStyle\":{\"$ref\":\"#/definitions/dashStyle\",\"default\":\"Solid\"}}},\"fillTrait\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"color\":{\"$ref\":\"#/definitions/color\"}}},\"markerTrait\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"vertex\":{\"enum\":[\"start\",\"end\",\"both\",\"none\"]},\"kind\":{\"enum\":[\"arrow\"],\"default\":\"arrow\"}},\"required\":[\"vertex\"]},\"curveTrait\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"curveStyle\":{\"$ref\":\"#/definitions/curveStyle\"},\"line\":{\"$ref\":\"#/definitions/lineTrait\"},\"fill\":{\"$ref\":\"#/definitions/fillTrait\"}},\"required\":[\"curveStyle\"]},\"annTraits\":{\"type\":\"object\",\"additionalProperties\":true,\"properties\":{\"line\":{\"$ref\":\"#/definitions/lineTrait\"},\"fill\":{\"$ref\":\"#/definitions/fillTrait\"},\"marker\":{\"$ref\":\"#/definitions/markerTrait\"},\"zIndex\":{\"type\":\"number\",\"minimum\":1}}},\"annotation\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"id\":{\"$ref\":\"#/definitions/annId\"},\"visible\":{\"type\":\"boolean\",\"default\":true},\"points\":{\"type\":\"array\",\"minItems\":1,\"items\":{\"$ref\":\"#/definitions/annPoint\"}},\"traits\":{\"$ref\":\"#/definitions/annTraits\"}},\"required\":[\"id\",\"points\"]},\"plot\":{\"type\":\"object\",\"oneOf\":[{\"$ref\":\"#/definitions/annualPlot\"},{\"$ref\":\"#/definitions/seasonalPlot\"},{\"$ref\":\"#/definitions/forwardPlot\"},{\"$ref\":\"#/definitions/exprPlot\"},{\"$ref\":\"#/definitions/symbolPlot\"},{\"$ref\":\"#/definitions/fundamentalPlot\"},{\"$ref\":\"#/definitions/studyPlot\"}]},\"annCacheEntry\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"symbol\":{\"type\":\"string\"},\"annotations\":{\"type\":\"array\",\"minItems\":1,\"items\":{\"$ref\":\"#/definitions/annotation\"}}},\"required\":[\"symbol\",\"annotations\"]},\"axis\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"comparison\":{\"$ref\":\"#/definitions/comparison\",\"default\":\"None\"},\"plots\":{\"type\":\"array\",\"minItems\":1,\"items\":{\"$ref\":\"#/definitions/plot\"}},\"annotations\":{\"type\":\"array\",\"minItems\":0,\"items\":{\"$ref\":\"#/definitions/annotation\"}},\"scale\":{\"$ref\":\"#/definitions/scale\",\"default\":\"Linear\"},\"annCache\":{\"type\":\"array\",\"minItems\":0,\"items\":{\"$ref\":\"#/definitions/annCacheEntry\"}}},\"required\":[\"plots\"]},\"pane\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"axes\":{\"type\":\"array\",\"minItems\":1,\"items\":{\"$ref\":\"#/definitions/axis\"}},\"height\":{\"$ref\":\"#/definitions/paneHeight\",\"default\":1}},\"required\":[\"axes\"]}},\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"data\":{\"$ref\":\"#/definitions/data\"},\"display\":{\"$ref\":\"#/definitions/display\"},\"panes\":{\"type\":\"array\",\"minItems\":1,\"items\":{\"$ref\":\"#/definitions/pane\"}},\"version\":{\"type\":\"integer\",\"minimum\":30,\"multipleOf\":1}},\"required\":[\"panes\",\"version\"]}')},165:function(t){t.exports=JSON.parse('{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"JSON schema for Barchart studies for HTML5 Charts\",\"definitions\":{\"studyMetadata\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"title\":{\"type\":\"string\"},\"caption\":{\"type\":\"string\"},\"overlay\":{\"type\":\"boolean\",\"default\":true},\"decimals\":{\"type\":\"number\"},\"range\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"min\":{\"type\":\"number\"},\"max\":{\"type\":\"number\"}}},\"enumerations\":{\"type\":\"array\",\"minItems\":1,\"items\":{\"$ref\":\"#/definitions/enumeration\"}}},\"required\":[\"title\",\"caption\"]},\"enumeration\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"input\":{\"type\":\"string\"},\"values\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}}}},\"studyDefaults\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"curves\":{\"$ref\":\"chart.schema.json#/definitions/curves\"},\"source\":{\"$ref\":\"chart.schema.json#/definitions/curveField\"},\"inputs\":{\"$ref\":\"chart.schema.json#/definitions/inputs\"},\"levels\":{\"$ref\":\"chart.schema.json#/definitions/studyLevels\"},\"bands\":{\"$ref\":\"chart.schema.json#/definitions/studyBands\"}},\"required\":[\"curves\"]},\"studyDefinition\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"id\":{\"$ref\":\"chart.schema.json#/definitions/study\"},\"meta\":{\"$ref\":\"#/definitions/studyMetadata\"},\"defaults\":{\"$ref\":\"#/definitions/studyDefaults\"}},\"required\":[\"id\",\"meta\",\"defaults\"]}},\"type\":\"array\",\"minItems\":1,\"items\":{\"$ref\":\"#/definitions/studyDefinition\"}}')},166:function(t){t.exports=JSON.parse('{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"JSON schema for Barchart fields for HTML5 Charts\",\"definitions\":{\"valueType\":{\"type\":\"string\",\"enum\":[\"Number\",\"String\",\"Date\"],\"default\":\"Number\"},\"fieldCategory\":{\"type\":\"string\",\"enum\":[\"Common\",\"Study\",\"BalanceSheet\",\"IncomeStatement\",\"Event\"],\"default\":\"Common\"},\"fieldFormat\":{\"type\":\"string\",\"enum\":[\"FromMetaData\",\"AsInteger\",\"UseMetricUnit\",\"AsPercent\"],\"default\":\"FromMetaData\"},\"fieldDefinition\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"id\":{\"anyOf\":[{\"$ref\":\"chart.schema.json#/definitions/curveField\"},{\"$ref\":\"chart.schema.json#/definitions/eventField\"}]},\"type\":{\"$ref\":\"#/definitions/valueType\"},\"category\":{\"$ref\":\"#/definitions/fieldCategory\"},\"name\":{\"type\":\"string\",\"default\":null},\"shortName\":{\"type\":\"string\",\"default\":null},\"format\":{\"$ref\":\"#/definitions/fieldFormat\"}},\"required\":[\"id\"]}},\"type\":\"array\",\"minItems\":1,\"items\":{\"$ref\":\"#/definitions/fieldDefinition\"}}')},167:function(t){t.exports=JSON.parse('{\"$schema\":\"http://json-schema.org/draft-04/schema\",\"title\":\"JSON schema for the Barchart API of the HTML5 Charts\",\"definitions\":{\"curvesNonStrict\":{\"type\":\"array\",\"maxItems\":1,\"items\":{\"$ref\":\"chart.schema.json#/definitions/curveNonStrict\"}},\"mainPlotSymbolContext\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"symbol\":{\"type\":\"string\"}},\"required\":[\"symbol\"]},\"mainPlotExpressionContext\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"expression\":{\"type\":\"string\"}},\"required\":[\"expression\"]},\"mainPlotForwardContext\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"forward\":{\"type\":\"string\"}},\"required\":[\"forward\"]},\"mainPlotSeasonalContext\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"seasonal\":{\"type\":\"string\"}},\"required\":[\"seasonal\"]},\"mainPlotAnnualContext\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"annual\":{\"type\":\"string\"}},\"required\":[\"annual\"]},\"mainPlotAccessor\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"id\":{\"type\":\"string\",\"pattern\":\"MainPlot\"},\"context\":{\"oneOf\":[{\"$ref\":\"#/definitions/mainPlotSymbolContext\"},{\"$ref\":\"#/definitions/mainPlotExpressionContext\"},{\"$ref\":\"#/definitions/mainPlotForwardContext\"},{\"$ref\":\"#/definitions/mainPlotSeasonalContext\"},{\"$ref\":\"#/definitions/mainPlotAnnualContext\"}]}},\"required\":[\"id\",\"context\"]},\"aggregationAccessor\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"id\":{\"type\":\"string\",\"pattern\":\"Aggregation\"},\"context\":{\"$ref\":\"chart.schema.json#/definitions/aggregation\"}},\"required\":[\"id\",\"context\"]},\"periodContext\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"period\":{\"$ref\":\"chart.schema.json#/definitions/period\"}},\"required\":[\"period\"]},\"rangeContext\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"range\":{\"$ref\":\"chart.schema.json#/definitions/range\"}},\"required\":[\"range\"]},\"densityContext\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"density\":{\"$ref\":\"chart.schema.json#/definitions/density\"}},\"required\":[\"density\"]},\"periodAccessor\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"id\":{\"type\":\"string\",\"pattern\":\"Period\"},\"context\":{\"oneOf\":[{\"$ref\":\"#/definitions/periodContext\"},{\"$ref\":\"#/definitions/rangeContext\"},{\"$ref\":\"#/definitions/densityContext\"}]}},\"required\":[\"id\",\"context\"]},\"crosshairAccessor\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"id\":{\"type\":\"string\",\"pattern\":\"Crosshair\"},\"context\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"crosshair\":{\"$ref\":\"chart.schema.json#/definitions/orientationChoice\"}},\"required\":[\"crosshair\"]}},\"required\":[\"id\",\"context\"]},\"tooltipAccessor\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"id\":{\"type\":\"string\",\"pattern\":\"Tooltip\"},\"context\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"visible\":{\"type\":\"boolean\"},\"mode\":{\"type\":\"string\",\"enum\":[\"standard\",\"cards\",\"external\"]}},\"required\":[\"visible\"]}},\"required\":[\"id\",\"context\"]},\"eventsAccessor\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"id\":{\"type\":\"string\",\"pattern\":\"Events\"},\"context\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"dividends\":{\"type\":\"boolean\"},\"earnings\":{\"type\":\"boolean\"},\"splits\":{\"type\":\"boolean\"}}}},\"required\":[\"id\",\"context\"]},\"axisPadding\":{\"type\":\"number\",\"minimum\":0.001,\"maximum\":1},\"scaleAccessor\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"id\":{\"type\":\"string\",\"pattern\":\"Scale\"},\"context\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"scale\":{\"type\":\"string\",\"enum\":[\"Linear\",\"Logarithmic\"]},\"marginBars\":{\"type\":\"number\",\"minimum\":0},\"minPadding\":{\"$ref\":\"#/definitions/axisPadding\"},\"maxPadding\":{\"$ref\":\"#/definitions/axisPadding\"},\"preventLabelOverlap\":{\"type\":\"boolean\"},\"snapAnnotationsToPrices\":{\"type\":\"boolean\"}}}},\"required\":[\"id\",\"context\"]},\"otherAccessor\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"id\":{\"type\":\"string\",\"pattern\":\"Other\"},\"context\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"percentChange\":{\"type\":\"boolean\"},\"comparisonMode\":{\"type\":\"string\",\"enum\":[\"None\",\"Percent\",\"Value\"]},\"showLastValue\":{\"type\":\"string\",\"enum\":[\"None\",\"All\",\"Main\"]},\"gridLines\":{\"$ref\":\"chart.schema.json#/definitions/orientationChoice\"},\"minorGridLines\":{\"$ref\":\"chart.schema.json#/definitions/orientationChoice\"},\"newPaneHeight\":{\"type\":\"number\",\"minimum\":0.01},\"showNavigator\":{\"type\":\"boolean\"},\"plotHover\":{\"type\":\"boolean\"}}}},\"required\":[\"id\",\"context\"]},\"placement\":{\"type\":\"string\",\"enum\":[\"overlay\",\"standalone\",\"withMain\",\"clone\"]},\"plotAccessor\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"id\":{\"type\":\"string\",\"pattern\":\"Plot\"},\"context\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"id\":{\"type\":\"string\",\"enum\":[\"Add\",\"Get\",\"Delete\",\"Update\"]},\"type\":{\"type\":\"string\",\"enum\":[\"Symbol\",\"Study\",\"IncomeStatement\",\"BalanceSheet\",\"Expression\",\"Forward\",\"Seasonal\",\"Annual\"]},\"main\":{\"type\":\"boolean\"},\"index\":{\"$ref\":\"chart.schema.json#/definitions/intOffset\"},\"studyId\":{\"$ref\":\"chart.schema.json#/definitions/study\"},\"fundamentalId\":{\"$ref\":\"chart.schema.json#/definitions/fundamental\"},\"expression\":{\"type\":\"string\"},\"forward\":{\"type\":\"string\"},\"seasonal\":{\"type\":\"string\"},\"annual\":{\"type\":\"string\"},\"frequency\":{\"$ref\":\"chart.schema.json#/definitions/fundamentalFrequency\",\"default\":\"Quarter\"},\"inputs\":{\"$ref\":\"chart.schema.json#/definitions/inputs\"},\"curves\":{\"$ref\":\"#/definitions/curvesNonStrict\"},\"levels\":{\"$ref\":\"chart.schema.json#/definitions/studyLevels\"},\"bands\":{\"$ref\":\"chart.schema.json#/definitions/studyBands\"},\"placement\":{\"$ref\":\"#/definitions/placement\"},\"cloneIndex\":{\"$ref\":\"chart.schema.json#/definitions/intOffset\"},\"offsets\":{\"$ref\":\"chart.schema.json#/definitions/intOffsets\"}},\"required\":[\"id\"]}},\"required\":[\"id\",\"context\"]},\"curveOptional\":{},\"compareSymbol\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"symbol\":{\"type\":\"string\"},\"leftScale\":{\"type\":\"boolean\",\"default\":false},\"curves\":{\"$ref\":\"#/definitions/curvesNonStrict\"}},\"required\":[\"symbol\"]},\"compareAccessor\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"id\":{\"type\":\"string\",\"pattern\":\"Compare\"},\"context\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"symbols\":{\"type\":\"array\",\"minItems\":1,\"items\":{\"$ref\":\"#/definitions/compareSymbol\"}}}}},\"required\":[\"id\",\"context\"]},\"annotationAccessor\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"id\":{\"type\":\"string\",\"pattern\":\"Annotation\"},\"context\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"id\":{\"type\":\"string\",\"enum\":[\"Delete\",\"Update\",\"Duplicate\",\"List\"]},\"uid\":{\"type\":\"string\",\"default\":\"\"},\"visible\":{\"type\":\"boolean\"},\"traits\":{\"$ref\":\"chart.schema.json#/definitions/annTraits\"},\"extras\":{\"type\":\"object\",\"additionalProperties\":true},\"points\":{\"type\":\"array\",\"items\":{\"$ref\":\"chart.schema.json#/definitions/annPoint\"}}},\"required\":[\"id\"]}},\"required\":[\"id\",\"context\"]},\"movePaneAccessor\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"id\":{\"type\":\"string\",\"pattern\":\"MovePane\"},\"context\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"from\":{\"$ref\":\"chart.schema.json#/definitions/intOffset\"},\"to\":{\"$ref\":\"chart.schema.json#/definitions/intOffset\"}},\"required\":[\"from\",\"to\"]}},\"required\":[\"id\",\"context\"]},\"templateAccessor\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"id\":{\"type\":\"string\",\"pattern\":\"Template\"},\"context\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"strip\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"main\":{\"type\":\"boolean\",\"default\":true},\"annotations\":{\"type\":\"boolean\",\"default\":false},\"compare\":{\"type\":\"boolean\",\"default\":false}}}},\"required\":[\"strip\"]}},\"required\":[\"id\",\"context\"]},\"outlineAccessor\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"id\":{\"type\":\"string\",\"pattern\":\"Outline\"},\"context\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"id\":{\"type\":\"string\",\"pattern\":\"Get\"}},\"required\":[\"id\"]}},\"required\":[\"id\",\"context\"]},\"themeAccessor\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"id\":{\"type\":\"string\",\"pattern\":\"Theme\"},\"context\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"backgroundColor\":{\"$ref\":\"chart.schema.json#/definitions/color\"},\"axis\":{\"type\":\"object\",\"additionalProperties\":false,\"properties\":{\"gridLinesColor\":{\"$ref\":\"chart.schema.json#/definitions/color\"},\"gridLinesStyle\":{\"$ref\":\"chart.schema.json#/definitions/dashStyle\"},\"textColor\":{\"$ref\":\"chart.schema.json#/definitions/color\"},\"crosshairColor\":{\"$ref\":\"chart.schema.json#/definitions/color\"}}}}}}}},\"type\":\"object\",\"oneOf\":[{\"$ref\":\"#/definitions/mainPlotAccessor\"},{\"$ref\":\"#/definitions/aggregationAccessor\"},{\"$ref\":\"#/definitions/periodAccessor\"},{\"$ref\":\"#/definitions/crosshairAccessor\"},{\"$ref\":\"#/definitions/tooltipAccessor\"},{\"$ref\":\"#/definitions/eventsAccessor\"},{\"$ref\":\"#/definitions/scaleAccessor\"},{\"$ref\":\"#/definitions/otherAccessor\"},{\"$ref\":\"#/definitions/plotAccessor\"},{\"$ref\":\"#/definitions/compareAccessor\"},{\"$ref\":\"#/definitions/annotationAccessor\"},{\"$ref\":\"#/definitions/movePaneAccessor\"},{\"$ref\":\"#/definitions/templateAccessor\"},{\"$ref\":\"#/definitions/outlineAccessor\"},{\"$ref\":\"#/definitions/themeAccessor\"}]}')},168:function(t){t.exports=JSON.parse('[{\"id\":\"MA\",\"meta\":{\"title\":\"Moving Average\",\"caption\":\"Moving Average\",\"overlay\":true,\"enumerations\":[{\"input\":\"Source\",\"values\":[\"Open\",\"High\",\"Low\",\"Close\"]}]},\"defaults\":{\"inputs\":[{\"name\":\"Period\",\"value\":20},{\"name\":\"Source\",\"value\":\"Close\"}],\"curves\":[{\"colors\":[\"#808080\"],\"fields\":[\"MA\"]}]}},{\"id\":\"CSHO\",\"meta\":{\"title\":\"Cash Overlay\",\"caption\":\"Cash Overlay\",\"overlay\":true},\"defaults\":{\"source\":\"Symbol\",\"curves\":[{\"colors\":[\"#834c3f\"],\"fields\":[\"CSHO\"]}]}},{\"id\":\"CSHB\",\"meta\":{\"title\":\"Cash Basis\",\"caption\":\"Cash Basis\",\"overlay\":false},\"defaults\":{\"source\":\"Symbol\",\"curves\":[{\"colors\":[\"#b2b900\"],\"fields\":[\"CSHB\"]}]}},{\"id\":\"MAVOL\",\"meta\":{\"title\":\"Volume Moving Average\",\"caption\":\"Volume Moving Average\",\"overlay\":false},\"defaults\":{\"source\":\"Volume\",\"inputs\":[{\"name\":\"Period\",\"value\":10}],\"curves\":[{\"colors\":[\"#9075d6\"],\"fields\":[\"VOLMA\"]},{\"attributes\":[\"ChangeBased\"],\"colors\":[\"#ef4226\",\"#00b04b\",\"#1f4bb6\"],\"fields\":[\"Volume\"],\"style\":\"Column\",\"varyColorPerBar\":true}]}},{\"id\":\"OSCI\",\"meta\":{\"title\":\"Oscillator\",\"caption\":\"Oscillator\",\"overlay\":false},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"Period1\",\"value\":5},{\"name\":\"Period2\",\"value\":10}],\"curves\":[{\"colors\":[\"#ae272d\"],\"fields\":[\"OSC\"]}]}},{\"id\":\"OSCIVOL\",\"meta\":{\"title\":\"Volume Oscillator\",\"caption\":\"Volume Oscillator\",\"overlay\":false},\"defaults\":{\"source\":\"Volume\",\"inputs\":[{\"name\":\"Period1\",\"value\":5},{\"name\":\"Period2\",\"value\":10}],\"curves\":[{\"colors\":[\"#9326ff\"],\"fields\":[\"VOSC\"]}]}},{\"id\":\"MAENV\",\"meta\":{\"title\":\"Moving Average Envelope\",\"caption\":\"Moving Average Envelope\",\"overlay\":true},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"Period\",\"value\":10},{\"name\":\"Percent\",\"value\":3}],\"curves\":[{\"colors\":[\"#2284dd\"],\"fields\":[\"ENVU\"]},{\"colors\":[\"#25329b\"],\"fields\":[\"ENVD\"]},{\"colors\":[\"rgba(37, 50, 155, 0.1)\"],\"fields\":[\"ENVU\",\"ENVD\"],\"style\":\"Ribbon\",\"lineWidth\":0}]}},{\"id\":\"LINRCHN\",\"meta\":{\"title\":\"Linear Regression Channel\",\"caption\":\"Linear Regression Channel\",\"overlay\":true},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"Period\",\"value\":100},{\"name\":\"Width\",\"value\":2}],\"curves\":[{\"colors\":[\"rgba(0, 0, 255, 0.3)\"],\"fields\":[\"LINRUP\"]},{\"colors\":[\"rgba(255, 0, 0, 0.3)\"],\"fields\":[\"LINRMID\"]},{\"colors\":[\"rgba(0, 0, 255, 0.3)\"],\"fields\":[\"LINRLOW\"]},{\"colors\":[\"rgba(0, 0, 255, 0.1)\"],\"fields\":[\"LINRUP\",\"LINRMID\"],\"style\":\"Ribbon\",\"lineWidth\":0},{\"colors\":[\"rgba(255, 0, 0, 0.1)\"],\"fields\":[\"LINRMID\",\"LINRLOW\"],\"style\":\"Ribbon\",\"lineWidth\":0}]}},{\"id\":\"MAENVEXP\",\"meta\":{\"title\":\"Moving Average Envelope Exponential\",\"caption\":\"Moving Average Envelope Exponential\",\"overlay\":true},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"Period\",\"value\":10},{\"name\":\"Percent\",\"value\":3}],\"curves\":[{\"colors\":[\"#2284dd\"],\"fields\":[\"ENVEXPU\"]},{\"colors\":[\"#25329b\"],\"fields\":[\"ENVEXPD\"]},{\"colors\":[\"rgba(37, 50, 155, 0.1)\"],\"fields\":[\"ENVEXPU\",\"ENVEXPD\"],\"style\":\"Ribbon\",\"lineWidth\":0}]}},{\"id\":\"MAENVSMO\",\"meta\":{\"title\":\"Moving Average Envelope Smoothed\",\"caption\":\"Moving Average Envelope Smoothed\",\"overlay\":true},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"Period\",\"value\":10},{\"name\":\"Percent\",\"value\":3}],\"curves\":[{\"colors\":[\"#2284dd\"],\"fields\":[\"ENVSMOU\"]},{\"colors\":[\"#25329b\"],\"fields\":[\"ENVSMOD\"]},{\"colors\":[\"rgba(37, 50, 155, 0.1)\"],\"fields\":[\"ENVSMOU\",\"ENVSMOD\"],\"style\":\"Ribbon\",\"lineWidth\":0}]}},{\"id\":\"MAEXP\",\"meta\":{\"title\":\"Moving Average Exponential\",\"caption\":\"Moving Average Exponential\",\"overlay\":true,\"enumerations\":[{\"input\":\"Source\",\"values\":[\"Open\",\"High\",\"Low\",\"Close\"]}]},\"defaults\":{\"inputs\":[{\"name\":\"Period\",\"value\":20},{\"name\":\"Source\",\"value\":\"Close\"}],\"curves\":[{\"colors\":[\"#ae272d\"],\"fields\":[\"EMA\"]}]}},{\"id\":\"MASMO\",\"meta\":{\"title\":\"Moving Average Smoothed\",\"caption\":\"Moving Average Smoothed\",\"overlay\":true},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"Period\",\"value\":9}],\"curves\":[{\"colors\":[\"#743800\"],\"fields\":[\"SMA\"]}]}},{\"id\":\"MATRI\",\"meta\":{\"title\":\"Moving Average Triangular\",\"caption\":\"Moving Average Triangular\",\"overlay\":true},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"Period\",\"value\":20}],\"curves\":[{\"colors\":[\"#888\"],\"fields\":[\"TMA\"]}]}},{\"id\":\"MAWEI\",\"meta\":{\"title\":\"Moving Average Weighted\",\"caption\":\"Moving Average Weighted\",\"overlay\":true},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"Period\",\"value\":20}],\"curves\":[{\"colors\":[\"#bc41ce\"],\"fields\":[\"WMA\"]}]}},{\"id\":\"MAHLC\",\"meta\":{\"title\":\"Moving Average High/Low\",\"caption\":\"Moving Average High/Low\",\"overlay\":true},\"defaults\":{\"inputs\":[{\"name\":\"Period1\",\"value\":10},{\"name\":\"Period2\",\"value\":8}],\"curves\":[{\"colors\":[\"#00b04b\"],\"fields\":[\"MAHI\"]},{\"colors\":[\"#ef4226\"],\"fields\":[\"MALO\"]}]}},{\"id\":\"MACD\",\"meta\":{\"title\":\"MACD Oscillator\",\"caption\":\"MACD Oscillator\",\"overlay\":false},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"Period1\",\"value\":12},{\"name\":\"Period2\",\"value\":26},{\"name\":\"Period3\",\"value\":9}],\"curves\":[{\"colors\":[\"#808080\"],\"fields\":[\"MACD\"]},{\"colors\":[\"#9326ff\"],\"fields\":[\"MACDS\"]},{\"colors\":[\"#711\",\"#0aa\"],\"fields\":[\"MACDH\"],\"style\":\"Column\",\"zones\":[{\"value\":0,\"colors\":1},{\"colors\":1}]}]}},{\"id\":\"MACDEXP\",\"meta\":{\"title\":\"MACD Oscillator Exponential\",\"caption\":\"MACD Oscillator Exponential\",\"overlay\":false},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"Period1\",\"value\":12},{\"name\":\"Period2\",\"value\":26},{\"name\":\"Period3\",\"value\":9}],\"curves\":[{\"colors\":[\"#808080\"],\"fields\":[\"MACD\"]},{\"colors\":[\"#bc41ce\"],\"fields\":[\"MACDS\"]},{\"colors\":[\"#711\",\"#0aa\"],\"fields\":[\"MACDH\"],\"style\":\"Column\",\"zones\":[{\"value\":0,\"colors\":1},{\"colors\":1}]}]}},{\"id\":\"VOL\",\"meta\":{\"title\":\"Volume\",\"caption\":\"Volume\",\"overlay\":false},\"defaults\":{\"curves\":[{\"attributes\":[\"ChangeBased\"],\"colors\":[\"#ef4226\",\"#00b04b\",\"#1f4bb6\"],\"fields\":[\"Volume\"],\"style\":\"Column\",\"varyColorPerBar\":true},{\"colors\":[\"#bb45cc\"],\"fields\":[\"OpenInterest\"]}]}},{\"id\":\"OPINT\",\"meta\":{\"title\":\"Open Interest\",\"caption\":\"Open Interest\",\"overlay\":false},\"defaults\":{\"curves\":[{\"colors\":[\"#bb45cc\"],\"fields\":[\"OpenInterest\"]}]}},{\"id\":\"RSI\",\"meta\":{\"title\":\"Relative Strength Index\",\"caption\":\"Relative Strength Index\",\"overlay\":false,\"decimals\":2,\"range\":{\"min\":0,\"max\":100}},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"Period\",\"value\":14}],\"curves\":[{\"style\":\"Area\",\"colors\":[\"rgba(252, 13, 27, 0.3)\",\"rgba(0,0,0,0)\",\"#00b04b\",\"rgba(12, 50, 255, 0.3)\"],\"fields\":[\"RSI\"],\"zones\":[{\"value\":30,\"colors\":1},{\"value\":70,\"colors\":2},{\"colors\":1}]}],\"levels\":[{\"value\":30,\"name\":\"Oversold\",\"line\":{\"color\":\"#444\"}},{\"value\":50,\"line\":{\"color\":\"#444\",\"dashStyle\":\"DashDot\"}},{\"value\":70,\"name\":\"Overbought\",\"line\":{\"color\":\"#444\"}}]}},{\"id\":\"RSIMOD\",\"meta\":{\"title\":\"Relative Strength Index Modified\",\"caption\":\"Relative Strength Index Modified\",\"overlay\":false,\"decimals\":2,\"range\":{\"min\":0,\"max\":100}},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"Period\",\"value\":14}],\"curves\":[{\"style\":\"Area\",\"colors\":[\"rgba(252, 13, 27, 0.3)\",\"rgba(0,0,0,0)\",\"#00b04b\",\"rgba(12, 50, 255, 0.3)\"],\"fields\":[\"RSI\"],\"zones\":[{\"value\":30,\"colors\":1},{\"value\":70,\"colors\":2},{\"colors\":1}]}],\"levels\":[{\"value\":30,\"name\":\"Oversold\",\"line\":{\"color\":\"#444\"}},{\"value\":50,\"line\":{\"color\":\"#444\",\"dashStyle\":\"DashDot\"}},{\"value\":70,\"name\":\"Overbought\",\"line\":{\"color\":\"#444\"}}]}},{\"id\":\"RSISTO\",\"meta\":{\"title\":\"Stochastic RSI\",\"caption\":\"Stochastic RSI\",\"overlay\":false,\"decimals\":2,\"range\":{\"min\":0,\"max\":1}},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"Period\",\"value\":14},{\"name\":\"Range\",\"value\":20}],\"curves\":[{\"style\":\"Area\",\"colors\":[\"rgba(252, 13, 27, 0.3)\",\"rgba(0,0,0,0)\",\"#00b04b\",\"rgba(12, 50, 255, 0.3)\"],\"fields\":[\"STORSI\"],\"zones\":[{\"value\":0.2,\"colors\":1},{\"value\":0.8,\"colors\":2},{\"colors\":1}]}],\"levels\":[{\"value\":0.2,\"name\":\"Oversold\",\"line\":{\"color\":\"#444\"}},{\"value\":0.5,\"line\":{\"color\":\"#444\",\"dashStyle\":\"DashDot\"}},{\"value\":0.8,\"name\":\"Overbought\",\"line\":{\"color\":\"#444\"}}]}},{\"id\":\"HHLL\",\"meta\":{\"title\":\"Highest High Lowest Low\",\"caption\":\"Highest High Lowest Low\",\"overlay\":true},\"defaults\":{\"inputs\":[{\"name\":\"Period1\",\"value\":10},{\"name\":\"Period2\",\"value\":10}],\"curves\":[{\"colors\":[\"#00b04b\"],\"fields\":[\"HH\"]},{\"colors\":[\"#ef4226\"],\"fields\":[\"LL\"]}]}},{\"id\":\"WGCL\",\"meta\":{\"title\":\"Weighted Close\",\"caption\":\"Weighted Close\",\"overlay\":true},\"defaults\":{\"curves\":[{\"colors\":[\"#f18900\"],\"fields\":[\"WGCL\"]}]}},{\"id\":\"WPERCR\",\"meta\":{\"title\":\"Percent R\",\"caption\":\"Percent R\",\"overlay\":false,\"decimals\":2},\"defaults\":{\"inputs\":[{\"name\":\"Period\",\"value\":14}],\"curves\":[{\"colors\":[\"#ff6e00\"],\"fields\":[\"PercR\"]}],\"levels\":[{\"value\":-80,\"name\":\"Oversold\",\"line\":{\"color\":\"#606060\",\"dashStyle\":\"Dash\"}},{\"value\":-20,\"name\":\"Overbought\",\"line\":{\"color\":\"#606060\",\"dashStyle\":\"Dash\"}}],\"bands\":[{\"fill\":{\"color\":\"rgba(152, 21, 255, 0.1)\"},\"range\":{\"from\":-80,\"to\":-20}}]}},{\"id\":\"STOCHF\",\"meta\":{\"title\":\"Stochastic, Fast\",\"caption\":\"Stochastic, Fast\",\"overlay\":false,\"decimals\":2,\"range\":{\"min\":0,\"max\":100},\"enumerations\":[{\"input\":\"Smoothing\",\"values\":[\"MA\",\"EMA\",\"SMA\"]}]},\"defaults\":{\"inputs\":[{\"name\":\"Period1\",\"value\":14},{\"name\":\"Period2\",\"value\":3},{\"name\":\"Smoothing\",\"value\":\"MA\"}],\"curves\":[{\"colors\":[\"#f18900\"],\"fields\":[\"PercK\"]},{\"colors\":[\"#00b04b\"],\"fields\":[\"PercD\"]}],\"levels\":[{\"value\":20,\"name\":\"Oversold\",\"line\":{\"color\":\"#3a45a2\"}},{\"value\":50,\"line\":{\"color\":\"#3a45a2\",\"dashStyle\":\"DashDot\"}},{\"value\":80,\"name\":\"Overbought\",\"line\":{\"color\":\"#3a45a2\"}}]}},{\"id\":\"STOCHS\",\"meta\":{\"title\":\"Stochastic, Slow\",\"caption\":\"Stochastic, Slow\",\"overlay\":false,\"decimals\":2,\"range\":{\"min\":0,\"max\":100},\"enumerations\":[{\"input\":\"Smoothing\",\"values\":[\"MA\",\"EMA\",\"SMA\"]}]},\"defaults\":{\"inputs\":[{\"name\":\"Period1\",\"value\":14},{\"name\":\"Period2\",\"value\":3},{\"name\":\"Period3\",\"value\":3},{\"name\":\"Smoothing\",\"value\":\"MA\"}],\"curves\":[{\"colors\":[\"#808080\"],\"fields\":[\"PercK\"]},{\"colors\":[\"#f18900\"],\"fields\":[\"PercD\"]}],\"levels\":[{\"value\":20,\"name\":\"Oversold\",\"line\":{\"color\":\"#3a45a2\"}},{\"value\":50,\"line\":{\"color\":\"#3a45a2\",\"dashStyle\":\"DashDot\"}},{\"value\":80,\"name\":\"Overbought\",\"line\":{\"color\":\"#3a45a2\"}}]}},{\"id\":\"BBANDS\",\"meta\":{\"title\":\"Bollinger Bands\",\"caption\":\"Bollinger Bands\",\"overlay\":true},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"Period\",\"value\":20},{\"name\":\"Width\",\"value\":2}],\"curves\":[{\"colors\":[\"#9075d6\"],\"fields\":[\"BOLLBU\"]},{\"colors\":[\"#89211e\"],\"fields\":[\"BOLLBM\"]},{\"colors\":[\"#00aaab\"],\"fields\":[\"BOLLBL\"]},{\"colors\":[\"rgba(0, 170, 171, 0.1)\"],\"fields\":[\"BOLLBU\",\"BOLLBL\"],\"style\":\"Ribbon\",\"lineWidth\":0}]}},{\"id\":\"BWIDTH\",\"meta\":{\"title\":\"Bollinger Width\",\"caption\":\"Bollinger Width\",\"overlay\":false},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"Period\",\"value\":20},{\"name\":\"Width\",\"value\":2}],\"curves\":[{\"colors\":[\"#f18900\"],\"fields\":[\"BOLLBW\"]}]}},{\"id\":\"BPERC\",\"meta\":{\"title\":\"Bollinger Bands %B\",\"caption\":\"Bollinger Bands %B\",\"decimals\":4,\"overlay\":false},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"Period\",\"value\":20},{\"name\":\"Width\",\"value\":2}],\"curves\":[{\"colors\":[\"#138484\"],\"fields\":[\"BOLLBP\"]}],\"levels\":[{\"value\":0,\"name\":\"Oversold\",\"line\":{\"color\":\"#606060\",\"dashStyle\":\"Dash\"}},{\"value\":1,\"name\":\"Overbought\",\"line\":{\"color\":\"#606060\",\"dashStyle\":\"Dash\"}}],\"bands\":[{\"fill\":{\"color\":\"rgba(19, 132, 132, 0.1)\"},\"range\":{\"from\":0,\"to\":1}}]}},{\"id\":\"OBVOL\",\"meta\":{\"title\":\"On Balance Volume\",\"caption\":\"On Balance Volume\",\"overlay\":false},\"defaults\":{\"curves\":[{\"colors\":[\"#2284dd\"],\"fields\":[\"OBVOL\"]}]}},{\"id\":\"ATR\",\"meta\":{\"title\":\"Average True Range\",\"caption\":\"Average True Range\",\"overlay\":false,\"enumerations\":[{\"input\":\"Smoothing\",\"values\":[\"SMA\",\"MA\",\"EMA\",\"WMA\"]}]},\"defaults\":{\"inputs\":[{\"name\":\"Period\",\"value\":14},{\"name\":\"Smoothing\",\"value\":\"SMA\"},{\"name\":\"Period2\",\"value\":20}],\"curves\":[{\"colors\":[\"#ffaf1c\"],\"fields\":[\"ATR\"]},{\"colors\":[\"#1c6cff\"],\"fields\":[\"ATRMA\"]}]}},{\"id\":\"ADJATR\",\"meta\":{\"title\":\"Average True Range Adjusted\",\"caption\":\"Average True Range Adjusted\",\"overlay\":false,\"enumerations\":[{\"input\":\"Smoothing\",\"values\":[\"SMA\",\"MA\",\"EMA\",\"WMA\"]}]},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"Period\",\"value\":20},{\"name\":\"Smoothing\",\"value\":\"MA\"}],\"curves\":[{\"colors\":[\"#ffaf1c\"],\"fields\":[\"ADJATR\"]}]}},{\"id\":\"COTR\",\"meta\":{\"title\":\"Change over True Range\",\"caption\":\"Change over True Range\",\"overlay\":false,\"enumerations\":[{\"input\":\"Smoothing\",\"values\":[\"SMA\",\"MA\",\"EMA\",\"WMA\"]},{\"input\":\"TypeOfATR\",\"values\":[\"ATR\",\"ADJATR\"]}]},\"defaults\":{\"inputs\":[{\"name\":\"Period\",\"value\":14},{\"name\":\"Smoothing\",\"value\":\"SMA\"},{\"name\":\"TypeOfATR\",\"value\":\"ATR\"}],\"curves\":[{\"colors\":[\"#ffaf1c\"],\"fields\":[\"COTR\"]}]}},{\"id\":\"ADX\",\"meta\":{\"title\":\"Average Directional Index\",\"caption\":\"Average Directional Index\",\"overlay\":false},\"defaults\":{\"inputs\":[{\"name\":\"AdxSmoothing\",\"value\":14},{\"name\":\"DiLength\",\"value\":14}],\"curves\":[{\"colors\":[\"#bc41ce\"],\"fields\":[\"MDI\"]},{\"colors\":[\"#ffaf1c\"],\"fields\":[\"PDI\"]},{\"colors\":[\"#00aaab\"],\"fields\":[\"ADX\"]}]}},{\"id\":\"ADXMOD\",\"meta\":{\"title\":\"Average Directional Index Modified\",\"caption\":\"Average Directional Index Modified\",\"overlay\":false},\"defaults\":{\"inputs\":[{\"name\":\"AdxSmoothing\",\"value\":14},{\"name\":\"DiLength\",\"value\":14}],\"curves\":[{\"colors\":[\"#25329b\"],\"fields\":[\"MDI\"]},{\"colors\":[\"#ffaf1c\"],\"fields\":[\"PDI\"]},{\"colors\":[\"#9326ff\"],\"fields\":[\"ADXM\"]}]}},{\"id\":\"ADL\",\"meta\":{\"title\":\"Chaikin Accumulation Distribution\",\"caption\":\"Chaikin Accumulation Distribution\",\"overlay\":false},\"defaults\":{\"curves\":[{\"colors\":[\"#f18900\"],\"fields\":[\"ADL\"]}]}},{\"id\":\"ADWM\",\"meta\":{\"title\":\"Accumulation/Distribution Williams\",\"caption\":\"Accumulation/Distribution Williams\",\"overlay\":false},\"defaults\":{\"inputs\":[{\"name\":\"Period\",\"value\":14}],\"curves\":[{\"colors\":[\"#f18900\"],\"fields\":[\"ADWM\"]},{\"colors\":[\"#00aaab\"],\"fields\":[\"ADWMMA\"]}]}},{\"id\":\"CHAOSC\",\"meta\":{\"title\":\"Chaikin Oscillator\",\"caption\":\"Chaikin Oscillator\",\"overlay\":false},\"defaults\":{\"curves\":[{\"colors\":[\"#2284dd\"],\"fields\":[\"CHAOSC\"]}]}},{\"id\":\"TP\",\"meta\":{\"title\":\"Typical Price\",\"caption\":\"Typical Price\",\"overlay\":true},\"defaults\":{\"curves\":[{\"colors\":[\"#bc41ce\"],\"fields\":[\"TP\"]}]}},{\"id\":\"KELCHN\",\"meta\":{\"title\":\"Keltner Channel\",\"caption\":\"Keltner Channel\",\"overlay\":true},\"defaults\":{\"inputs\":[{\"name\":\"Period\",\"value\":20}],\"curves\":[{\"colors\":[\"#f18900\"],\"fields\":[\"KCUP\"]},{\"colors\":[\"#2284dd\"],\"fields\":[\"KCMID\"]},{\"colors\":[\"#480048\"],\"fields\":[\"KCLOW\"]},{\"colors\":[\"rgba(72, 0, 72, 0.1)\"],\"fields\":[\"KCUP\",\"KCLOW\"],\"style\":\"Ribbon\",\"lineWidth\":0}]}},{\"id\":\"KELEXP\",\"meta\":{\"title\":\"Keltner Channel Exponential\",\"caption\":\"Keltner Channel Exponential\",\"overlay\":true},\"defaults\":{\"inputs\":[{\"name\":\"Period\",\"value\":20}],\"curves\":[{\"colors\":[\"#f18900\"],\"fields\":[\"KCEUP\"]},{\"colors\":[\"#2284dd\"],\"fields\":[\"KCEMID\"]},{\"colors\":[\"#480048\"],\"fields\":[\"KCELOW\"]},{\"colors\":[\"rgba(72, 0, 72, 0.1)\"],\"fields\":[\"KCEUP\",\"KCELOW\"],\"style\":\"Ribbon\",\"lineWidth\":0}]}},{\"id\":\"KELBND\",\"meta\":{\"title\":\"Keltner Bands\",\"caption\":\"Keltner Bands\",\"overlay\":true},\"defaults\":{\"inputs\":[{\"name\":\"Period\",\"value\":20},{\"name\":\"Multiplier\",\"value\":2.5}],\"curves\":[{\"colors\":[\"#f18900\"],\"fields\":[\"KBUP\"]},{\"colors\":[\"#2284dd\"],\"fields\":[\"KBMID\"]},{\"colors\":[\"#480048\"],\"fields\":[\"KBLOW\"]},{\"colors\":[\"rgba(72, 0, 72, 0.1)\"],\"fields\":[\"KBUP\",\"KBLOW\"],\"style\":\"Ribbon\",\"lineWidth\":0}]}},{\"id\":\"DONCHN\",\"meta\":{\"title\":\"Donchian Channel\",\"caption\":\"Donchian Channel\",\"overlay\":true},\"defaults\":{\"inputs\":[{\"name\":\"Period\",\"value\":20}],\"curves\":[{\"colors\":[\"#00b04b\"],\"fields\":[\"DONUP\"]},{\"colors\":[\"#ff6a00\"],\"fields\":[\"DONMID\"]},{\"colors\":[\"#0c32ff\"],\"fields\":[\"DONLOW\"]},{\"colors\":[\"rgba(12, 50, 255, 0.1)\"],\"fields\":[\"DONUP\",\"DONLOW\"],\"style\":\"Ribbon\",\"lineWidth\":0}]}},{\"id\":\"DONWIDTH\",\"meta\":{\"title\":\"Donchian Width\",\"caption\":\"Donchian Width\",\"overlay\":false},\"defaults\":{\"inputs\":[{\"name\":\"Period\",\"value\":20}],\"curves\":[{\"colors\":[\"#480048\"],\"fields\":[\"DONW\"]}]}},{\"id\":\"PVT\",\"meta\":{\"title\":\"Price Volume Trend\",\"caption\":\"Price Volume Trend\",\"overlay\":false},\"defaults\":{\"curves\":[{\"colors\":[\"#ae272d\"],\"fields\":[\"PVT\"]}]}},{\"id\":\"ROC\",\"meta\":{\"title\":\"Rate Of Change\",\"caption\":\"Rate Of Change\",\"overlay\":false,\"decimals\":2},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"Period\",\"value\":10}],\"curves\":[{\"colors\":[\"#2284dd\"],\"fields\":[\"ROC\"]}],\"levels\":[{\"value\":0,\"name\":\"Zero\",\"line\":{\"color\":\"#606060\",\"dashStyle\":\"Dash\"}}]}},{\"id\":\"TRIX\",\"meta\":{\"title\":\"Triple Exponential\",\"caption\":\"Triple Exponential\",\"overlay\":false},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"Period\",\"value\":15}],\"curves\":[{\"colors\":[\"#743800\"],\"fields\":[\"TRIX\"]}]}},{\"id\":\"DEMA\",\"meta\":{\"title\":\"Moving Average Exponential 2X\",\"caption\":\"Moving Average Exponential 2X\",\"overlay\":true},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"Period\",\"value\":15}],\"curves\":[{\"colors\":[\"#743800\"],\"fields\":[\"DEMA\"]}]}},{\"id\":\"TEMA\",\"meta\":{\"title\":\"Moving Average Exponential 3X\",\"caption\":\"Moving Average Exponential 3X\",\"overlay\":true},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"Period\",\"value\":15}],\"curves\":[{\"colors\":[\"#743800\"],\"fields\":[\"TEMA\"]}]}},{\"id\":\"TSI\",\"meta\":{\"title\":\"True Strength Index\",\"caption\":\"True Strength Index\",\"overlay\":false},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"Period1\",\"value\":25},{\"name\":\"Period2\",\"value\":13},{\"name\":\"Period3\",\"value\":7}],\"curves\":[{\"colors\":[\"#3bb3e4\"],\"fields\":[\"TSI\"]},{\"colors\":[\"#ff006e\"],\"fields\":[\"TSISIG\"]}],\"levels\":[{\"value\":0,\"name\":\"Zero\",\"line\":{\"color\":\"#606060\",\"dashStyle\":\"Dash\"}}]}},{\"id\":\"PPMOV\",\"meta\":{\"title\":\"Pivot Points Bands\",\"caption\":\"Pivot Points Bands\",\"overlay\":true},\"defaults\":{\"curves\":[{\"colors\":[\"#ffaf1c\"],\"fields\":[\"PVPTR\"]},{\"colors\":[\"#f18900\"],\"fields\":[\"PVPT\"]},{\"colors\":[\"#00aaab\"],\"fields\":[\"PVPTS\"]}]}},{\"id\":\"ARNUPDW\",\"meta\":{\"title\":\"Aroon Up/Down\",\"caption\":\"Aroon Up/Down\",\"overlay\":false,\"decimals\":2},\"defaults\":{\"inputs\":[{\"name\":\"Period\",\"value\":25}],\"curves\":[{\"colors\":[\"#005716\"],\"fields\":[\"ARNUP\"]},{\"colors\":[\"#ae272d\"],\"fields\":[\"ARNLOW\"]}]}},{\"id\":\"ARNOSC\",\"meta\":{\"title\":\"Aroon Oscillator\",\"caption\":\"Aroon Oscillator\",\"overlay\":false,\"decimals\":2},\"defaults\":{\"inputs\":[{\"name\":\"Period\",\"value\":25}],\"curves\":[{\"colors\":[\"#808080\"],\"fields\":[\"ARNOSC\"]}]}},{\"id\":\"TCHN\",\"meta\":{\"title\":\"Turtle Channel\",\"caption\":\"Turtle Channel\",\"overlay\":true,\"enumerations\":[{\"input\":\"Range\",\"values\":[\"High/Low\",\"Close\"]}]},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"PeriodUpper\",\"value\":14},{\"name\":\"PeriodLower\",\"value\":14},{\"name\":\"Range\",\"value\":\"High/Low\"}],\"curves\":[{\"colors\":[\"#005716\"],\"fields\":[\"TCHNUP\"]},{\"colors\":[\"#ae272d\"],\"fields\":[\"TCHNLOW\"]}]}},{\"id\":\"TCHRE\",\"meta\":{\"title\":\"Turtle Channel Retracement\",\"caption\":\"Turtle Channel Retracement\",\"overlay\":true,\"enumerations\":[{\"input\":\"Range\",\"values\":[\"High/Low\",\"Close\"]},{\"input\":\"Retracement\",\"values\":[\"Long\",\"Short\"]}]},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"Period\",\"value\":100},{\"name\":\"Retracement\",\"value\":\"Long\"},{\"name\":\"Adjustment\",\"value\":5},{\"name\":\"Range\",\"value\":\"High/Low\"}],\"curves\":[{\"colors\":[\"#2799f6\"],\"fields\":[\"TCHRE\"]}]}},{\"id\":\"ALLG\",\"meta\":{\"title\":\"Alligator\",\"caption\":\"Alligator\",\"overlay\":true},\"defaults\":{\"inputs\":[{\"name\":\"Period1\",\"value\":13},{\"name\":\"Period2\",\"value\":8},{\"name\":\"Period3\",\"value\":5}],\"curves\":[{\"colors\":[\"#25329b\"],\"fields\":[\"ALJAW\"],\"shift\":8},{\"colors\":[\"#7f8000\"],\"fields\":[\"ALTEETH\"],\"shift\":5},{\"colors\":[\"#9326ff\"],\"fields\":[\"ALLIPS\"],\"shift\":3}]}},{\"id\":\"PLTLN\",\"meta\":{\"title\":\"Plot Line\",\"caption\":\"Plot Line\",\"overlay\":true},\"defaults\":{\"inputs\":[{\"name\":\"Position\",\"value\":700}],\"curves\":[{\"colors\":[\"#808080\"],\"fields\":[\"PLTLN\"]}]}},{\"id\":\"AWEOSC\",\"meta\":{\"title\":\"Awesome Oscillator\",\"caption\":\"Awesome Oscillator\",\"overlay\":false},\"defaults\":{\"inputs\":[{\"name\":\"Period1\",\"value\":5},{\"name\":\"Period2\",\"value\":34},{\"name\":\"Period3\",\"value\":10}],\"curves\":[{\"colors\":[\"#711\",\"#0aa\"],\"fields\":[\"AWOS\"],\"style\":\"Column\",\"varyColorPerBar\":true},{\"colors\":[\"#ef4226\"],\"fields\":[\"AWOSMA\"]}]}},{\"id\":\"CLV\",\"meta\":{\"title\":\"Close Location Value\",\"caption\":\"Close Location Value\",\"overlay\":false},\"defaults\":{\"curves\":[{\"colors\":[\"#00aaab\"],\"fields\":[\"CLV\"]}]}},{\"id\":\"CHAMF\",\"meta\":{\"title\":\"Chaikin Money Flow\",\"caption\":\"Chaikin Money Flow\",\"overlay\":false},\"defaults\":{\"inputs\":[{\"name\":\"Period\",\"value\":20}],\"curves\":[{\"colors\":[\"#25329b\"],\"fields\":[\"CHAMF\"],\"style\":\"Column\"}]}},{\"id\":\"CHAVOL\",\"meta\":{\"title\":\"Chaikin Volatility\",\"caption\":\"Chaikin Volatility\",\"overlay\":false},\"defaults\":{\"inputs\":[{\"name\":\"Period1\",\"value\":10},{\"name\":\"Period2\",\"value\":10}],\"curves\":[{\"colors\":[\"#808080\"],\"fields\":[\"CHAVOL\"]}]}},{\"id\":\"DPO\",\"meta\":{\"title\":\"Detrended Price Oscillator\",\"caption\":\"Detrended Price Oscillator\",\"overlay\":false},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"Period\",\"value\":20}],\"curves\":[{\"colors\":[\"#888\"],\"fields\":[\"DPO\"],\"style\":\"Area\"}]}},{\"id\":\"MCGD\",\"meta\":{\"title\":\"McGinley Dynamic\",\"caption\":\"McGinley Dynamic\",\"overlay\":true},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"Period\",\"value\":14}],\"curves\":[{\"colors\":[\"#3bb3e4\"],\"fields\":[\"MCGD\"],\"style\":\"Line\"}]}},{\"id\":\"HMA\",\"meta\":{\"title\":\"Hull Moving Average\",\"caption\":\"Hull Moving Average\",\"overlay\":true},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"Period\",\"value\":20}],\"curves\":[{\"colors\":[\"#674ea7\"],\"fields\":[\"HMA\"],\"style\":\"Line\"}]}},{\"id\":\"COPP\",\"meta\":{\"title\":\"Coppock Curve\",\"caption\":\"Coppock Curve\",\"overlay\":false},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"PeriodWma\",\"value\":10},{\"name\":\"PeriodRocLong\",\"value\":14},{\"name\":\"PeriodRocShort\",\"value\":11}],\"curves\":[{\"colors\":[\"#2284dd\"],\"fields\":[\"COPP\"],\"style\":\"Line\"}]}},{\"id\":\"CCI\",\"meta\":{\"title\":\"Commodity Channel Index\",\"caption\":\"Commodity Channel Index\",\"overlay\":false},\"defaults\":{\"inputs\":[{\"name\":\"Period\",\"value\":20}],\"curves\":[{\"colors\":[\"#7f8000\"],\"fields\":[\"CCI\"]}],\"levels\":[{\"value\":-100,\"name\":\"Oversold\",\"line\":{\"color\":\"#606060\",\"dashStyle\":\"Dash\"}},{\"value\":100,\"name\":\"Overbought\",\"line\":{\"color\":\"#606060\",\"dashStyle\":\"Dash\"}}],\"bands\":[{\"fill\":{\"color\":\"rgba(127, 128, 0, 0.1)\"},\"range\":{\"from\":-100,\"to\":100}}]}},{\"id\":\"EMV\",\"meta\":{\"title\":\"Ease Of Movement\",\"caption\":\"Ease Of Movement\",\"overlay\":false},\"defaults\":{\"inputs\":[{\"name\":\"Period\",\"value\":14}],\"curves\":[{\"colors\":[\"#9326ff\"],\"fields\":[\"EMV\"]},{\"colors\":[\"#808080\"],\"fields\":[\"EMVMA\"]}]}},{\"id\":\"ERBLPOW\",\"meta\":{\"title\":\"Elder Ray Bull Power\",\"caption\":\"Elder Ray Bull Power\",\"overlay\":false},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"Period\",\"value\":10}],\"curves\":[{\"colors\":[\"#005716\"],\"fields\":[\"ERBLPOW\"],\"style\":\"Column\"}]}},{\"id\":\"ERBRPOW\",\"meta\":{\"title\":\"Elder Ray Bear Power\",\"caption\":\"Elder Ray Bear Power\",\"overlay\":false},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"Period\",\"value\":10}],\"curves\":[{\"colors\":[\"#ae272d\"],\"fields\":[\"ERBRPOW\"],\"style\":\"Column\"}]}},{\"id\":\"FI\",\"meta\":{\"title\":\"Force Index\",\"caption\":\"Force Index\",\"overlay\":false},\"defaults\":{\"inputs\":[{\"name\":\"Period\",\"value\":13}],\"curves\":[{\"colors\":[\"rgba(252, 13, 27, 0.3)\",\"rgba(0, 176, 75, 0.3)\"],\"fields\":[\"FI\"],\"style\":\"Area\",\"zones\":[{\"value\":0,\"colors\":1},{\"colors\":1}]}]}},{\"id\":\"MI\",\"meta\":{\"title\":\"Mass Index\",\"caption\":\"Mass Index\",\"overlay\":false},\"defaults\":{\"curves\":[{\"colors\":[\"#00b04b\"],\"fields\":[\"MI\"]}]}},{\"id\":\"MOM\",\"meta\":{\"title\":\"Momentum\",\"caption\":\"Momentum\",\"overlay\":false},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"Period\",\"value\":10},{\"name\":\"Movement\",\"value\":20}],\"curves\":[{\"colors\":[\"#808080\"],\"fields\":[\"MOM\"]},{\"colors\":[\"#505050\"],\"fields\":[\"MOMMA\"]}]}},{\"id\":\"MFI\",\"meta\":{\"title\":\"Money Flow Index\",\"caption\":\"Money Flow Index\",\"overlay\":false,\"decimals\":2},\"defaults\":{\"inputs\":[{\"name\":\"Period\",\"value\":14}],\"curves\":[{\"colors\":[\"#480048\"],\"fields\":[\"MFI\"]}]}},{\"id\":\"MSD\",\"meta\":{\"title\":\"Moving Standard Deviation\",\"caption\":\"Moving Standard Deviation\",\"overlay\":false},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"Period\",\"value\":10}],\"curves\":[{\"colors\":[\"#0c32ff\"],\"fields\":[\"MSD\"]}]}},{\"id\":\"PCTCHG\",\"meta\":{\"title\":\"Percent Change\",\"caption\":\"Percent Change\",\"overlay\":false},\"defaults\":{\"source\":\"Close\",\"curves\":[{\"colors\":[\"#037d27\"],\"fields\":[\"PCTCHG\"]}]}},{\"id\":\"NVI\",\"meta\":{\"title\":\"Negative Volume Index\",\"caption\":\"Negative Volume Index\",\"overlay\":false},\"defaults\":{\"inputs\":[{\"name\":\"Period\",\"value\":255}],\"curves\":[{\"colors\":[\"#480048\"],\"fields\":[\"NVI\"]},{\"colors\":[\"#7f8000\"],\"fields\":[\"NVIEMA\"]}]}},{\"id\":\"PVI\",\"meta\":{\"title\":\"Positive Volume Index\",\"caption\":\"Positive Volume Index\",\"overlay\":false},\"defaults\":{\"inputs\":[{\"name\":\"Period\",\"value\":255}],\"curves\":[{\"colors\":[\"#00b04b\"],\"fields\":[\"PVI\"]},{\"colors\":[\"#005716\"],\"fields\":[\"PVIEMA\"]}]}},{\"id\":\"PPO\",\"meta\":{\"title\":\"Percentage Price Oscillator\",\"caption\":\"Percentage Price Oscillator\",\"overlay\":false},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"Period1\",\"value\":12},{\"name\":\"Period2\",\"value\":26},{\"name\":\"Period3\",\"value\":9}],\"curves\":[{\"colors\":[\"#808080\"],\"fields\":[\"PPO\"]},{\"colors\":[\"#bc41ce\"],\"fields\":[\"PPOS\"]},{\"colors\":[\"#2284dd\"],\"fields\":[\"PPOH\"],\"style\":\"Column\"}]}},{\"id\":\"PVO\",\"meta\":{\"title\":\"Percentage Volume Oscillator\",\"caption\":\"Percentage Volume Oscillator\",\"overlay\":false},\"defaults\":{\"source\":\"Volume\",\"inputs\":[{\"name\":\"Period1\",\"value\":12},{\"name\":\"Period2\",\"value\":26},{\"name\":\"Period3\",\"value\":9}],\"curves\":[{\"colors\":[\"#808080\"],\"fields\":[\"PVO\"]},{\"colors\":[\"#bc41ce\"],\"fields\":[\"PVOS\"]},{\"colors\":[\"#9075d6\"],\"fields\":[\"PVOH\"],\"style\":\"Column\"}]}},{\"id\":\"HV\",\"meta\":{\"title\":\"Historical Volatility\",\"caption\":\"Historical Volatility\",\"overlay\":false,\"decimals\":2},\"defaults\":{\"inputs\":[{\"name\":\"Period\",\"value\":14}],\"curves\":[{\"colors\":[\"#7f8000\"],\"fields\":[\"HV\"]}]}},{\"id\":\"PERF\",\"meta\":{\"title\":\"Price Performance\",\"caption\":\"Price Performance\",\"overlay\":false,\"decimals\":2},\"defaults\":{\"source\":\"Close\",\"curves\":[{\"colors\":[\"#00aaab\"],\"fields\":[\"PERF\"]}]}},{\"id\":\"WASI\",\"meta\":{\"title\":\"Wilder Accumulative Swing Index\",\"caption\":\"Wilder Accumulative Swing Index\",\"overlay\":false},\"defaults\":{\"inputs\":[{\"name\":\"Limit\",\"value\":3}],\"curves\":[{\"colors\":[\"#bc41ce\"],\"fields\":[\"WASI\"]}]}},{\"id\":\"WWVOL\",\"meta\":{\"title\":\"Welles Wilder Volatility\",\"caption\":\"Welles Wilder Volatility\",\"overlay\":true},\"defaults\":{\"inputs\":[{\"name\":\"Period\",\"value\":14},{\"name\":\"Constant\",\"value\":3}],\"curves\":[{\"colors\":[\"#9326ff\"],\"fields\":[\"WWVSARD\"],\"style\":\"Dots\"},{\"colors\":[\"#f18900\"],\"fields\":[\"WWVSARU\"],\"style\":\"Dots\"}]}},{\"id\":\"PARTP\",\"meta\":{\"title\":\"Parabolic Time/Price (SAR)\",\"caption\":\"Parabolic Time/Price (SAR)\",\"overlay\":true},\"defaults\":{\"inputs\":[{\"name\":\"Acceleration\",\"value\":50},{\"name\":\"Limit\",\"value\":5}],\"curves\":[{\"colors\":[\"#25329b\"],\"fields\":[\"PARSARS\"],\"style\":\"Dots\"},{\"colors\":[\"#00aaab\"],\"fields\":[\"PARSARL\"],\"style\":\"Dots\"}]}},{\"id\":\"REATRHI\",\"meta\":{\"title\":\"Retracement ATR High\",\"caption\":\"Retracement ATR High\",\"overlay\":true,\"enumerations\":[{\"input\":\"TurtleChnField\",\"values\":[\"High\",\"Close\"]}]},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"PeriodAdjATR\",\"value\":20},{\"name\":\"PeriodTurtleChn\",\"value\":100},{\"name\":\"TurtleChnField\",\"value\":\"High\"},{\"name\":\"FactorAdjATR\",\"value\":15},{\"name\":\"FactorATR\",\"value\":2}],\"curves\":[{\"colors\":[\"#25329b\"],\"fields\":[\"REATRHI\"],\"style\":\"Dots\"}]}},{\"id\":\"REATRLO\",\"meta\":{\"title\":\"Retracement ATR Low\",\"caption\":\"Retracement ATR Low\",\"overlay\":true,\"enumerations\":[{\"input\":\"TurtleChnField\",\"values\":[\"Low\",\"Close\"]}]},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"PeriodAdjATR\",\"value\":20},{\"name\":\"PeriodTurtleChn\",\"value\":100},{\"name\":\"TurtleChnField\",\"value\":\"Low\"},{\"name\":\"FactorAdjATR\",\"value\":15},{\"name\":\"FactorATR\",\"value\":2}],\"curves\":[{\"colors\":[\"#b25900\"],\"fields\":[\"REATRLO\"],\"style\":\"Dots\"}]}},{\"id\":\"MOVLR\",\"meta\":{\"title\":\"Moving Linear Regression\",\"caption\":\"Moving Linear Regression\",\"overlay\":true},\"defaults\":{\"source\":\"Close\",\"inputs\":[{\"name\":\"Period\",\"value\":20}],\"curves\":[{\"colors\":[\"#480048\"],\"fields\":[\"MOVLR\"]}]}},{\"id\":\"TRSP\",\"meta\":{\"title\":\"TrendSpotter\",\"caption\":\"TrendSpotter\",\"overlay\":true},\"defaults\":{\"curves\":[{\"colors\":[\"#24ad54\"],\"fields\":[\"TRSP1\"],\"style\":\"Dots\"},{\"colors\":[\"#ec4533\"],\"fields\":[\"TRSP2\"],\"style\":\"Dots\"}]}},{\"id\":\"COTLC\",\"meta\":{\"title\":\"Commitment of Traders\",\"caption\":\"Commitment of Traders\",\"overlay\":false,\"decimals\":0},\"defaults\":{\"curves\":[{\"colors\":[\"#dc4041\"],\"fields\":[\"COTLCCMSP\"],\"style\":\"Step\"},{\"colors\":[\"#3a8d45\"],\"fields\":[\"COTLCLGSP\"],\"style\":\"Step\"},{\"colors\":[\"#403daf\"],\"fields\":[\"COTLCSMSP\"],\"style\":\"Step\"}]}},{\"id\":\"COTDAG\",\"meta\":{\"title\":\"Commitment of Traders Disaggregated\",\"caption\":\"Commitment of Traders Disaggregated\",\"overlay\":false,\"decimals\":0},\"defaults\":{\"curves\":[{\"colors\":[\"#dc4041\"],\"fields\":[\"COTDAGPRO\"],\"style\":\"Step\"},{\"colors\":[\"#3a8d45\"],\"fields\":[\"COTDAGSPD\"],\"style\":\"Step\"},{\"colors\":[\"#403daf\"],\"fields\":[\"COTDAGMNM\"],\"style\":\"Step\"},{\"colors\":[\"#ffb34c\"],\"fields\":[\"COTDAGOTH\"],\"style\":\"Step\"}]}},{\"id\":\"COTFTR\",\"meta\":{\"title\":\"Commitment of Traders Financial\",\"caption\":\"Commitment of Traders Financial\",\"overlay\":false,\"decimals\":0},\"defaults\":{\"curves\":[{\"colors\":[\"#dc4041\"],\"fields\":[\"COTFTRDLI\"],\"style\":\"Step\"},{\"colors\":[\"#3a8d45\"],\"fields\":[\"COTFTRASM\"],\"style\":\"Step\"},{\"colors\":[\"#403daf\"],\"fields\":[\"COTFTRLVF\"],\"style\":\"Step\"},{\"colors\":[\"#ffb34c\"],\"fields\":[\"COTFTROTH\"],\"style\":\"Step\"}]}},{\"id\":\"PIVPTS\",\"meta\":{\"title\":\"Pivot Points\",\"caption\":\"Pivot Points\",\"overlay\":true,\"enumerations\":[{\"input\":\"Previous\",\"values\":[\"Day\",\"Week\",\"Month\"]}]},\"defaults\":{\"inputs\":[{\"name\":\"Previous\",\"value\":\"Day\"}],\"curves\":[{\"colors\":[\"#79a2e3\"],\"fields\":[\"PPTR3\"]},{\"colors\":[\"#f08f4c\"],\"fields\":[\"PPTR2\"]},{\"colors\":[\"#492c6e\"],\"fields\":[\"PPTR1\"]},{\"colors\":[\"#28adcc\"],\"fields\":[\"PPTPIV\"]},{\"colors\":[\"#8f040a\"],\"fields\":[\"PPTS1\"]},{\"colors\":[\"#8cba32\"],\"fields\":[\"PPTS2\"]},{\"colors\":[\"#0e2339\"],\"fields\":[\"PPTS3\"]}]}},{\"id\":\"CPP\",\"meta\":{\"title\":\"Camarilla Pivot Points\",\"caption\":\"Camarilla Pivot Points\",\"overlay\":true},\"defaults\":{\"curves\":[{\"colors\":[\"#00b04b\"],\"fields\":[\"CPPH4\"]},{\"colors\":[\"#00b04b\"],\"fields\":[\"CPPH3\"]},{\"colors\":[\"#00b04b\"],\"fields\":[\"CPPH2\"]},{\"colors\":[\"#00b04b\"],\"fields\":[\"CPPH1\"]},{\"colors\":[\"#d47928\"],\"fields\":[\"CPPL1\"]},{\"colors\":[\"#d47928\"],\"fields\":[\"CPPL2\"]},{\"colors\":[\"#d47928\"],\"fields\":[\"CPPL3\"]},{\"colors\":[\"#d47928\"],\"fields\":[\"CPPL4\"]}]}},{\"id\":\"IMPVOL\",\"meta\":{\"title\":\"Implied Volatility (Futures)\",\"caption\":\"Implied Volatility (Futures)\",\"overlay\":false},\"defaults\":{\"curves\":[{\"colors\":[\"#ffc270\"],\"fields\":[\"IMPVOL\"]}]}},{\"id\":\"CTM\",\"meta\":{\"title\":\"Cycle Trading Momentum\",\"caption\":\"Cycle Trading Momentum\",\"overlay\":false,\"decimals\":2},\"defaults\":{\"source\":\"Close\",\"curves\":[{\"style\":\"Step\",\"colors\":[\"#fc0d1b\",\"#00b04b\"],\"fields\":[\"CTM\"],\"zones\":[{\"value\":0,\"colors\":1,\"gradient\":\"linDarken\"},{\"colors\":1,\"gradient\":\"linLighten\"}]},{\"colors\":[\"#9326ff\"],\"fields\":[\"CTLTM\"]}]}},{\"id\":\"GPMI\",\"meta\":{\"title\":\"GBE Principal Momentum Indicator\",\"caption\":\"GBE Principal Momentum Indicator\",\"overlay\":false},\"defaults\":{\"source\":\"Close\",\"curves\":[{\"style\":\"Step\",\"colors\":[\"#fc0d1b\",\"#00b04b\"],\"fields\":[\"GPMI\"],\"zones\":[{\"value\":0,\"colors\":1,\"gradient\":\"linDarken\"},{\"colors\":1,\"gradient\":\"linLighten\"}]}]}},{\"id\":\"GTPI\",\"meta\":{\"title\":\"GBE Turning Point Indicator\",\"caption\":\"GBE Turning Point Indicator\",\"overlay\":false,\"decimals\":2,\"range\":{\"min\":0,\"max\":100}},\"defaults\":{\"curves\":[{\"colors\":[\"#ef4226\",\"#2642ef\"],\"fields\":[\"GTPI\"],\"zones\":[{\"value\":50,\"colors\":1,\"gradient\":\"linDarken\"},{\"colors\":1,\"gradient\":\"linLighten\"}]}],\"levels\":[{\"value\":25,\"name\":\"Oversold\",\"line\":{\"color\":\"#3a45a2\"}},{\"value\":50,\"line\":{\"color\":\"#3a45a2\",\"dashStyle\":\"DashDot\"}},{\"value\":75,\"name\":\"Overbought\",\"line\":{\"color\":\"#3a45a2\"}}]}},{\"id\":\"GMMA\",\"meta\":{\"title\":\"Guppy Multiple Moving Average\",\"caption\":\"Guppy MMA\",\"overlay\":true},\"defaults\":{\"inputs\":[{\"name\":\"Period1\",\"value\":3},{\"name\":\"Period2\",\"value\":5},{\"name\":\"Period3\",\"value\":8},{\"name\":\"Period4\",\"value\":10},{\"name\":\"Period5\",\"value\":12},{\"name\":\"Period6\",\"value\":15},{\"name\":\"Period7\",\"value\":30},{\"name\":\"Period8\",\"value\":35},{\"name\":\"Period9\",\"value\":40},{\"name\":\"Period10\",\"value\":45},{\"name\":\"Period11\",\"value\":50},{\"name\":\"Period12\",\"value\":60}],\"curves\":[{\"colors\":[\"#008ae6\"],\"fields\":[\"GMMA3\"]},{\"colors\":[\"#008ae6\"],\"fields\":[\"GMMA5\"]},{\"colors\":[\"#008ae6\"],\"fields\":[\"GMMA8\"]},{\"colors\":[\"#008ae6\"],\"fields\":[\"GMMA10\"]},{\"colors\":[\"#008ae6\"],\"fields\":[\"GMMA12\"]},{\"colors\":[\"#008ae6\"],\"fields\":[\"GMMA15\"]},{\"colors\":[\"#b32400\"],\"fields\":[\"GMMA30\"]},{\"colors\":[\"#b32400\"],\"fields\":[\"GMMA35\"]},{\"colors\":[\"#b32400\"],\"fields\":[\"GMMA40\"]},{\"colors\":[\"#b32400\"],\"fields\":[\"GMMA45\"]},{\"colors\":[\"#b32400\"],\"fields\":[\"GMMA50\"]},{\"colors\":[\"#b32400\"],\"fields\":[\"GMMA60\"]}]}},{\"id\":\"STOMOMIX\",\"meta\":{\"title\":\"Stochastic Momentum Index\",\"caption\":\"Stochastic Momentum Index\",\"overlay\":false},\"defaults\":{\"inputs\":[{\"name\":\"Period1\",\"value\":10},{\"name\":\"Period2\",\"value\":3}],\"curves\":[{\"colors\":[\"#3bb4e5\"],\"fields\":[\"STOMOMIX\"]}],\"levels\":[{\"value\":-40,\"name\":\"Oversold\",\"line\":{\"color\":\"#606060\",\"dashStyle\":\"Dash\"}},{\"value\":40,\"name\":\"Overbought\",\"line\":{\"color\":\"#606060\",\"dashStyle\":\"Dash\"}}]}},{\"id\":\"CHDMOMOSC\",\"meta\":{\"title\":\"Chande Momentum Oscillator\",\"caption\":\"Chande Momentum Oscillator\",\"overlay\":false},\"defaults\":{\"inputs\":[{\"name\":\"Period\",\"value\":9}],\"curves\":[{\"colors\":[\"#27c6da\"],\"fields\":[\"CHDMOMOSC\"]}],\"levels\":[{\"value\":0,\"name\":\"Zero\",\"line\":{\"color\":\"#606060\",\"dashStyle\":\"Dash\"}}]}},{\"id\":\"VSTOP\",\"meta\":{\"title\":\"Volatility Stop\",\"caption\":\"Volatility Stop\",\"overlay\":true},\"defaults\":{\"inputs\":[{\"name\":\"Period\",\"value\":20},{\"name\":\"Multiplier\",\"value\":2}],\"curves\":[{\"colors\":[\"#50cc52\"],\"fields\":[\"VSTOPUP\"],\"style\":\"Dots\"},{\"colors\":[\"#d46757\"],\"fields\":[\"VSTOPLOW\"],\"style\":\"Dots\"}]}},{\"id\":\"SUPTR\",\"meta\":{\"title\":\"Supertrend\",\"caption\":\"Supertrend\",\"overlay\":true},\"defaults\":{\"inputs\":[{\"name\":\"Period\",\"value\":7},{\"name\":\"Multiplier\",\"value\":3}],\"curves\":[{\"colors\":[\"#ff5252\",\"#4cb050\"],\"fields\":[\"SUPTR\"],\"style\":\"Line\",\"varyColorPerBar\":true}]}},{\"id\":\"ICHCLD\",\"meta\":{\"title\":\"Ichimoku Clouds\",\"caption\":\"Ichimoku Clouds\",\"overlay\":true},\"defaults\":{\"inputs\":[{\"name\":\"PeriodConversionLine\",\"value\":9},{\"name\":\"PeriodBaseLine\",\"value\":26},{\"name\":\"PeriodLaggingSpan2\",\"value\":52},{\"name\":\"Displacement\",\"value\":26}],\"curves\":[{\"colors\":[\"#0080cd\"],\"fields\":[\"CONVLN\"],\"style\":\"Line\"},{\"colors\":[\"#cd0000\"],\"fields\":[\"BASELN\"],\"style\":\"Line\"},{\"colors\":[\"#009900\"],\"fields\":[\"LAGGSP\"],\"style\":\"Line\"},{\"colors\":[\"#00cd00\"],\"fields\":[\"LEADSP1\"],\"style\":\"Line\"},{\"colors\":[\"#ff0000\"],\"fields\":[\"LEADSP2\"],\"style\":\"Line\"},{\"colors\":[\"rgba(255, 0, 0, 0.2)\",\"rgba(0, 255, 0, 0.2)\"],\"fields\":[\"LEADSP1\",\"LEADSP2\"],\"style\":\"Ribbon\",\"varyColorPerBar\":true}]}},{\"id\":\"VWAP\",\"meta\":{\"title\":\"VWAP\",\"caption\":\"VWAP\",\"overlay\":true},\"defaults\":{\"curves\":[{\"colors\":[\"#ee762f\"],\"fields\":[\"VWAP\"],\"style\":\"Line\"}]}}]')},169:function(t,e,i){t.exports=i(177)},170:function(t,e,i){t.exports=i(178)},171:function(t){t.exports=JSON.parse('[{\"id\":\"DateTime\",\"type\":\"Date\"},{\"id\":\"Open\"},{\"id\":\"High\"},{\"id\":\"Low\"},{\"id\":\"Close\"},{\"id\":\"TradeSize\",\"format\":\"AsInteger\"},{\"id\":\"Volume\",\"format\":\"UseMetricUnit\",\"shortName\":\"VOL\"},{\"id\":\"OpenInterest\",\"format\":\"UseMetricUnit\",\"shortName\":\"OI\"},{\"id\":\"Last\"},{\"id\":\"Symbol\",\"type\":\"String\"},{\"id\":\"Change\"},{\"id\":\"PercentChange\",\"format\":\"AsPercent\"},{\"id\":\"PreviousClose\"},{\"id\":\"PreviousOpen\"},{\"id\":\"PreviousHigh\"},{\"id\":\"PreviousLow\"},{\"id\":\"WeekPreviousClose\"},{\"id\":\"WeekPreviousHigh\"},{\"id\":\"WeekPreviousLow\"},{\"id\":\"MonthPreviousClose\"},{\"id\":\"MonthPreviousHigh\"},{\"id\":\"MonthPreviousLow\"},{\"id\":\"Dividends\",\"type\":\"String\",\"category\":\"Event\",\"name\":\"Dividend\",\"shortName\":\"D\"},{\"id\":\"Splits\",\"type\":\"String\",\"category\":\"Event\",\"name\":\"Split\",\"shortName\":\"S\"},{\"id\":\"Earnings\",\"type\":\"String\",\"category\":\"Event\",\"shortName\":\"E\"},{\"id\":\"MA\",\"category\":\"Study\",\"name\":\"MA-Simple\",\"shortName\":\"MA\"},{\"id\":\"SUPTR\",\"category\":\"Study\",\"name\":\"Supertrend\",\"shortName\":\"SUPTR\"},{\"id\":\"BARCOLIX\",\"category\":\"Study\",\"name\":\"BarColorIndex\",\"shortName\":\"BARCOLIX\"},{\"id\":\"BREL\",\"category\":\"Study\",\"name\":\"BarRelation\",\"shortName\":\"BREL\"},{\"id\":\"EMA\",\"category\":\"Study\",\"name\":\"MA-Exp\",\"shortName\":\"MA(EXP)\"},{\"id\":\"MAHI\",\"category\":\"Study\",\"name\":\"MA-High\",\"shortName\":\"MA(HI)\"},{\"id\":\"MALO\",\"category\":\"Study\",\"name\":\"MA-Low\",\"shortName\":\"MA(LO)\"},{\"id\":\"MACD\",\"category\":\"Study\",\"name\":\"MACD\",\"shortName\":\"MACD\"},{\"id\":\"MACDS\",\"category\":\"Study\",\"name\":\"MACD-Signal\",\"shortName\":\"MACD(S)\"},{\"id\":\"MACDH\",\"category\":\"Study\",\"name\":\"MACD-Histogram\",\"shortName\":\"MACD(H)\"},{\"id\":\"ENVU\",\"category\":\"Study\",\"name\":\"Envelope-Up\",\"shortName\":\"ENV(UP)\"},{\"id\":\"ENVD\",\"category\":\"Study\",\"name\":\"Envelope-Down\",\"shortName\":\"ENV(DN)\"},{\"id\":\"ENVEXPU\",\"category\":\"Study\",\"name\":\"Envelope-Exponential-Up\",\"shortName\":\"ENVEXP(UP)\"},{\"id\":\"ENVEXPD\",\"category\":\"Study\",\"name\":\"Envelope-Exponential-Down\",\"shortName\":\"ENVEXP(DN)\"},{\"id\":\"ENVSMOU\",\"category\":\"Study\",\"name\":\"Envelope-Smoothed-Up\",\"shortName\":\"ENVSMO(UP)\"},{\"id\":\"ENVSMOD\",\"category\":\"Study\",\"name\":\"Envelope-Smoothed-Down\",\"shortName\":\"ENVSMO(DN)\"},{\"id\":\"SMA\",\"category\":\"Study\",\"name\":\"MA-Smoothed\",\"shortName\":\"MA(S)\"},{\"id\":\"CSHO\",\"category\":\"Study\",\"name\":\"Cash-Overlay\",\"shortName\":\"CSHO\"},{\"id\":\"CSHB\",\"category\":\"Study\",\"name\":\"Cash-Basis\",\"shortName\":\"CSHB\"},{\"id\":\"TMA\",\"category\":\"Study\",\"name\":\"MA-Triangular\",\"shortName\":\"MA(TRI)\"},{\"id\":\"WMA\",\"category\":\"Study\",\"name\":\"MA-Weighted\",\"shortName\":\"MA(W)\"},{\"id\":\"VOLMA\",\"category\":\"Study\",\"format\":\"UseMetricUnit\",\"name\":\"MA-Volume\",\"shortName\":\"VOLMA\"},{\"id\":\"OSC\",\"category\":\"Study\",\"name\":\"OSC\",\"shortName\":\"OSC\"},{\"id\":\"VOSC\",\"category\":\"Study\",\"format\":\"UseMetricUnit\",\"name\":\"OSC-Volume\",\"shortName\":\"VOLOSC\"},{\"id\":\"RSI\",\"category\":\"Study\",\"name\":\"RSI\",\"shortName\":\"RSI\"},{\"id\":\"STORSI\",\"category\":\"Study\",\"name\":\"StochRSI\",\"shortName\":\"STOCHRSI\"},{\"id\":\"HH\",\"category\":\"Study\",\"name\":\"HighestHigh\",\"shortName\":\"HHIGH\"},{\"id\":\"LL\",\"category\":\"Study\",\"name\":\"LowestLow\",\"shortName\":\"LLOW\"},{\"id\":\"PercK\",\"category\":\"Study\",\"name\":\"%K\",\"shortName\":\"PCNTK\"},{\"id\":\"PercD\",\"category\":\"Study\",\"name\":\"%D\",\"shortName\":\"PCNTD\"},{\"id\":\"PercR\",\"category\":\"Study\",\"name\":\"%R\",\"shortName\":\"PCNTR\"},{\"id\":\"WGCL\",\"category\":\"Study\",\"name\":\"WeightedClose\",\"shortName\":\"WTCL\"},{\"id\":\"BOLLBU\",\"category\":\"Study\",\"name\":\"Bollinger-Upper\",\"shortName\":\"BOLL(U)\"},{\"id\":\"BOLLBL\",\"category\":\"Study\",\"name\":\"Bollinger-Lower\",\"shortName\":\"BOLL(L)\"},{\"id\":\"BOLLBM\",\"category\":\"Study\",\"name\":\"Bollinger-Mid\",\"shortName\":\"BOLL(M)\"},{\"id\":\"BOLLBW\",\"category\":\"Study\",\"name\":\"Bollinger-Width\",\"shortName\":\"BOLLW\"},{\"id\":\"BOLLBP\",\"category\":\"Study\",\"name\":\"Bollinger-Percent\",\"shortName\":\"%B\"},{\"id\":\"OBVOL\",\"category\":\"Study\",\"format\":\"UseMetricUnit\",\"name\":\"OnBalanceVol\",\"shortName\":\"OBVOL\"},{\"id\":\"TR\",\"category\":\"Study\",\"name\":\"TrueRange\",\"shortName\":\"TR\"},{\"id\":\"ATR\",\"category\":\"Study\",\"name\":\"AvgTrueRange\",\"shortName\":\"ATR\"},{\"id\":\"ATRMA\",\"category\":\"Study\",\"name\":\"MA-ATR\",\"shortName\":\"MA(ATR)\"},{\"id\":\"ADJATR\",\"category\":\"Study\",\"name\":\"AdjAvgTrueRange\",\"shortName\":\"ADJATR\"},{\"id\":\"COTR\",\"category\":\"Study\",\"name\":\"ChgOverTrueRange\",\"shortName\":\"COTR\"},{\"id\":\"STOMOMIX\",\"category\":\"Study\",\"name\":\"StochMomIndex\",\"shortName\":\"STOMOMIX\"},{\"id\":\"CHDMOMOSC\",\"category\":\"Study\",\"name\":\"ChandeMomOsc\",\"shortName\":\"CHDMOMOSC\"},{\"id\":\"PDI\",\"category\":\"Study\",\"name\":\"+DI\",\"shortName\":\"+DI\"},{\"id\":\"MDI\",\"category\":\"Study\",\"name\":\"-DI\",\"shortName\":\"-DI\"},{\"id\":\"ADX\",\"category\":\"Study\",\"name\":\"ADX\",\"shortName\":\"ADX\"},{\"id\":\"ADXM\",\"category\":\"Study\",\"name\":\"ADX-Modified\",\"shortName\":\"ADXM\"},{\"id\":\"ADL\",\"category\":\"Study\",\"format\":\"UseMetricUnit\",\"name\":\"AccDist\",\"shortName\":\"ACCDIS\"},{\"id\":\"ADWM\",\"category\":\"Study\",\"name\":\"AccDistWill\",\"shortName\":\"ACCDISWIL\"},{\"id\":\"ADWMMA\",\"category\":\"Study\",\"name\":\"AccDistWillMovAvg\",\"shortName\":\"ACCDISWILMA\"},{\"id\":\"MCGD\",\"category\":\"Study\",\"name\":\"McGinleyDyn\",\"shortName\":\"MCGD\"},{\"id\":\"HMA\",\"category\":\"Study\",\"name\":\"HullMovAvg\",\"shortName\":\"HMA\"},{\"id\":\"COPP\",\"category\":\"Study\",\"name\":\"CoppCurve\",\"shortName\":\"COPP\"},{\"id\":\"CHAOSC\",\"category\":\"Study\",\"format\":\"UseMetricUnit\",\"name\":\"ChaikinOsc\",\"shortName\":\"CHAIKOSC\"},{\"id\":\"TP\",\"category\":\"Study\",\"name\":\"TypicalPrice\",\"shortName\":\"TP\"},{\"id\":\"KCUP\",\"category\":\"Study\",\"name\":\"KeltChan-Up\",\"shortName\":\"KELT(UP)\"},{\"id\":\"KCMID\",\"category\":\"Study\",\"name\":\"KeltChan-Mid\",\"shortName\":\"KELT(MID)\"},{\"id\":\"KCLOW\",\"category\":\"Study\",\"name\":\"KeltChan-Low\",\"shortName\":\"KELT(LO)\"},{\"id\":\"KBUP\",\"category\":\"Study\",\"name\":\"KeltBands-Up\",\"shortName\":\"KELB(UP)\"},{\"id\":\"KBMID\",\"category\":\"Study\",\"name\":\"KeltBands-Mid\",\"shortName\":\"KELB(MID)\"},{\"id\":\"KBLOW\",\"category\":\"Study\",\"name\":\"KeltBands-Low\",\"shortName\":\"KELB(LO)\"},{\"id\":\"KCEUP\",\"category\":\"Study\",\"name\":\"KeltChanExp-Up\",\"shortName\":\"KELE(UP)\"},{\"id\":\"KCEMID\",\"category\":\"Study\",\"name\":\"KeltChanExp-Mid\",\"shortName\":\"KELE(MID)\"},{\"id\":\"KCELOW\",\"category\":\"Study\",\"name\":\"KeltChanExp-Low\",\"shortName\":\"KELE(LO)\"},{\"id\":\"DONUP\",\"category\":\"Study\",\"name\":\"Donchian-Up\",\"shortName\":\"DON(U)\"},{\"id\":\"DONMID\",\"category\":\"Study\",\"name\":\"Donchian-Mid\",\"shortName\":\"DON(M)\"},{\"id\":\"DONLOW\",\"category\":\"Study\",\"name\":\"Donchian-Low\",\"shortName\":\"DON(L)\"},{\"id\":\"DONW\",\"category\":\"Study\",\"name\":\"Donchian-Width\",\"shortName\":\"DON(W)\"},{\"id\":\"PVT\",\"category\":\"Study\",\"format\":\"UseMetricUnit\",\"name\":\"PriceVolChange\",\"shortName\":\"PVOL\"},{\"id\":\"TRIX\",\"category\":\"Study\",\"name\":\"Triple-MA-Exp\",\"shortName\":\"TRIX\"},{\"id\":\"ROC\",\"category\":\"Study\",\"name\":\"RateOfChange\",\"shortName\":\"ROC\"},{\"id\":\"PVPT\",\"category\":\"Study\",\"name\":\"PivotPoint\",\"shortName\":\"PVMOV\"},{\"id\":\"PVPTR\",\"category\":\"Study\",\"name\":\"PvtPt-Resistance\",\"shortName\":\"PVMOV(R)\"},{\"id\":\"PVPTS\",\"category\":\"Study\",\"name\":\"PvtPt-Support\",\"shortName\":\"PVMOV(S)\"},{\"id\":\"ARNUP\",\"category\":\"Study\",\"name\":\"Aroon-Up\",\"shortName\":\"ARN(UP)\"},{\"id\":\"ARNLOW\",\"category\":\"Study\",\"name\":\"Aroon-Down\",\"shortName\":\"ARN(DN)\"},{\"id\":\"VSTOPUP\",\"category\":\"Study\",\"name\":\"VolaStop-Up\",\"shortName\":\"VSTOP(UP)\"},{\"id\":\"VSTOPLOW\",\"category\":\"Study\",\"name\":\"VolaStop-Down\",\"shortName\":\"VSTOP(DN)\"},{\"id\":\"ARNOSC\",\"category\":\"Study\",\"name\":\"Aroon-Osci\",\"shortName\":\"ARNOSC\"},{\"id\":\"TCHNUP\",\"category\":\"Study\",\"name\":\"TurtleChn-Up\",\"shortName\":\"TCH(UP)\"},{\"id\":\"TCHNLOW\",\"category\":\"Study\",\"name\":\"TurtleChn-Low\",\"shortName\":\"TCH(LO)\"},{\"id\":\"TCHRE\",\"category\":\"Study\",\"name\":\"TurtleChnRetrace\",\"shortName\":\"TCHRE\"},{\"id\":\"ALJAW\",\"category\":\"Study\",\"name\":\"Alligator-Jaw\",\"shortName\":\"AL(J)\"},{\"id\":\"ALTEETH\",\"category\":\"Study\",\"name\":\"Alligator-Teeth\",\"shortName\":\"AL(T)\"},{\"id\":\"ALLIPS\",\"category\":\"Study\",\"name\":\"Alligator-Lips\",\"shortName\":\"AL(L)\"},{\"id\":\"PLTLN\",\"category\":\"Study\",\"name\":\"PlotLine\",\"shortName\":\"LINE\"},{\"id\":\"AWOS\",\"category\":\"Study\",\"name\":\"AwesomeOsc\",\"shortName\":\"AWOSC\"},{\"id\":\"AWOSMA\",\"category\":\"Study\",\"name\":\"AwesomeOsc-MA\",\"shortName\":\"AWOSC(MA)\"},{\"id\":\"MFMUL\",\"category\":\"Study\",\"name\":\"MoneyFlowMul\"},{\"id\":\"CLV\",\"category\":\"Study\",\"name\":\"CloseLocationValue\",\"shortName\":\"CLV\"},{\"id\":\"CHAMF\",\"category\":\"Study\",\"name\":\"ChaikinMoneyFlow\",\"shortName\":\"CHAIKMF\"},{\"id\":\"CHAVOL\",\"category\":\"Study\",\"name\":\"ChaikinVolatility\",\"shortName\":\"CHAIKVOL\"},{\"id\":\"DPO\",\"category\":\"Study\",\"name\":\"DetrendedPriceOsc\",\"shortName\":\"DPO\"},{\"id\":\"CCI\",\"category\":\"Study\",\"name\":\"CommodityChannelIndex\",\"shortName\":\"CCI\"},{\"id\":\"EMV\",\"category\":\"Study\",\"name\":\"EaseOfMovement\",\"shortName\":\"EOM\"},{\"id\":\"EMVMA\",\"category\":\"Study\",\"name\":\"EaseOfMovementMA\",\"shortName\":\"EOM(MA)\"},{\"id\":\"ERBLPOW\",\"category\":\"Study\",\"name\":\"ElderRayBullPow\",\"shortName\":\"ER(BULL)\"},{\"id\":\"ERBRPOW\",\"category\":\"Study\",\"name\":\"ElderRayBearPow\",\"shortName\":\"ER(BEAR)\"},{\"id\":\"FI\",\"category\":\"Study\",\"format\":\"UseMetricUnit\",\"name\":\"ForceIndex\",\"shortName\":\"FORCE\"},{\"id\":\"MI\",\"category\":\"Study\",\"name\":\"MassIndex\",\"shortName\":\"MASS\"},{\"id\":\"MOM\",\"category\":\"Study\",\"name\":\"Momentum\",\"shortName\":\"MOM\"},{\"id\":\"MOMMA\",\"category\":\"Study\",\"name\":\"MA-Momentum\",\"shortName\":\"MA(MOM)\"},{\"id\":\"MFI\",\"category\":\"Study\",\"name\":\"MoneyFlowIndex\",\"shortName\":\"MFI\"},{\"id\":\"MSD\",\"category\":\"Study\",\"name\":\"MovingStdDev\",\"shortName\":\"MSD\"},{\"id\":\"PCTCHG\",\"category\":\"Study\",\"name\":\"PercentChange\",\"shortName\":\"PCTCHG\"},{\"id\":\"LINRUP\",\"category\":\"Study\",\"name\":\"LinRegUpper\",\"shortName\":\"LINRUP\"},{\"id\":\"LINRMID\",\"category\":\"Study\",\"name\":\"LinRegMiddle\",\"shortName\":\"LINRMID\"},{\"id\":\"LINRLOW\",\"category\":\"Study\",\"name\":\"LinRegLower\",\"shortName\":\"LINRLOW\"},{\"id\":\"NVI\",\"category\":\"Study\",\"name\":\"NegativeVolIndex\",\"shortName\":\"NVI\"},{\"id\":\"NVIEMA\",\"category\":\"Study\",\"name\":\"NegativeVolIndexEMA\",\"shortName\":\"NVI(EMA)\"},{\"id\":\"PVI\",\"category\":\"Study\",\"name\":\"PositiveVolIndex\",\"shortName\":\"PVI\"},{\"id\":\"PVIEMA\",\"category\":\"Study\",\"name\":\"PositiveVolIndexEMA\",\"shortName\":\"PVI(EMA)\"},{\"id\":\"PPO\",\"category\":\"Study\",\"name\":\"PercPriceOsc\",\"shortName\":\"PPO\"},{\"id\":\"PPOS\",\"category\":\"Study\",\"name\":\"PPO-Signal\",\"shortName\":\"PPO(S)\"},{\"id\":\"PPOH\",\"category\":\"Study\",\"name\":\"PPO-Histogram\",\"shortName\":\"PPO(H)\"},{\"id\":\"PVO\",\"category\":\"Study\",\"name\":\"PercVolOsc\",\"shortName\":\"PVO\"},{\"id\":\"PVOS\",\"category\":\"Study\",\"name\":\"PVO-Signal\",\"shortName\":\"PVO(S)\"},{\"id\":\"PVOH\",\"category\":\"Study\",\"name\":\"PVO-Histogram\",\"shortName\":\"PVO(H)\"},{\"id\":\"HV\",\"category\":\"Study\",\"name\":\"HistVolatility\",\"shortName\":\"HISTVOL\"},{\"id\":\"PERF\",\"category\":\"Study\",\"name\":\"Performance\",\"shortName\":\"PERF\"},{\"id\":\"WASI\",\"category\":\"Study\",\"name\":\"WilderAccSwingIndex\",\"shortName\":\"WACCSW\"},{\"id\":\"WWVSARU\",\"category\":\"Study\",\"name\":\"WilderVolSarUp\",\"shortName\":\"WVOL-UP\"},{\"id\":\"WWVSARD\",\"category\":\"Study\",\"name\":\"WilderVolSarDown\",\"shortName\":\"WVOL-DN\"},{\"id\":\"PARSARS\",\"category\":\"Study\",\"name\":\"ParabolicSarShort\",\"shortName\":\"SHORT\"},{\"id\":\"PARSARL\",\"category\":\"Study\",\"name\":\"ParabolicSarLong\",\"shortName\":\"LONG\"},{\"id\":\"REATRHI\",\"category\":\"Study\",\"name\":\"RetraceATRHigh\",\"shortName\":\"REATRHI\"},{\"id\":\"REATRLO\",\"category\":\"Study\",\"name\":\"RetraceATRLow\",\"shortName\":\"REATRLO\"},{\"id\":\"MOVLR\",\"category\":\"Study\",\"name\":\"MovingLinRegression\",\"shortName\":\"MOVLINREG\"},{\"id\":\"TRSP1\",\"category\":\"Study\",\"name\":\"TrendSpotter\",\"shortName\":\"TREND\"},{\"id\":\"TRSP2\",\"category\":\"Study\",\"name\":\"TrendSpotter\",\"shortName\":\"TREND\"},{\"id\":\"COTLCCMSP\",\"category\":\"Study\",\"name\":\"Comm Spec\",\"shortName\":\"COT(C)\"},{\"id\":\"COTLCLGSP\",\"category\":\"Study\",\"name\":\"Large Spec\",\"shortName\":\"COT(L)\"},{\"id\":\"COTLCSMSP\",\"category\":\"Study\",\"name\":\"Small Spec\",\"shortName\":\"COT(S)\"},{\"id\":\"COTDAGPRO\",\"category\":\"Study\",\"name\":\"Producers\",\"shortName\":\"COTDIS(P)\"},{\"id\":\"COTDAGSPD\",\"category\":\"Study\",\"name\":\"Swap Dealers\",\"shortName\":\"COTDIS(S)\"},{\"id\":\"COTDAGMNM\",\"category\":\"Study\",\"name\":\"Managed Money\",\"shortName\":\"COTDIS(M)\"},{\"id\":\"COTDAGOTH\",\"category\":\"Study\",\"name\":\"Other Report\",\"shortName\":\"COTDIS(O)\"},{\"id\":\"COTFTRDLI\",\"category\":\"Study\",\"name\":\"Dealer Intermediary\",\"shortName\":\"COTFIN(D)\"},{\"id\":\"COTFTRASM\",\"category\":\"Study\",\"name\":\"Asset Manager\",\"shortName\":\"COTFIN(A)\"},{\"id\":\"COTFTRLVF\",\"category\":\"Study\",\"name\":\"Leveraged Funds\",\"shortName\":\"COTFIN(L)\"},{\"id\":\"COTFTROTH\",\"category\":\"Study\",\"name\":\"Other Report\",\"shortName\":\"COTFIN(O)\"},{\"id\":\"PPTPIV\",\"category\":\"Study\",\"name\":\"Pivot Point\",\"shortName\":\"PPT(P)\"},{\"id\":\"PPTR1\",\"category\":\"Study\",\"name\":\"1st Resistance\",\"shortName\":\"PPT(R1)\"},{\"id\":\"PPTR2\",\"category\":\"Study\",\"name\":\"2nd Resistance\",\"shortName\":\"PPT(R2)\"},{\"id\":\"PPTR3\",\"category\":\"Study\",\"name\":\"3rd Resistance\",\"shortName\":\"PPT(R3)\"},{\"id\":\"PPTS1\",\"category\":\"Study\",\"name\":\"1st Support\",\"shortName\":\"PPT(S1)\"},{\"id\":\"PPTS2\",\"category\":\"Study\",\"name\":\"2nd Support\",\"shortName\":\"PPT(S2)\"},{\"id\":\"PPTS3\",\"category\":\"Study\",\"name\":\"3rd Support\",\"shortName\":\"PPT(S3)\"},{\"id\":\"CPPH4\",\"category\":\"Study\",\"name\":\"4th Camarilla Supp\",\"shortName\":\"CPP(H4)\"},{\"id\":\"CPPH3\",\"category\":\"Study\",\"name\":\"3rd Camarilla Supp\",\"shortName\":\"CPP(H3)\"},{\"id\":\"CPPH2\",\"category\":\"Study\",\"name\":\"2nd Camarilla Supp\",\"shortName\":\"CPP(H2)\"},{\"id\":\"CPPH1\",\"category\":\"Study\",\"name\":\"1st Camarilla Supp\",\"shortName\":\"CPP(H1)\"},{\"id\":\"CPPL1\",\"category\":\"Study\",\"name\":\"1st Camarilla Res\",\"shortName\":\"CPP(L1)\"},{\"id\":\"CPPL2\",\"category\":\"Study\",\"name\":\"2nd Camarilla Res\",\"shortName\":\"CPP(L2)\"},{\"id\":\"CPPL3\",\"category\":\"Study\",\"name\":\"3rd Camarilla Res\",\"shortName\":\"CPP(L3)\"},{\"id\":\"CPPL4\",\"category\":\"Study\",\"name\":\"4th Camarilla Res\",\"shortName\":\"CPP(L4)\"},{\"id\":\"IMPVOL\",\"category\":\"Study\",\"name\":\"Implied Volatility\",\"shortName\":\"IV\"},{\"id\":\"CTM\",\"category\":\"Study\",\"name\":\"Cycle Trading Momentum\",\"shortName\":\"CTM\"},{\"id\":\"GPMI\",\"category\":\"Study\",\"name\":\"Principal Momentum\",\"shortName\":\"GPMI\"},{\"id\":\"GTPI\",\"category\":\"Study\",\"name\":\"Turning Point\",\"shortName\":\"GTPI\"},{\"id\":\"CTLTM\",\"category\":\"Study\",\"name\":\"Long-Term Momentum\",\"shortName\":\"LTM\"},{\"id\":\"CTLTMF\",\"category\":\"Study\",\"name\":\"Long-Term Momentum, Fast\",\"shortName\":\"LTM(F)\"},{\"id\":\"DEMA\",\"category\":\"Study\",\"name\":\"Double EMA\",\"shortName\":\"DEMA\"},{\"id\":\"TEMA\",\"category\":\"Study\",\"name\":\"Triple EMA\",\"shortName\":\"TEMA\"},{\"id\":\"TSI\",\"category\":\"Study\",\"name\":\"True Strength Index\",\"shortName\":\"Tsi\"},{\"id\":\"TSISIG\",\"category\":\"Study\",\"name\":\"True Strength Index Signal\",\"shortName\":\"TsiSig\"},{\"id\":\"GMMA3\",\"category\":\"Study\",\"name\":\"GMMA-EMA3\",\"shortName\":\"GMMA(3)\"},{\"id\":\"GMMA5\",\"category\":\"Study\",\"name\":\"GMMA-EMA5\",\"shortName\":\"GMMA(5)\"},{\"id\":\"GMMA8\",\"category\":\"Study\",\"name\":\"GMMA-EMA8\",\"shortName\":\"GMMA(8)\"},{\"id\":\"GMMA10\",\"category\":\"Study\",\"name\":\"GMMA-EMA10\",\"shortName\":\"GMMA(10)\"},{\"id\":\"GMMA12\",\"category\":\"Study\",\"name\":\"GMMA-EMA12\",\"shortName\":\"GMMA(12)\"},{\"id\":\"GMMA15\",\"category\":\"Study\",\"name\":\"GMMA-EMA15\",\"shortName\":\"GMMA(15)\"},{\"id\":\"GMMA30\",\"category\":\"Study\",\"name\":\"GMMA-EMA30\",\"shortName\":\"GMMA(30)\"},{\"id\":\"GMMA35\",\"category\":\"Study\",\"name\":\"GMMA-EMA35\",\"shortName\":\"GMMA(35)\"},{\"id\":\"GMMA40\",\"category\":\"Study\",\"name\":\"GMMA-EMA40\",\"shortName\":\"GMMA(40)\"},{\"id\":\"GMMA45\",\"category\":\"Study\",\"name\":\"GMMA-EMA45\",\"shortName\":\"GMMA(45)\"},{\"id\":\"GMMA50\",\"category\":\"Study\",\"name\":\"GMMA-EMA50\",\"shortName\":\"GMMA(50)\"},{\"id\":\"GMMA60\",\"category\":\"Study\",\"name\":\"GMMA-EMA60\",\"shortName\":\"GMMA(60)\"},{\"id\":\"CONVLN\",\"category\":\"Study\",\"name\":\"ConversionLine\",\"shortName\":\"ConvLn\"},{\"id\":\"BASELN\",\"category\":\"Study\",\"name\":\"BaseLine\",\"shortName\":\"BaseLn\"},{\"id\":\"LEADSP1\",\"category\":\"Study\",\"name\":\"LeadingSpanA\",\"shortName\":\"LeadSpA\"},{\"id\":\"LEADSP2\",\"category\":\"Study\",\"name\":\"LeadingSpanB\",\"shortName\":\"LeadSpB\"},{\"id\":\"LAGGSP\",\"category\":\"Study\",\"name\":\"LagginSpan\",\"shortName\":\"LaggSp\"},{\"id\":\"VWAP\",\"category\":\"Study\",\"name\":\"VWAP\",\"shortName\":\"VWAP\"},{\"id\":\"AccountsPayable\",\"category\":\"BalanceSheet\",\"format\":\"UseMetricUnit\",\"name\":\"Accounts Payable\",\"shortName\":\"AcctsPay\"},{\"id\":\"AccruedExpenses\",\"category\":\"BalanceSheet\",\"format\":\"UseMetricUnit\",\"name\":\"Accrued Expenses\",\"shortName\":\"AccrdExp\"},{\"id\":\"Cash\",\"category\":\"BalanceSheet\",\"format\":\"UseMetricUnit\",\"name\":\"Cash & Cash Equivalents\",\"shortName\":\"Cash&CashEqv\"},{\"id\":\"CommonShares\",\"category\":\"BalanceSheet\",\"format\":\"UseMetricUnit\",\"name\":\"Common Shares\",\"shortName\":\"CommonShares\"},{\"id\":\"DeferredIncomeTax\",\"category\":\"BalanceSheet\",\"format\":\"UseMetricUnit\",\"name\":\"Deferred Income Tax\",\"shortName\":\"DefIncTax\"},{\"id\":\"DeferredLongRevenues\",\"category\":\"BalanceSheet\",\"format\":\"UseMetricUnit\",\"name\":\"Deferred Revenues\",\"shortName\":\"DefRev\"},{\"id\":\"EquityOtherInvestments\",\"category\":\"BalanceSheet\",\"format\":\"UseMetricUnit\",\"name\":\"Other Equity Investments\",\"shortName\":\"OthEquityInvest\"},{\"id\":\"IncomeTaxPayable\",\"category\":\"BalanceSheet\",\"format\":\"UseMetricUnit\",\"name\":\"Income Tax Payable\",\"shortName\":\"IncTaxPayble\"},{\"id\":\"Intangibles\",\"category\":\"BalanceSheet\",\"format\":\"UseMetricUnit\",\"name\":\"Intangibles\",\"shortName\":\"Intangibles\"},{\"id\":\"Inventories\",\"category\":\"BalanceSheet\",\"format\":\"UseMetricUnit\",\"name\":\"Inventories\",\"shortName\":\"Inventory\"},{\"id\":\"LongTermDebt\",\"category\":\"BalanceSheet\",\"format\":\"UseMetricUnit\",\"name\":\"Long Term Debt\",\"shortName\":\"LTDebt\"},{\"id\":\"MarketableSec\",\"category\":\"BalanceSheet\",\"format\":\"UseMetricUnit\",\"name\":\"Liquid Securities\",\"shortName\":\"LiqSecurities\"},{\"id\":\"OtherCurrentAssets\",\"category\":\"BalanceSheet\",\"format\":\"UseMetricUnit\",\"name\":\"Miscellaneous Current Assets\",\"shortName\":\"MiscCurrAssets\"},{\"id\":\"OtherCurrentLiabilities\",\"category\":\"BalanceSheet\",\"format\":\"UseMetricUnit\",\"name\":\"Other Current Liabilities\",\"shortName\":\"OthCurrLiab\"},{\"id\":\"OtherEquity\",\"category\":\"BalanceSheet\",\"format\":\"UseMetricUnit\",\"name\":\"Other Equity\",\"shortName\":\"OthEquity\"},{\"id\":\"OtherNonCurrentAssets\",\"category\":\"BalanceSheet\",\"format\":\"UseMetricUnit\",\"name\":\"Other Non-Current Assets\",\"shortName\":\"OthNonCurrAssets\"},{\"id\":\"OtherNonCurrentLiabilities\",\"category\":\"BalanceSheet\",\"format\":\"UseMetricUnit\",\"name\":\"Other Non-Current Liabilities\",\"shortName\":\"OthNonCurrLiab\"},{\"id\":\"PpeNet\",\"category\":\"BalanceSheet\",\"format\":\"UseMetricUnit\",\"name\":\"PPE Net\",\"shortName\":\"PPENet\"},{\"id\":\"PrepaidExpenses\",\"category\":\"BalanceSheet\",\"format\":\"UseMetricUnit\",\"name\":\"Prepaid Expenses\",\"shortName\":\"PpdExp\"},{\"id\":\"Receivables\",\"category\":\"BalanceSheet\",\"format\":\"UseMetricUnit\",\"name\":\"Receivables\",\"shortName\":\"Receivables\"},{\"id\":\"RetainedEarnings\",\"category\":\"BalanceSheet\",\"format\":\"UseMetricUnit\",\"name\":\"Retained Earnings\",\"shortName\":\"RetEarnings\"},{\"id\":\"ShorttermDebt\",\"category\":\"BalanceSheet\",\"format\":\"UseMetricUnit\",\"name\":\"Short-Term Debt\",\"shortName\":\"ShortTermDebt\"},{\"id\":\"TotalAssets\",\"category\":\"BalanceSheet\",\"format\":\"UseMetricUnit\",\"name\":\"Total Assets\",\"shortName\":\"TotAssets\"},{\"id\":\"TotalCurrentAssets\",\"category\":\"BalanceSheet\",\"format\":\"UseMetricUnit\",\"name\":\"Total Current Assets\",\"shortName\":\"TotCurrAssets\"},{\"id\":\"TotalCurrentLiabilities\",\"category\":\"BalanceSheet\",\"format\":\"UseMetricUnit\",\"name\":\"Total Current Liabilities\",\"shortName\":\"TotCurrLiab\"},{\"id\":\"TotalLiabilities\",\"category\":\"BalanceSheet\",\"format\":\"UseMetricUnit\",\"name\":\"Total Liabilities\",\"shortName\":\"TotalLiab\"},{\"id\":\"TotalLiabilitiesAndEquity\",\"category\":\"BalanceSheet\",\"format\":\"UseMetricUnit\",\"name\":\"Total Liabilities & Equity\",\"shortName\":\"TotLiab&Equity\"},{\"id\":\"TotalNonCurrentAssets\",\"category\":\"BalanceSheet\",\"format\":\"UseMetricUnit\",\"name\":\"Total Non-Current Assets\",\"shortName\":\"TotNonCurrAssets\"},{\"id\":\"TotalNonCurrentLiabilities\",\"category\":\"BalanceSheet\",\"format\":\"UseMetricUnit\",\"name\":\"Total Non-Current Liabilities\",\"shortName\":\"TotNonCurrLiabs\"},{\"id\":\"TotalShareholdersEquity\",\"category\":\"BalanceSheet\",\"format\":\"UseMetricUnit\",\"name\":\"Total Shareholders Equity\",\"shortName\":\"TotShareEquity\"},{\"id\":\"BasicEpsContOp\",\"category\":\"IncomeStatement\",\"format\":\"UseMetricUnit\",\"name\":\"Basic EPS Continued Operations\",\"shortName\":\"EPSContOps\"},{\"id\":\"BasicEpsTotalOp\",\"category\":\"IncomeStatement\",\"format\":\"UseMetricUnit\",\"name\":\"Basic EPS Total Operations\",\"shortName\":\"EPSTotOps\"},{\"id\":\"CostGoods\",\"category\":\"IncomeStatement\",\"format\":\"UseMetricUnit\",\"name\":\"Cost of Goods\",\"shortName\":\"COGS\"},{\"id\":\"DilutedEpsContOp\",\"category\":\"IncomeStatement\",\"format\":\"UseMetricUnit\",\"name\":\"Diluted EPS Continued Operations\",\"shortName\":\"DilutedEPSContOps\"},{\"id\":\"DilutedEpsTotalOp\",\"category\":\"IncomeStatement\",\"format\":\"UseMetricUnit\",\"name\":\"Diluted EPS Total Operations\",\"shortName\":\"DilutedEPSTotOps\"},{\"id\":\"Ebitda\",\"category\":\"IncomeStatement\",\"format\":\"UseMetricUnit\",\"name\":\"EBITDA\",\"shortName\":\"EBITDA\"},{\"id\":\"GrossProfit\",\"category\":\"IncomeStatement\",\"format\":\"UseMetricUnit\",\"name\":\"Gross Profit\",\"shortName\":\"GrProfit\"},{\"id\":\"IncomeTax\",\"category\":\"IncomeStatement\",\"format\":\"UseMetricUnit\",\"name\":\"Income Tax\",\"shortName\":\"IncomeTax\"},{\"id\":\"InterestExpense\",\"category\":\"IncomeStatement\",\"format\":\"UseMetricUnit\",\"name\":\"Interest Expense\",\"shortName\":\"IntExp\"},{\"id\":\"NetIncome\",\"category\":\"IncomeStatement\",\"format\":\"UseMetricUnit\",\"name\":\"Net Income Less Expenses & Tax\",\"shortName\":\"NetIncome\"},{\"id\":\"OperatingExpenses\",\"category\":\"IncomeStatement\",\"format\":\"UseMetricUnit\",\"name\":\"Operating Expenses\",\"shortName\":\"OpExpense\"},{\"id\":\"OperatingIncome\",\"category\":\"IncomeStatement\",\"format\":\"UseMetricUnit\",\"name\":\"Operating Income\",\"shortName\":\"OpIncome\"},{\"id\":\"OtherIncomeExpenses\",\"category\":\"IncomeStatement\",\"format\":\"UseMetricUnit\",\"name\":\"Other Income\",\"shortName\":\"OthInc\"},{\"id\":\"PreTaxIncome\",\"category\":\"IncomeStatement\",\"format\":\"UseMetricUnit\",\"name\":\"Pretax Income\",\"shortName\":\"PretaxInc\"},{\"id\":\"Sales\",\"category\":\"IncomeStatement\",\"format\":\"UseMetricUnit\",\"name\":\"Sales\",\"shortName\":\"Sales\"}]')},172:function(t,e,i){\"use strict\";function n(t,e,i,r){this.message=t,this.expected=e,this.found=i,this.location=r,this.name=\"SyntaxError\",\"function\"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,n)}!function(t,e){function i(){this.constructor=t}i.prototype=e.prototype,t.prototype=new i}(n,Error),n.buildMessage=function(t,e){var i={literal:function(t){return'\"'+r(t.text)+'\"'},class:function(t){var e,i=\"\";for(e=0;e<t.parts.length;e++)i+=t.parts[e]instanceof Array?s(t.parts[e][0])+\"-\"+s(t.parts[e][1]):s(t.parts[e]);return\"[\"+(t.inverted?\"^\":\"\")+i+\"]\"},any:function(t){return\"any character\"},end:function(t){return\"end of input\"},other:function(t){return t.description}};function n(t){return t.charCodeAt(0).toString(16).toUpperCase()}function r(t){return t.replace(/\\\\/g,\"\\\\\\\\\").replace(/\"/g,'\\\\\"').replace(/\\0/g,\"\\\\0\").replace(/\\t/g,\"\\\\t\").replace(/\\n/g,\"\\\\n\").replace(/\\r/g,\"\\\\r\").replace(/[\\x00-\\x0F]/g,(function(t){return\"\\\\x0\"+n(t)})).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g,(function(t){return\"\\\\x\"+n(t)}))}function s(t){return t.replace(/\\\\/g,\"\\\\\\\\\").replace(/\\]/g,\"\\\\]\").replace(/\\^/g,\"\\\\^\").replace(/-/g,\"\\\\-\").replace(/\\0/g,\"\\\\0\").replace(/\\t/g,\"\\\\t\").replace(/\\n/g,\"\\\\n\").replace(/\\r/g,\"\\\\r\").replace(/[\\x00-\\x0F]/g,(function(t){return\"\\\\x0\"+n(t)})).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g,(function(t){return\"\\\\x\"+n(t)}))}return\"Expected \"+function(t){var e,n,r,s=new Array(t.length);for(e=0;e<t.length;e++)s[e]=(r=t[e],i[r.type](r));if(s.sort(),s.length>0){for(e=1,n=1;e<s.length;e++)s[e-1]!==s[e]&&(s[n]=s[e],n++);s.length=n}switch(s.length){case 1:return s[0];case 2:return s[0]+\" or \"+s[1];default:return s.slice(0,-1).join(\", \")+\", or \"+s[s.length-1]}}(t)+\" but \"+function(t){return t?'\"'+r(t)+'\"':\"end of input\"}(e)+\" found.\"},t.exports={SyntaxError:n,parse:function(t,e){e=void 0!==e?e:{};var i,r={},s={expr:R},o=R,a=O(\"+\",!1),l=O(\"-\",!1),c=function(t,e){return function(t,e){return t.reduce((function(t,e){var i=e.filter(t=>\"ws\"!==t.op);return{op:i[0],left:t,right:i[1]}}),e)}(e,t)},u=O(\"*\",!1),h=O(\"/\",!1),d=O(\"^\",!1),p=O(\"(\",!1),f=O(\")\",!1),m=/^[0-9]/,g=D([[\"0\",\"9\"]],!1,!1),y=O(\".\",!1),v=O(\"{\",!1),T=/^[A-Z0-9\\^*$-.|:]/,b=D([[\"A\",\"Z\"],[\"0\",\"9\"],\"^\",\"*\",[\"$\",\".\"],\"|\",\":\"],!1,!1),S=O(\"}\",!1),P=/^[ \\t\\r\\n]/,A=D([\" \",\"\\t\",\"\\r\",\"\\n\"],!1,!1),w=0,C=0,x=[{line:1,column:1}],M=0,E=[];if(\"startRule\"in e){if(!(e.startRule in s))throw new Error(\"Can't start parsing from rule \\\"\"+e.startRule+'\".');o=s[e.startRule]}function O(t,e){return{type:\"literal\",text:t,ignoreCase:e}}function D(t,e,i){return{type:\"class\",parts:t,inverted:e,ignoreCase:i}}function L(e){var i,n=x[e];if(n)return n;for(i=e-1;!x[i];)i--;for(n={line:(n=x[i]).line,column:n.column};i<e;)10===t.charCodeAt(i)?(n.line++,n.column=1):n.column++,i++;return x[e]=n,n}function _(t,e){var i=L(t),n=L(e);return{start:{offset:t,line:i.line,column:i.column},end:{offset:e,line:n.line,column:n.column}}}function I(t){w<M||(w>M&&(M=w,E=[]),E.push(t))}function N(t,e,i){return new n(n.buildMessage(t,e),t,e,i)}function R(){return H()}function H(){var e,i,n,s,o,u,h;if(e=w,(i=k())!==r){if(n=[],s=w,(o=V())!==r?(43===t.charCodeAt(w)?(u=\"+\",w++):(u=r,I(a)),u===r&&(45===t.charCodeAt(w)?(u=\"-\",w++):(u=r,I(l))),u!==r&&(h=k())!==r?s=o=[o,u,h]:(w=s,s=r)):(w=s,s=r),s!==r)for(;s!==r;)n.push(s),s=w,(o=V())!==r?(43===t.charCodeAt(w)?(u=\"+\",w++):(u=r,I(a)),u===r&&(45===t.charCodeAt(w)?(u=\"-\",w++):(u=r,I(l))),u!==r&&(h=k())!==r?s=o=[o,u,h]:(w=s,s=r)):(w=s,s=r);else n=r;n!==r?(C=e,e=i=c(i,n)):(w=e,e=r)}else w=e,e=r;return e===r&&(e=k()),e}function k(){var e,i,n,s,o,a,l;if(e=w,(i=B())!==r){if(n=[],s=w,(o=V())!==r?(42===t.charCodeAt(w)?(a=\"*\",w++):(a=r,I(u)),a===r&&(47===t.charCodeAt(w)?(a=\"/\",w++):(a=r,I(h))),a!==r&&(l=B())!==r?s=o=[o,a,l]:(w=s,s=r)):(w=s,s=r),s!==r)for(;s!==r;)n.push(s),s=w,(o=V())!==r?(42===t.charCodeAt(w)?(a=\"*\",w++):(a=r,I(u)),a===r&&(47===t.charCodeAt(w)?(a=\"/\",w++):(a=r,I(h))),a!==r&&(l=B())!==r?s=o=[o,a,l]:(w=s,s=r)):(w=s,s=r);else n=r;n!==r?(C=e,e=i=c(i,n)):(w=e,e=r)}else w=e,e=r;return e===r&&(e=B()),e}function F(){var e,i,n,s;return e=w,(i=U())!==r&&V()!==r?(94===t.charCodeAt(w)?(n=\"^\",w++):(n=r,I(d)),n!==r&&V()!==r&&(s=U())!==r?(C=e,e=i={op:\"^\",left:i,right:s}):(w=e,e=r)):(w=e,e=r),e===r&&(e=U()),e}function U(){var e,i,n,s;return(e=function(){var e,i,n,s,o,a,l,c;if(e=w,(i=V())!==r){if(n=w,s=[],m.test(t.charAt(w))?(o=t.charAt(w),w++):(o=r,I(g)),o!==r)for(;o!==r;)s.push(o),m.test(t.charAt(w))?(o=t.charAt(w),w++):(o=r,I(g));else s=r;if(s!==r){if(o=w,46===t.charCodeAt(w)?(a=\".\",w++):(a=r,I(y)),a===r&&(a=null),a!==r){for(l=[],m.test(t.charAt(w))?(c=t.charAt(w),w++):(c=r,I(g));c!==r;)l.push(c),m.test(t.charAt(w))?(c=t.charAt(w),w++):(c=r,I(g));l!==r?o=a=[a,l]:(w=o,o=r)}else w=o,o=r;o===r&&(o=null),o!==r?n=s=[s,o]:(w=n,n=r)}else w=n,n=r;n!==r?(C=e,i={op:\"num\",left:parseFloat(t.substring(C,w))},e=i):(w=e,e=r)}else w=e,e=r;return e}())===r&&(e=function(){var e,i,n,s,o;if(e=w,(i=V())!==r)if(123===t.charCodeAt(w)?(n=\"{\",w++):(n=r,I(v)),n!==r){if(s=[],T.test(t.charAt(w))?(o=t.charAt(w),w++):(o=r,I(b)),o!==r)for(;o!==r;)s.push(o),T.test(t.charAt(w))?(o=t.charAt(w),w++):(o=r,I(b));else s=r;s!==r?(125===t.charCodeAt(w)?(o=\"}\",w++):(o=r,I(S)),o!==r?(C=e,i={op:\"sym\",left:s.join(\"\")},e=i):(w=e,e=r)):(w=e,e=r)}else w=e,e=r;else w=e,e=r;return e}())===r&&(e=w,V()!==r?(40===t.charCodeAt(w)?(i=\"(\",w++):(i=r,I(p)),i!==r&&V()!==r&&(n=H())!==r&&V()!==r?(41===t.charCodeAt(w)?(s=\")\",w++):(s=r,I(f)),s!==r?(C=e,e={op:\"grp\",left:n}):(w=e,e=r)):(w=e,e=r)):(w=e,e=r)),e}function B(){var e,i,n;return e=w,V()!==r?(45===t.charCodeAt(w)?(i=\"-\",w++):(i=r,I(l)),i!==r&&V()!==r&&(n=F())!==r?(C=e,e={op:i,left:n}):(w=e,e=r)):(w=e,e=r),e===r&&(e=F()),e}function V(){var e,i,n;for(e=w,i=[],P.test(t.charAt(w))?(n=t.charAt(w),w++):(n=r,I(A));n!==r;)i.push(n),P.test(t.charAt(w))?(n=t.charAt(w),w++):(n=r,I(A));return i!==r&&(C=e,i={op:\"ws\"}),e=i}if((i=o())!==r&&w===t.length)return i;throw i!==r&&w<t.length&&I({type:\"end\"}),N(E,M<t.length?t.charAt(M):null,M<t.length?_(M,M+1):_(M,M))}}},173:function(t,e,i){\"use strict\";(function(t){var i=function(){if(\"undefined\"!=typeof Map)return Map;function t(t,e){var i=-1;return t.some((function(t,n){return t[0]===e&&(i=n,!0)})),i}return function(){function e(){this.__entries__=[]}return Object.defineProperty(e.prototype,\"size\",{get:function(){return this.__entries__.length},enumerable:!0,configurable:!0}),e.prototype.get=function(e){var i=t(this.__entries__,e),n=this.__entries__[i];return n&&n[1]},e.prototype.set=function(e,i){var n=t(this.__entries__,e);~n?this.__entries__[n][1]=i:this.__entries__.push([e,i])},e.prototype.delete=function(e){var i=this.__entries__,n=t(i,e);~n&&i.splice(n,1)},e.prototype.has=function(e){return!!~t(this.__entries__,e)},e.prototype.clear=function(){this.__entries__.splice(0)},e.prototype.forEach=function(t,e){void 0===e&&(e=null);for(var i=0,n=this.__entries__;i<n.length;i++){var r=n[i];t.call(e,r[1],r[0])}},e}()}(),n=\"undefined\"!=typeof window&&\"undefined\"!=typeof document&&window.document===document,r=void 0!==t&&t.Math===Math?t:\"undefined\"!=typeof self&&self.Math===Math?self:\"undefined\"!=typeof window&&window.Math===Math?window:Function(\"return this\")(),s=\"function\"==typeof requestAnimationFrame?requestAnimationFrame.bind(r):function(t){return setTimeout((function(){return t(Date.now())}),1e3/60)};var o=[\"top\",\"right\",\"bottom\",\"left\",\"width\",\"height\",\"size\",\"weight\"],a=\"undefined\"!=typeof MutationObserver,l=function(){function t(){this.connected_=!1,this.mutationEventsAdded_=!1,this.mutationsObserver_=null,this.observers_=[],this.onTransitionEnd_=this.onTransitionEnd_.bind(this),this.refresh=function(t,e){var i=!1,n=!1,r=0;function o(){i&&(i=!1,t()),n&&l()}function a(){s(o)}function l(){var t=Date.now();if(i){if(t-r<2)return;n=!0}else i=!0,n=!1,setTimeout(a,e);r=t}return l}(this.refresh.bind(this),20)}return t.prototype.addObserver=function(t){~this.observers_.indexOf(t)||this.observers_.push(t),this.connected_||this.connect_()},t.prototype.removeObserver=function(t){var e=this.observers_,i=e.indexOf(t);~i&&e.splice(i,1),!e.length&&this.connected_&&this.disconnect_()},t.prototype.refresh=function(){this.updateObservers_()&&this.refresh()},t.prototype.updateObservers_=function(){var t=this.observers_.filter((function(t){return t.gatherActive(),t.hasActive()}));return t.forEach((function(t){return t.broadcastActive()})),t.length>0},t.prototype.connect_=function(){n&&!this.connected_&&(document.addEventListener(\"transitionend\",this.onTransitionEnd_),window.addEventListener(\"resize\",this.refresh),a?(this.mutationsObserver_=new MutationObserver(this.refresh),this.mutationsObserver_.observe(document,{attributes:!0,childList:!0,characterData:!0,subtree:!0})):(document.addEventListener(\"DOMSubtreeModified\",this.refresh),this.mutationEventsAdded_=!0),this.connected_=!0)},t.prototype.disconnect_=function(){n&&this.connected_&&(document.removeEventListener(\"transitionend\",this.onTransitionEnd_),window.removeEventListener(\"resize\",this.refresh),this.mutationsObserver_&&this.mutationsObserver_.disconnect(),this.mutationEventsAdded_&&document.removeEventListener(\"DOMSubtreeModified\",this.refresh),this.mutationsObserver_=null,this.mutationEventsAdded_=!1,this.connected_=!1)},t.prototype.onTransitionEnd_=function(t){var e=t.propertyName,i=void 0===e?\"\":e;o.some((function(t){return!!~i.indexOf(t)}))&&this.refresh()},t.getInstance=function(){return this.instance_||(this.instance_=new t),this.instance_},t.instance_=null,t}(),c=function(t,e){for(var i=0,n=Object.keys(e);i<n.length;i++){var r=n[i];Object.defineProperty(t,r,{value:e[r],enumerable:!1,writable:!1,configurable:!0})}return t},u=function(t){return t&&t.ownerDocument&&t.ownerDocument.defaultView||r},h=y(0,0,0,0);function d(t){return parseFloat(t)||0}function p(t){for(var e=[],i=1;i<arguments.length;i++)e[i-1]=arguments[i];return e.reduce((function(e,i){return e+d(t[\"border-\"+i+\"-width\"])}),0)}function f(t){var e=t.clientWidth,i=t.clientHeight;if(!e&&!i)return h;var n=u(t).getComputedStyle(t),r=function(t){for(var e={},i=0,n=[\"top\",\"right\",\"bottom\",\"left\"];i<n.length;i++){var r=n[i],s=t[\"padding-\"+r];e[r]=d(s)}return e}(n),s=r.left+r.right,o=r.top+r.bottom,a=d(n.width),l=d(n.height);if(\"border-box\"===n.boxSizing&&(Math.round(a+s)!==e&&(a-=p(n,\"left\",\"right\")+s),Math.round(l+o)!==i&&(l-=p(n,\"top\",\"bottom\")+o)),!function(t){return t===u(t).document.documentElement}(t)){var c=Math.round(a+s)-e,f=Math.round(l+o)-i;1!==Math.abs(c)&&(a-=c),1!==Math.abs(f)&&(l-=f)}return y(r.left,r.top,a,l)}var m=\"undefined\"!=typeof SVGGraphicsElement?function(t){return t instanceof u(t).SVGGraphicsElement}:function(t){return t instanceof u(t).SVGElement&&\"function\"==typeof t.getBBox};function g(t){return n?m(t)?function(t){var e=t.getBBox();return y(0,0,e.width,e.height)}(t):f(t):h}function y(t,e,i,n){return{x:t,y:e,width:i,height:n}}var v=function(){function t(t){this.broadcastWidth=0,this.broadcastHeight=0,this.contentRect_=y(0,0,0,0),this.target=t}return t.prototype.isActive=function(){var t=g(this.target);return this.contentRect_=t,t.width!==this.broadcastWidth||t.height!==this.broadcastHeight},t.prototype.broadcastRect=function(){var t=this.contentRect_;return this.broadcastWidth=t.width,this.broadcastHeight=t.height,t},t}(),T=function(t,e){var i,n,r,s,o,a,l,u=(n=(i=e).x,r=i.y,s=i.width,o=i.height,a=\"undefined\"!=typeof DOMRectReadOnly?DOMRectReadOnly:Object,l=Object.create(a.prototype),c(l,{x:n,y:r,width:s,height:o,top:r,right:n+s,bottom:o+r,left:n}),l);c(this,{target:t,contentRect:u})},b=function(){function t(t,e,n){if(this.activeObservations_=[],this.observations_=new i,\"function\"!=typeof t)throw new TypeError(\"The callback provided as parameter 1 is not a function.\");this.callback_=t,this.controller_=e,this.callbackCtx_=n}return t.prototype.observe=function(t){if(!arguments.length)throw new TypeError(\"1 argument required, but only 0 present.\");if(\"undefined\"!=typeof Element&&Element instanceof Object){if(!(t instanceof u(t).Element))throw new TypeError('parameter 1 is not of type \"Element\".');var e=this.observations_;e.has(t)||(e.set(t,new v(t)),this.controller_.addObserver(this),this.controller_.refresh())}},t.prototype.unobserve=function(t){if(!arguments.length)throw new TypeError(\"1 argument required, but only 0 present.\");if(\"undefined\"!=typeof Element&&Element instanceof Object){if(!(t instanceof u(t).Element))throw new TypeError('parameter 1 is not of type \"Element\".');var e=this.observations_;e.has(t)&&(e.delete(t),e.size||this.controller_.removeObserver(this))}},t.prototype.disconnect=function(){this.clearActive(),this.observations_.clear(),this.controller_.removeObserver(this)},t.prototype.gatherActive=function(){var t=this;this.clearActive(),this.observations_.forEach((function(e){e.isActive()&&t.activeObservations_.push(e)}))},t.prototype.broadcastActive=function(){if(this.hasActive()){var t=this.callbackCtx_,e=this.activeObservations_.map((function(t){return new T(t.target,t.broadcastRect())}));this.callback_.call(t,e,t),this.clearActive()}},t.prototype.clearActive=function(){this.activeObservations_.splice(0)},t.prototype.hasActive=function(){return this.activeObservations_.length>0},t}(),S=\"undefined\"!=typeof WeakMap?new WeakMap:new i,P=function t(e){if(!(this instanceof t))throw new TypeError(\"Cannot call a class as a function.\");if(!arguments.length)throw new TypeError(\"1 argument required, but only 0 present.\");var i=l.getInstance(),n=new b(e,i,this);S.set(this,n)};[\"observe\",\"unobserve\",\"disconnect\"].forEach((function(t){P.prototype[t]=function(){var e;return(e=S.get(this))[t].apply(e,arguments)}}));var A=void 0!==r.ResizeObserver?r.ResizeObserver:P;e.a=A}).call(this,i(187))},174:function(t){t.exports=JSON.parse('{\"major\":2,\"minor\":68,\"patch\":3,\"prerelease\":false}')},177:function(t,e,i){\"use strict\";var n;!function(){var r=1,s=2,o=3,a=4,l=5,c=6,u=7,h=8,d=9,p=10,f=11,m=function(){var t,e,i,n,m=1,g=2,y=3,v=4,T=5,b=6,S=7,P='Unexpected token \"%0\"',A=\"Unexpected end of path\";function w(){for(var t,e=C();N(\"|\");)V(),(t||(t=[e])).push(C());return t?{type:h,args:t}:e}function C(){return N(\"(\")?x():E()}function x(){F(\"(\");var t=w();F(\")\");for(var e,i=[];e=M();)i.push(e);return i.length?t.type===r?(t.parts=t.parts.concat(i),t):(i.unshift(t),{type:r,parts:i}):t}function M(){return N(\"[\")?function(){F(\"[\");var t=function(){if(N(\":\"))return V(),{type:p,toIdx:I()};var t=I();if(N(\":\"))return V(),N(\"]\")?{type:p,fromIdx:t}:{type:p,fromIdx:t,toIdx:I()};return{type:p,idx:t}}();return F(\"]\"),{type:a,arg:t}}():N(\"{\")?function(){F(\"{\");var t=O();return F(\"}\"),{type:o,arg:t}}():N(\"(\")?x():void 0}function E(){R()||z(V());var t,e=!1;N(\"^\")?(V(),e=!0):k()&&(t=V().val.substr(1));for(var i,n=[];i=H()?function(){var t,e=V().val,i=U();(N(\"*\")||i.type===m||i.type===y)&&(t=V().val);return{type:s,selector:e,prop:t}}():M();)n.push(i);return{type:r,fromRoot:e,subst:t,parts:n}}function O(){for(var t,e=D();N(\"||\");)V(),(t||(t=[e])).push(D());return t?{type:l,op:\"||\",args:t}:e}function D(){for(var t,e=L();N(\"&&\");)V(),(t||(t=[e])).push(L());return t?{type:l,op:\"&&\",args:t}:e}function L(){for(var t=function t(){var e=function(){var t=_();for(;N(\"+\")||N(\"-\");)t={type:u,op:V().val,args:[t,_()]};return t}();for(;N(\"<\")||N(\">\")||N(\"<=\")||N(\">=\");)e={type:c,op:V().val,args:[e,t()]};return e}();N(\"==\")||N(\"!=\")||N(\"===\")||N(\"!==\")||N(\"^==\")||N(\"==^\")||N(\"^=\")||N(\"=^\")||N(\"$==\")||N(\"==$\")||N(\"$=\")||N(\"=$\")||N(\"*==\")||N(\"==*\")||N(\"*=\")||N(\"=*\");)t={type:c,op:V().val,args:[t,L()]};return t}function _(){for(var t=I();N(\"*\")||N(\"/\")||N(\"%\");)t={type:u,op:V().val,args:[t,_()]};return t}function I(){return N(\"!\")||N(\"-\")?{type:d,op:V().val,arg:I()}:function(){var t=U().type;if(t===y||t===g||t===v||t===T)return{type:f,val:V().val};if(R())return E();if(N(\"(\"))return function(){F(\"(\");var t=O();return F(\")\"),t}();return z(V())}()}function N(t){var e=U();return e.type===b&&e.val===t}function R(){return H()||k()||N(\"^\")}function H(){var t=U();if(t.type===b){var e=t.val;return\".\"===e||\"..\"===e}return!1}function k(){var t=U();return t.type===m&&\"$\"===t.val[0]}function F(t){var e=V();e.type===b&&e.val===t||z(e)}function U(){if(null!==i)return i;var t=e;return i=B(),e=t,i}function B(){for(;i=t[e],\" \\r\\n\\t\".indexOf(i)>-1;)++e;var i;if(e>=n)return{type:S,range:[e,e]};var r=function(){var i=e,n=t[e],r=t[e+1];if(\".\"===n){if(W(r))return;return\".\"===t[++e]?{type:b,val:\"..\",range:[i,++e]}:{type:b,val:\".\",range:[i,e]}}if(\"=\"===r){var s=t[e+2];if(\"=\"===s){if(\"=!^$*\".indexOf(n)>=0)return{type:b,val:n+r+s,range:[i,e+=3]}}else if(\"^$*\".indexOf(s)>=0){if(\"=\"===n)return{type:b,val:n+r+s,range:[i,e+=3]}}else if(\"=!^$*><\".indexOf(n)>=0)return{type:b,val:n+r,range:[i,e+=2]}}else if(\"=\"===n&&\"^$*\".indexOf(r)>=0)return{type:b,val:n+r,range:[i,e+=2]};if(n===r&&(\"|\"===n||\"&\"===n))return{type:b,val:n+r,range:[i,e+=2]};if(\":{}()[]^+-*/%!><|\".indexOf(n)>=0)return{type:b,val:n,range:[i,++e]}}();if(r||(r=function(){var i=t[e];if(!j(i))return;var r=e,s=i;for(;++e<n&&G(i=t[e]);)s+=i;switch(s){case\"true\":case\"false\":return{type:v,val:\"true\"===s,range:[r,e]};case\"null\":return{type:T,val:null,range:[r,e]};default:return{type:m,val:s,range:[r,e]}}}())||(r=function(){if('\"'!==t[e]&&\"'\"!==t[e])return;var i,r=t[e],s=++e,o=\"\",a=!1;for(;e<n;){if(\"\\\\\"===(i=t[e++]))i=t[e++];else if(('\"'===i||\"'\"===i)&&i===r){a=!0;break}o+=i}if(a)return{type:y,val:o,range:[s,e]}}())||(r=function(){var i=e,r=t[e],s=\".\"===r;if(s||W(r)){for(var o=r;++e<n;){if(\".\"===(r=t[e])){if(s)return;s=!0}else if(!W(r))break;o+=r}return{type:g,val:s?parseFloat(o):parseInt(o,10),range:[i,e]}}}()))return r;r={range:[e,e]},e>=n?r.type=S:r.val=t[e],z(r)}function V(){var t;return i?(e=i.range[1],t=i,i=null,t):B()}function W(t){return\"0123456789\".indexOf(t)>=0}function j(t){return\"$\"===t||\"@\"===t||\"_\"===t||t>=\"a\"&&t<=\"z\"||t>=\"A\"&&t<=\"Z\"}function G(t){return j(t)||t>=\"0\"&&t<=\"9\"}function z(t){t.type===S&&Y(t,A),Y(t,P,t.val)}function Y(t,e){var i=Array.prototype.slice.call(arguments,2),n=e.replace(/%(\\d)/g,(function(t,e){return i[e]||\"\"})),r=new Error(n);throw r.column=t.range[0],r}return function(r){t=r.split(\"\"),e=0,i=null,n=t.length;var s=w(),o=V();return o.type!==S&&z(o),s}}(),g=function(){var t,e,i,n;function p(){if(n.length)return n.shift();var t=\"v\"+ ++i;return e.push(t),t}function m(){for(var t=arguments,e=t.length;e--;)n.push(t[e])}function g(e,i,n){if(e.prop){var r=A(e.prop),s=p(),o=p(),a=p(),l=p(),c=p(),u=p(),h=p();t.push(s,\"= [];\",o,\"= 0;\",a,\"=\",n,\".length;\",h,\"= [];\",\"while(\",o,\"<\",a,\") {\",l,\"=\",n,\"[\",o,\"++];\",\"if(\",l,\"!= null) {\"),\"*\"===e.prop?(t.push(\"if(typeof \",l,'=== \"object\") {',\"if(isArr(\",l,\")) {\",s,\"=\",s,\".concat(\",l,\");\",\"}\",\"else {\",\"for(\",c,\" in \",l,\") {\",\"if(\",l,\".hasOwnProperty(\",c,\")) {\",u,\"=\",l,\"[\",c,\"];\"),w(s,u),t.push(\"}\",\"}\",\"}\",\"}\")):(t.push(u,\"=\",l,\"[\",r,\"];\"),w(s,u,h,a)),t.push(\"}\",\"}\",i,\"=\",a,\"> 1 &&\",h,\".length?\",h,\".length > 1?\",\"concat.apply(\",s,\",\",h,\") :\",s,\".concat(\",h,\"[0]) :\",s,\";\"),m(s,o,a,l,c,u,h)}}function y(e,i,n){var r=e.prop,s=p(),o=p(),a=p(),l=p(),c=p(),u=p(),h=p(),d=p();t.push(s,\"=\",n,\".slice(),\",d,\"= [];\",\"while(\",s,\".length) {\",o,\"=\",s,\".shift();\"),r?t.push(\"if(typeof \",o,'=== \"object\" &&',o,\") {\"):t.push(\"if(typeof \",o,\"!= null) {\"),t.push(a,\"= [];\",\"if(isArr(\",o,\")) {\",l,\"= 0,\",h,\"=\",o,\".length;\",\"while(\",l,\"<\",h,\") {\",u,\"=\",o,\"[\",l,\"++];\"),r&&t.push(\"if(typeof \",u,'=== \"object\") {'),w(a,u),r&&t.push(\"}\"),t.push(\"}\",\"}\",\"else {\"),r?\"*\"!==r&&(t.push(u,\"=\",o,'[\"'+r+'\"];'),w(d,u)):(w(d,o),t.push(\"if(typeof \",o,'=== \"object\") {')),t.push(\"for(\",c,\" in \",o,\") {\",\"if(\",o,\".hasOwnProperty(\",c,\")) {\",u,\"=\",o,\"[\",c,\"];\"),w(a,u),\"*\"===r&&w(d,u),t.push(\"}\",\"}\"),r||t.push(\"}\"),t.push(\"}\",a,\".length &&\",s,\".unshift.apply(\",s,\",\",a,\");\",\"}\",\"}\",i,\"=\",d,\";\"),m(s,o,a,l,c,u,h,d)}function v(e,i,n){var r=p(),s=p(),o=p(),a=p(),l=p();t.push(r,\"= [];\",s,\"= 0;\",o,\"=\",n,\".length;\",\"while(\",s,\"<\",o,\") {\",l,\"=\",n,\"[\",s,\"++];\"),b(e.arg,a,l),t.push(x(e.arg,a),\"&&\",r,\".push(\",l,\");\",\"}\",i,\"=\",r,\";\"),m(r,s,o,l,a)}function T(e,i,n){var r,s,o=e.arg;if(o.idx){var a=p();return b(o.idx,a,n),t.push(a,\"< 0 && (\",a,\"=\",n,\".length +\",a,\");\",i,\"=\",n,\"[\",a,\"] == null? [] : [\",n,\"[\",a,\"]];\"),m(a),!1}o.fromIdx?o.toIdx?(b(o.fromIdx,r=p(),n),b(o.toIdx,s=p(),n),t.push(i,\"=\",n,\".slice(\",r,\",\",s,\");\"),m(r,s)):(b(o.fromIdx,r=p(),n),t.push(i,\"=\",n,\".slice(\",r,\");\"),m(r)):(b(o.toIdx,s=p(),n),t.push(i,\"=\",n,\".slice(0,\",s,\");\"),m(s))}function b(e,i,n){switch(e.type){case r:!function(e,i,n){var r=e.parts,l=0,c=r.length;for(t.push(i,\"=\",e.fromRoot?\"data\":e.subst?\"subst.\"+e.subst:n,\";\",\"isArr(\"+i+\") || (\"+i+\" = [\"+i+\"]);\");l<c;){var u=r[l++];switch(u.type){case s:\"..\"===u.selector?y(u,i,i):g(u,i,i);break;case o:v(u,i,i);break;case a:T(u,i,i);break;case h:P(u,i,i)}}}(e,i,n);break;case h:P(e,i,n);break;case c:!function(e,i,n){var s=p(),o=p(),a=p(),l=p(),c=p(),u=p(),h=p(),d=p(),g=e.args[0],y=e.args[1];t.push(i,\"= false;\"),b(g,s,n),b(y,o,n);var v=g.type===r,T=y.type===f;t.push(a,\"=\"),v?t.push(\"true;\"):t.push(\"isArr(\",s,\");\"),t.push(l,\"=\"),T?t.push(\"false;\"):t.push(\"isArr(\",o,\");\"),t.push(\"if(\"),v||t.push(a,\"&&\"),t.push(s,\".length === 1) {\",s,\"=\",s,\"[0];\",a,\"= false;\",\"}\"),T||t.push(\"if(\",l,\"&&\",o,\".length === 1) {\",o,\"=\",o,\"[0];\",l,\"= false;\",\"}\"),t.push(c,\"= 0;\",\"if(\",a,\") {\",h,\"=\",s,\".length;\"),T||(t.push(\"if(\",l,\") {\",d,\"=\",o,\".length;\",\"while(\",c,\"<\",h,\"&& !\",i,\") {\",u,\"= 0;\",\"while(\",u,\"<\",d,\") {\"),S(e.op,[s,\"[\",c,\"]\"].join(\"\"),[o,\"[\",u,\"]\"].join(\"\")),t.push(i,\"= true;\",\"break;\",\"}\",\"++\",u,\";\",\"}\",\"++\",c,\";\",\"}\",\"}\",\"else {\"));t.push(\"while(\",c,\"<\",h,\") {\"),S(e.op,[s,\"[\",c,\"]\"].join(\"\"),o),t.push(i,\"= true;\",\"break;\",\"}\",\"++\",c,\";\",\"}\"),T||t.push(\"}\"),t.push(\"}\"),T||(t.push(\"else if(\",l,\") {\",d,\"=\",o,\".length;\",\"while(\",c,\"<\",d,\") {\"),S(e.op,s,[o,\"[\",c,\"]\"].join(\"\")),t.push(i,\"= true;\",\"break;\",\"}\",\"++\",c,\";\",\"}\",\"}\"));t.push(\"else {\",i,\"=\",N[e.op](s,o),\";\",\"}\"),m(s,o,a,l,c,u,h,d)}(e,i,n);break;case u:!function(e,i,n){var r=p(),s=p(),o=e.args;b(o[0],r,n),b(o[1],s,n),t.push(i,\"=\",N[e.op](M(o[0],r),M(o[1],s)),\";\"),m(r,s)}(e,i,n);break;case l:!function(e,i,n){var r,s=[],o=e.args,a=o.length,l=0;switch(t.push(i,\"= false;\"),e.op){case\"&&\":for(;l<a;)s.push(r=p()),b(o[l],r,n),t.push(\"if(\",x(o[l++],r),\") {\");t.push(i,\"= true;\");break;case\"||\":for(;l<a;)s.push(r=p()),b(o[l],r,n),t.push(\"if(\",x(o[l],r),\") {\",i,\"= true;\",\"}\"),1+l++<a&&t.push(\"else {\");--a}for(;a--;)t.push(\"}\");m.apply(null,s)}(e,i,n);break;case d:!function(e,i,n){var r=p(),s=e.arg;switch(b(s,r,n),e.op){case\"!\":t.push(i,\"= !\",x(s,r)+\";\");break;case\"-\":t.push(i,\"= -\",M(s,r)+\";\")}m(r)}(e,i,n);break;case f:t.push(i,\"=\"),w=e.val,t.push(\"string\"==typeof w?A(w):null===w?\"null\":w),t.push(\";\")}var w}function S(e,i,n){t.push(\"if(\",N[e](i,n),\") {\")}function P(e,i,n){for(var r=[],s=e.args,o=s.length,a=0;a<o;)r.push(p()),b(s[a],r[a++],n);t.push(i,\"= concat.call(\",r.join(\",\"),\");\"),m.apply(null,r)}function A(t){return\"'\"+t.replace(/\\\\/g,\"\\\\\\\\\").replace(/'/g,\"\\\\'\")+\"'\"}function w(e,i,n,r){t.push(\"if(typeof \",i,'!== \"undefined\") {',\"if(isArr(\",i,\")) {\"),n&&(t.push(r,\"> 1?\"),C(n,i),t.push(\":\")),t.push(e,\"=\",e,\".length?\",e,\".concat(\",i,\") :\",i,\".slice()\",\";\",\"}\",\"else {\"),n&&t.push(\"if(\",n,\".length) {\",e,\"= concat.apply(\",e,\",\",n,\");\",n,\"= [];\",\"}\"),C(e,i),t.push(\";\",\"}\",\"}\")}function C(e,i){t.push(e,\".length?\",e,\".push(\",i,\") :\",e,\"[0] =\",i)}function x(t,e){switch(t.type){case l:return e;case f:return\"!!\"+e;case r:return e+\".length > 0\";default:return[\"(typeof \",e,'=== \"boolean\"?',e,\":\",\"isArr(\",e,\")?\",e,\".length > 0 : !!\",e,\")\"].join(\"\")}}function M(t,e){switch(t.type){case f:return e;case r:return e+\"[0]\";default:return[\"(isArr(\",e,\")?\",e,\"[0] : \",e,\")\"].join(\"\")}}function E(t,e){return[\"typeof \",t,'=== \"string\" && typeof ',e,'=== \"string\" &&',t,\".indexOf(\",e,\") === 0\"].join(\"\")}function O(t,e){return[t,\"!= null &&\",e,\"!= null &&\",t,\".toString().toLowerCase().indexOf(\",e,\".toString().toLowerCase()) === 0\"].join(\"\")}function D(t,e){return[\"typeof \",t,'=== \"string\" && typeof ',e,'=== \"string\" &&',t,\".length >=\",e,\".length &&\",t,\".lastIndexOf(\",e,\") ===\",t,\".length -\",e,\".length\"].join(\"\")}function L(t,e){return[t,\"!= null &&\",e,\"!= null &&\",\"(\",t,\"=\",t,\".toString()).length >=\",\"(\",e,\"=\",e,\".toString()).length &&\",\"(\",t,\".toLowerCase()).lastIndexOf(\",\"(\",e,\".toLowerCase())) ===\",t,\".length -\",e,\".length\"].join(\"\")}function _(t,e){return[\"typeof \",t,'=== \"string\" && typeof ',e,'=== \"string\" &&',t,\".indexOf(\",e,\") > -1\"].join(\"\")}function I(t,e){return[t,\"!= null && \",e,\"!= null &&\",t,\".toString().toLowerCase().indexOf(\",e,\".toString().toLowerCase()) > -1\"].join(\"\")}var N={\"===\":function(t,e){return t+\"===\"+e},\"==\":function(t,e){return[\"typeof \",t,'=== \"string\" && typeof ',e,'=== \"string\"?',t,\".toLowerCase() ===\",e,\".toLowerCase() :\"+t,\"==\",e].join(\"\")},\">=\":function(t,e){return t+\">=\"+e},\">\":function(t,e){return t+\">\"+e},\"<=\":function(t,e){return t+\"<=\"+e},\"<\":function(t,e){return t+\"<\"+e},\"!==\":function(t,e){return t+\"!==\"+e},\"!=\":function(t,e){return t+\"!=\"+e},\"^==\":E,\"==^\":function(t,e){return E(e,t)},\"^=\":O,\"=^\":function(t,e){return O(e,t)},\"$==\":D,\"==$\":function(t,e){return D(e,t)},\"$=\":L,\"=$\":function(t,e){return L(e,t)},\"*==\":_,\"==*\":function(t,e){return _(e,t)},\"=*\":function(t,e){return I(e,t)},\"*=\":I,\"+\":function(t,e){return t+\"+\"+e},\"-\":function(t,e){return t+\"-\"+e},\"*\":function(t,e){return t+\"*\"+e},\"/\":function(t,e){return t+\"/\"+e},\"%\":function(t,e){return t+\"%\"+e}};return function(s){if(t=[],e=[\"res\"],i=0,n=[],b(s,\"res\",\"data\"),t.unshift(\"var \",Array.isArray?\"isArr = Array.isArray\":'toStr = Object.prototype.toString, isArr = function(o) { return toStr.call(o) === \"[object Array]\"; }',\", concat = Array.prototype.concat\",\",\",e.join(\",\"),\";\"),s.type===r){var o=s.parts[s.parts.length-1];o&&o.type===a&&\"idx\"in o.arg&&t.push(\"res = res[0];\")}return t.push(\"return res;\"),t.join(\"\")}}();function y(t){return Function(\"data,subst\",g(m(t)))}var v={},T=[],b={cacheSize:100},S={cacheSize:function(t,e){if(e<t&&T.length>e)for(var i=T.splice(0,T.length-e),n=i.length;n--;)delete v[i[n]]}},P=function(t,e,i){return v[t]||(v[t]=y(t),T.push(t)>b.cacheSize&&delete v[T.shift()]),v[t](e,i||{})};P.version=\"0.3.4\",P.params=function(t){if(!arguments.length)return b;for(var e in t)t.hasOwnProperty(e)&&(S[e]&&S[e](b[e],t[e]),b[e]=t[e])},P.compile=y,P.apply=P,\"object\"==typeof t.exports?t.exports=P:\"object\"==typeof modules?modules.define(\"jspath\",(function(t){t(P)})):void 0===(n=function(t,e,i){i.exports=P}.call(e,i,e,t))||(t.exports=n)}()},178:function(t,e,i){var n;(function(){var r=function(t){if(null===t||\"object\"!=typeof t)return t;var e;if(t instanceof Date)return(e=new Date).setTime(t.getTime()),e;if(t instanceof RegExp)return e=new RegExp(t);if(t instanceof Array){e=[];for(var i=0,n=t.length;i<n;i++)e[i]=r(t[i]);return e}if(t instanceof Object){for(var s in e={},t)t.hasOwnProperty(s)&&(e[s]=r(t[s]));return e}throw new Error(\"Unable to clone object!\")},s=function(t){for(var e=[r(t[0])],i=e[0].key,n=e[0].object,s=1,o=t.length;s<o;s++)n=n[i],i=t[s].key,e.push({object:n,key:i});return e},o=function(t,e){var i=t.length-1,n=t[i].key;e[i].object[n]=t[i].object[n]},a={type:!0,not:!0,anyOf:!0,allOf:!0,oneOf:!0,$ref:!0,$schema:!0,id:!0,exclusiveMaximum:!0,exclusiveMininum:!0,properties:!0,patternProperties:!0,additionalProperties:!0,items:!0,additionalItems:!0,required:!0,default:!0,title:!0,description:!0,definitions:!0,dependencies:!0},l={null:function(t){return null===t},string:function(t){return\"string\"==typeof t},boolean:function(t){return\"boolean\"==typeof t},number:function(t){return\"number\"==typeof t&&t==t},integer:function(t){return\"number\"==typeof t&&t%1==0},object:function(t){return t&&\"object\"==typeof t&&!Array.isArray(t)},array:function(t){return Array.isArray(t)},date:function(t){return t instanceof Date}},c={alpha:function(t){return/^[a-zA-Z]+$/.test(t)},alphanumeric:function(t){return/^[a-zA-Z0-9]+$/.test(t)},identifier:function(t){return/^[-_a-zA-Z0-9]+$/.test(t)},hexadecimal:function(t){return/^[a-fA-F0-9]+$/.test(t)},numeric:function(t){return/^[0-9]+$/.test(t)},\"date-time\":function(t){return!isNaN(Date.parse(t))&&-1===t.indexOf(\"/\")},uppercase:function(t){return t===t.toUpperCase()},lowercase:function(t){return t===t.toLowerCase()},hostname:function(t){return t.length<256&&/^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])(\\.([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9]))*$/.test(t)},uri:function(t){return/[-a-zA-Z0-9@:%_\\+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_\\+.~#?&//=]*)?/.test(t)},email:function(t){return/^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/.test(t)},ipv4:function(t){if(/^(\\d?\\d?\\d)\\.(\\d?\\d?\\d)\\.(\\d?\\d?\\d)\\.(\\d?\\d?\\d)$/.test(t)&&t.split(\".\").sort()[3]<=255)return!0;return!1},ipv6:function(t){return/^((?=.*::)(?!.*::.+::)(::)?([\\dA-F]{1,4}:(:|\\b)|){5}|([\\dA-F]{1,4}:){6})((([\\dA-F]{1,4}((?!\\3)::|:\\b|$))|(?!\\2\\3)){2}|(((2[0-4]|1\\d|[1-9])?\\d|25[0-5])\\.?\\b){4})$/.test(t)}},u={readOnly:function(t,e){return!1},minimum:function(t,e,i){return!(t<e||i.exclusiveMinimum&&t<=e)},maximum:function(t,e,i){return!(t>e||i.exclusiveMaximum&&t>=e)},multipleOf:function(t,e){return t/e%1==0||\"number\"!=typeof t},pattern:function(t,e){return\"string\"!=typeof t||(\"string\"==typeof e?i=e:(i=e[0],n=e[1]),new RegExp(i,n).test(t));var i,n},minLength:function(t,e){return t.length>=e||\"string\"!=typeof t},maxLength:function(t,e){return t.length<=e||\"string\"!=typeof t},minItems:function(t,e){return t.length>=e||!Array.isArray(t)},maxItems:function(t,e){return t.length<=e||!Array.isArray(t)},uniqueItems:function(t,e){for(var i,n={},r=0,s=t.length;r<s;r++){if(i=JSON.stringify(t[r]),n.hasOwnProperty(i))return!1;n[i]=!0}return!0},minProperties:function(t,e){if(\"object\"!=typeof t)return!0;var i=0;for(var n in t)t.hasOwnProperty(n)&&(i+=1);return i>=e},maxProperties:function(t,e){if(\"object\"!=typeof t)return!0;var i=0;for(var n in t)t.hasOwnProperty(n)&&(i+=1);return i<=e},constant:function(t,e){return JSON.stringify(t)==JSON.stringify(e)},enum:function(t,e){var i,n,r;if(\"object\"==typeof t){for(r=JSON.stringify(t),i=0,n=e.length;i<n;i++)if(r===JSON.stringify(e[i]))return!0}else for(i=0,n=e.length;i<n;i++)if(t===e[i])return!0;return!1}},h=function(t){return-1===t.indexOf(\"://\")?t:t.split(\"#\")[0]},d=function(t,e,i){var n,r,s,o;if(-1===(s=i.indexOf(\"#\")))return t.schema.hasOwnProperty(i)?[t.schema[i]]:null;if(s>0)if(o=i.substr(0,s),i=i.substr(s+1),t.schema.hasOwnProperty(o))e=[t.schema[o]];else{if(!e||e[0].id!==o)return null;e=[e[0]]}else{if(!e)return null;i=i.substr(1)}if(\"\"===i)return[e[0]];if(\"/\"===i.charAt(0)){for(i=i.substr(1),n=e[0],r=i.split(\"/\");r.length>0;){if(!n.hasOwnProperty(r[0]))return null;n=n[r[0]],e.push(n),r.shift()}return e}return null},p=function(t,e){var i,n,r,s,o=t.length-1,a=/^(\\d+)/.exec(e);if(a){if(e=e.substr(a[0].length),(r=parseInt(a[1],10))<0||r>o)return;if(s=t[o-r],\"#\"===e)return s.key}else s=t[0];if(n=s.object[s.key],\"\"===e)return n;if(\"/\"===e.charAt(0)){for(i=(e=e.substr(1)).split(\"/\");i.length>0;){if(i[0]=i[0].replace(/~1/g,\"/\").replace(/~0/g,\"~\"),!n.hasOwnProperty(i[0]))return;n=n[i[0]],i.shift()}return n}},f=function(t,e,i,n){var r,l,c,u,h,m,g,y,v,T,b,S,P,A=!1,w={},C=e[e.length-1],x=i.length-1,M=i[x].object,E=i[x].key,O=M[E];if(C.hasOwnProperty(\"$ref\"))return(e=d(t,e,C.$ref))?f(t,e,i,n):{$ref:C.$ref};if(C.hasOwnProperty(\"type\"))if(\"string\"==typeof C.type){if(n.useCoerce&&t.coerceType.hasOwnProperty(C.type)&&(O=M[E]=t.coerceType[C.type](O)),!t.fieldType[C.type](O))return{type:C.type}}else{for(A=!0,r=0,l=C.type.length;r<l&&A;r++)t.fieldType[C.type[r]](O)&&(A=!1);if(A)return{type:C.type}}if(C.hasOwnProperty(\"allOf\"))for(r=0,l=C.allOf.length;r<l;r++)if(y=f(t,e.concat(C.allOf[r]),i,n))return y;if(n.useCoerce||n.useDefault||n.removeAdditional){if(C.hasOwnProperty(\"oneOf\")){for(P=1/0,r=0,l=C.oneOf.length,c=0;r<l;r++)if(b=s(i),y=f(t,e.concat(C.oneOf[r]),b,n))(S=y.schema?Object.keys(y.schema).length:1)<P&&(P=S,w=y);else{if((c+=1)>1)break;o(b,i)}if(c>1)return{oneOf:!0};if(c<1)return w;w={}}if(C.hasOwnProperty(\"anyOf\")){for(w=null,P=1/0,r=0,l=C.anyOf.length;r<l;r++){if(b=s(i),!(y=f(t,e.concat(C.anyOf[r]),b,n))){o(b,i),w=null;break}(S=y.schema?Object.keys(y.schema).length:1)<P&&(P=S,w=y)}if(w)return w}if(C.hasOwnProperty(\"not\")&&(b=s(i),!(y=f(t,e.concat(C.not),b,n))))return{not:!0}}else{if(C.hasOwnProperty(\"oneOf\")){for(P=1/0,r=0,l=C.oneOf.length,c=0;r<l;r++)if(y=f(t,e.concat(C.oneOf[r]),i,n))(S=y.schema?Object.keys(y.schema).length:1)<P&&(P=S,w=y);else if((c+=1)>1)break;if(c>1)return{oneOf:!0};if(c<1)return w;w={}}if(C.hasOwnProperty(\"anyOf\")){for(w=null,P=1/0,r=0,l=C.anyOf.length;r<l;r++){if(!(y=f(t,e.concat(C.anyOf[r]),i,n))){w=null;break}(S=y.schema?Object.keys(y.schema).length:1)<P&&(P=S,w=y)}if(w)return w}if(C.hasOwnProperty(\"not\")&&!(y=f(t,e.concat(C.not),i,n)))return{not:!0}}if(C.hasOwnProperty(\"dependencies\"))for(m in C.dependencies)if(C.dependencies.hasOwnProperty(m)&&O.hasOwnProperty(m))if(Array.isArray(C.dependencies[m])){for(r=0,l=C.dependencies[m].length;r<l;r++)if(!O.hasOwnProperty(C.dependencies[m][r]))return{dependencies:!0}}else if(y=f(t,e.concat(C.dependencies[m]),i,n))return y;if(Array.isArray(O)){if(C.hasOwnProperty(\"items\"))if(Array.isArray(C.items)){for(r=0,l=C.items.length;r<l;r++)null!==(y=f(t,e.concat(C.items[r]),i.concat({object:O,key:r}),n))&&(w[r]=y,A=!0);if(O.length>l&&C.hasOwnProperty(\"additionalItems\"))if(\"boolean\"==typeof C.additionalItems){if(!C.additionalItems)return{additionalItems:!0}}else for(r=l,l=O.length;r<l;r++)null!==(y=f(t,e.concat(C.additionalItems),i.concat({object:O,key:r}),n))&&(w[r]=y,A=!0)}else for(r=0,l=O.length;r<l;r++)null!==(y=f(t,e.concat(C.items),i.concat({object:O,key:r}),n))&&(w[r]=y,A=!0);else if(C.hasOwnProperty(\"additionalItems\")&&\"boolean\"!=typeof C.additionalItems)for(r=0,l=O.length;r<l;r++)null!==(y=f(t,e.concat(C.additionalItems),i.concat({object:O,key:r}),n))&&(w[r]=y,A=!0);if(A)return{schema:w}}else{for(m in v=[],w={},O)O.hasOwnProperty(m)&&v.push(m);if(n.checkRequired&&C.required)for(r=0,l=C.required.length;r<l;r++)O.hasOwnProperty(C.required[r])||(w[C.required[r]]={required:!0},A=!0);if(u=C.hasOwnProperty(\"properties\"),h=C.hasOwnProperty(\"patternProperties\"),u||h)for(r=v.length;r--;){if(T=!1,u&&C.properties.hasOwnProperty(v[r])&&(T=!0,null!==(y=f(t,e.concat(C.properties[v[r]]),i.concat({object:O,key:v[r]}),n))&&(w[v[r]]=y,A=!0)),h)for(m in C.patternProperties)C.patternProperties.hasOwnProperty(m)&&v[r].match(m)&&(T=!0,null!==(y=f(t,e.concat(C.patternProperties[m]),i.concat({object:O,key:v[r]}),n))&&(w[v[r]]=y,A=!0));T&&v.splice(r,1)}if(n.useDefault&&u&&!A)for(m in C.properties)C.properties.hasOwnProperty(m)&&!O.hasOwnProperty(m)&&C.properties[m].hasOwnProperty(\"default\")&&(O[m]=C.properties[m].default);if(n.removeAdditional&&u&&!0!==C.additionalProperties&&\"object\"!=typeof C.additionalProperties)for(r=0,l=v.length;r<l;r++)delete O[v[r]];else if(C.hasOwnProperty(\"additionalProperties\"))if(\"boolean\"==typeof C.additionalProperties){if(!C.additionalProperties)for(r=0,l=v.length;r<l;r++)w[v[r]]={additional:!0},A=!0}else for(r=0,l=v.length;r<l;r++)null!==(y=f(t,e.concat(C.additionalProperties),i.concat({object:O,key:v[r]}),n))&&(w[v[r]]=y,A=!0);if(A)return{schema:w}}for(g in C)C.hasOwnProperty(g)&&!a.hasOwnProperty(g)&&(\"format\"===g?t.fieldFormat.hasOwnProperty(C[g])&&!t.fieldFormat[C[g]](O,C,i,n)&&(w[g]=!0,A=!0):t.fieldValidate.hasOwnProperty(g)&&!t.fieldValidate[g](O,C[g].hasOwnProperty(\"$data\")?p(i,C[g].$data):C[g],C,i,n)&&(w[g]=!0,A=!0));return A?w:null},m={useDefault:!1,useCoerce:!1,checkRequired:!0,removeAdditional:!1};function g(){if(!(this instanceof g))return new g;this.coerceType={},this.fieldType=r(l),this.fieldValidate=r(u),this.fieldFormat=r(c),this.defaultOptions=r(m),this.schema={}}g.prototype={validate:function(t,e,i){var n=[t],r=null,s=[{object:{__root__:e},key:\"__root__\"}];if(\"string\"==typeof t&&!(n=d(this,null,t)))throw new Error(\"jjv: could not find schema '\"+t+\"'.\");if(i)for(var o in this.defaultOptions)this.defaultOptions.hasOwnProperty(o)&&!i.hasOwnProperty(o)&&(i[o]=this.defaultOptions[o]);else i=this.defaultOptions;return(r=f(this,n,s,i))?{validation:r.hasOwnProperty(\"schema\")?r.schema:r}:null},resolveRef:function(t,e){return d(this,t,e)},addType:function(t,e){this.fieldType[t]=e},addTypeCoercion:function(t,e){this.coerceType[t]=e},addCheck:function(t,e){this.fieldValidate[t]=e},addFormat:function(t,e){this.fieldFormat[t]=e},addSchema:function(t,e){if(!e&&t&&(e=t,t=void 0),e.hasOwnProperty(\"id\")&&\"string\"==typeof e.id&&e.id!==t){if(\"/\"===e.id.charAt(0))throw new Error(\"jjv: schema id's starting with / are invalid.\");this.schema[h(e.id)]=e}else if(!t)throw new Error(\"jjv: schema needs either a name or id attribute.\");t&&(this.schema[h(t)]=e)}},void 0!==t.exports?t.exports=g:void 0===(n=function(){return g}.call(e,i,e,t))||(t.exports=n)}).call(this)},179:function(t,e,i){\"use strict\";var n=i(14),r=i(181),s=i(185),o=i(186)||0;function a(){return r(o)}t.exports=a,t.exports.generate=a,t.exports.seed=function(e){return n.seed(e),t.exports},t.exports.worker=function(e){return o=e,t.exports},t.exports.characters=function(t){return void 0!==t&&n.characters(t),n.shuffled()},t.exports.isValid=s},180:function(t,e,i){\"use strict\";var n=1;t.exports={nextValue:function(){return(n=(9301*n+49297)%233280)/233280},seed:function(t){n=t}}},181:function(t,e,i){\"use strict\";var n,r,s=i(182);i(14);t.exports=function(t){var e=\"\",i=Math.floor(.001*(Date.now()-1567752802062));return i===r?n++:(n=0,r=i),e+=s(7),e+=s(t),n>0&&(e+=s(n)),e+=s(i)}},182:function(t,e,i){\"use strict\";var n=i(14),r=i(183),s=i(184);t.exports=function(t){for(var e,i=0,o=\"\";!e;)o+=s(r,n.get(),1),e=t<Math.pow(16,i+1),i++;return o}},183:function(t,e,i){\"use strict\";var n,r=\"object\"==typeof window&&(window.crypto||window.msCrypto);n=r&&r.getRandomValues?function(t){return r.getRandomValues(new Uint8Array(t))}:function(t){for(var e=[],i=0;i<t;i++)e.push(Math.floor(256*Math.random()));return e},t.exports=n},184:function(t,e){t.exports=function(t,e,i){for(var n=(2<<Math.log(e.length-1)/Math.LN2)-1,r=-~(1.6*n*i/e.length),s=\"\";;)for(var o=t(r),a=r;a--;)if((s+=e[o[a]&n]||\"\").length===+i)return s}},185:function(t,e,i){\"use strict\";var n=i(14);t.exports=function(t){return!(!t||\"string\"!=typeof t||t.length<6)&&!new RegExp(\"[^\"+n.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g,\"\\\\$&\")+\"]\").test(t)}},186:function(t,e,i){\"use strict\";t.exports=0},187:function(t,e){var i;i=function(){return this}();try{i=i||new Function(\"return this\")()}catch(t){\"object\"==typeof window&&(i=window)}t.exports=i},2:function(t,e){t.exports=(()=>{\"use strict\";return{number:t=>\"number\"==typeof t&&!isNaN(t),nan:t=>\"number\"==typeof t&&isNaN(t),integer:t=>\"number\"==typeof t&&!isNaN(t)&&(0|t)===t,large:t=>\"number\"==typeof t&&!isNaN(t)&&isFinite(t)&&Math.floor(t)===t,positive(t){return this.number(t)&&t>0},negative(t){return this.number(t)&&t<0},iterable(t){return!this.null(t)&&!this.undefined(t)&&this.fn(t[Symbol.iterator])},string:t=>\"string\"==typeof t,date:t=>t instanceof Date,fn:t=>\"function\"==typeof t,array:t=>Array.isArray(t),boolean:t=>\"boolean\"==typeof t,object:t=>\"object\"==typeof t&&null!==t,null:t=>null===t,undefined:t=>void 0===t,zeroLengthString(t){return this.string(t)&&0===t.length},extension(t,e){return this.fn(t)&&this.fn(e)&&e.prototype instanceof t}}})()},231:function(t,e,i){\"use strict\";i.r(e),i.d(e,\"initFeed\",(function(){return zp})),i.d(e,\"getFeed\",(function(){return Yp})),i.d(e,\"getChartOutline\",(function(){return $p})),i.d(e,\"BaseDataFeed\",(function(){return Xp})),i.d(e,\"BarchartSiteDataFeed\",(function(){return Kp})),i.d(e,\"MarketDataFeed\",(function(){return Zp})),i.d(e,\"parseExpression\",(function(){return kl})),i.d(e,\"evaluateExpression\",(function(){return Fl})),i.d(e,\"formatPriceWithDecimals\",(function(){return ce})),i.d(e,\"BaseRecordSource\",(function(){return Kr})),i.d(e,\"Field\",(function(){return rn})),i.d(e,\"Fields\",(function(){return on})),i.d(e,\"TimeSeriesContainer\",(function(){return Qr})),i.d(e,\"asyncReady\",(function(){return Jt})),i.d(e,\"getTaxonomies\",(function(){return bi})),i.d(e,\"getStudies\",(function(){return gi})),i.d(e,\"Topics\",(function(){return an})),i.d(e,\"PubSub\",(function(){return Po.a})),i.d(e,\"ChunkPart\",(function(){return x})),i.d(e,\"SeriesKind\",(function(){return T})),i.d(e,\"Network\",(function(){return n}));var n={};function r(...t){let e={};return t.forEach((t,i)=>{e[t]=i,e[i]=t}),e}i.r(n),i.d(n,\"isPrivateAddress\",(function(){return Jp})),i.d(n,\"isRunningLocally\",(function(){return Qp})),i.d(n,\"getThisDomainName\",(function(){return tf})),i.d(n,\"buildURL\",(function(){return ef})),i.d(n,\"buildCheckURL\",(function(){return nf}));r(\"1D\",\"5D\",\"1M\",\"3M\",\"6M\",\"1Y\",\"5Y\",\"Max\"),r(\"WithSeries\",\"TimeAxis\");const s=r(\"UsePrevious\",\"UseNext\"),o=r(\"Minimum\",\"Everything\"),a=r(\"Down\",\"Up\",\"Same\"),l=r(\"ChangeBased\",\"OpenVsClose\"),c=r(\"OHLC\",\"Line\",\"Candlestick\",\"Area\",\"Column\",\"Dots\",\"HLC\",\"HL\",\"Ribbon\",\"Step\",\"HollowCandles\",\"HeikinAshi\",\"ElderImpulseSystem\",\"Renko\",\"LineBreak\",\"Kagi\",\"PointAndFigure\"),u=r(\"Tick\",\"Intraday\",\"Day\",\"Week\",\"Month\",\"Quarter\",\"Year\"),h=r(\"None\",\"Nearest\",\"Continue\",\"FormT\",\"PerCount\",\"PerVolume\",\"PerRange\",\"PerSeconds\"),d=(r(\"Png\",\"Jpeg\",\"Pdf\",\"Svg\"),r(\"Number\",\"String\",\"Date\")),p=r(\"FromMetaData\",\"AsInteger\",\"UseMetricUnit\",\"AsPercent\"),f=r(\"Common\",\"Study\",\"BalanceSheet\",\"IncomeStatement\",\"Forward\",\"Seasonal\",\"Event\"),m=r(\"Unknown\",\"Equity\",\"Future\",\"Option\",\"Currency\",\"Index\",\"Fund\",\"Asset\",\"Expression\"),g=r(\"None\",\"Value\",\"Percent\"),y=r(\"Linear\",\"Logarithmic\"),v=r(\"Symbol\",\"Expression\",\"Study\",\"Forward\",\"BalanceSheet\",\"IncomeStatement\",\"Seasonal\",\"Annual\"),T=r(\"Normal\",\"Forward\",\"HistoricalForward\",\"Study\",\"BalanceSheet\",\"IncomeStatement\",\"Events\"),b=r(\"Left\",\"Center\",\"Right\"),S=r(\"Arrow\",\"Crosshair\",\"Move\",\"Hand\",\"ResizeVertical\",\"Grabbing\"),P=r(\"NotApplicable\",\"Left\",\"Middle\",\"Right\"),A=r(\"Shift\",\"Alt\",\"Control\",\"Meta\"),w=r(\"None\",\"Horizontal\",\"Vertical\",\"Both\"),C=r(\"Unspecified\",\"GBE\",\"cmdtyView\"),x=r(\"Unspecified\",\"Head\",\"Tail\"),M=r(\"wheel\",\"wheel+shift\",\"none\"),E=r(\"Auto\",\"Draggable\"),O=r(\"Page\",\"Application\");function D(t){var e=Array.prototype.slice.call(arguments,1);return function(){return t.apply(this,e.concat(Array.prototype.slice.call(arguments,0)))}}function L(...t){const e=t?t.length:0;return function(...i){let n=0,r=e?t[n].apply(this,i):i[0];for(;++n<e;)r=t[n].call(this,r);return r}}function _(t){return t}function I(t){return t.reduce((t,e)=>t+e,0)}function N(t){return I(t)/t.length}function R(t){return t.every(t=>null!==t)}function H(t,e){return Array.from(Array(e)).map((e,i)=>i+t)}function k(t,e){let i=[],n=[];return t.forEach(t=>{e(t)?i.push(t):n.push(t)}),{yes:i,no:n}}function F(t,e){if(!(t.length<1))for(let i=t.length-1;i>=0;--i)if(e(t[i]))return t[i]}function U(t,e){return t.filter(t=>!e.includes(t))}function B(t,e,i=_){let n=[];return t.forEach(t=>{const r=i(t);!n.map(i).includes(r)&&e.map(i).includes(r)&&n.push(t)}),n}function V(t,e=0){if(!(t.length<e+1))return t[t.length-e-1]}function W(t){if(!(t.length<1))return t[0]}const j=(t,e)=>t[e];function G(t,e,i=(t=>t),n=j,r=0,s=t.length-1){for(;r<s;){const l=r+s>>>1,c=n(t,l);((o=i(c))<(a=e)?-1:o>a?1:o>=a?0:NaN)<0?r=l+1:s=l}var o,a;return r}function z(t,e=0,i=t.length-1,n=(t=>t)){if(e<0||i>=t.length)return[null,null];let r=null,s=null;for(let o=e;o<=i;o++){const e=n(t[o]);null!=e&&e>=e&&(null==r?r=s=e:(r>e&&(r=e),s<e&&(s=e)))}return[r,s]}function Y(t,e){const[i,n]=t,[r,s]=e,o=K;(o(r,i)&&i<r||o(i)&&!o(r))&&(e[0]=i),(o(s,n)&&n>s||o(n)&&!o(s))&&(e[1]=n)}Array.prototype.flat||(Array.prototype.flat=function(t,e){return e=this.concat.apply([],this),t>1&&e.some(Array.isArray)?e.flat(t-1):e},Array.prototype.flatMap=function(t,e){return this.map(t,e).flat()});let q=null;function $(){return null===q&&(q=\"ontouchstart\"in window),q}function X(t,e){return\"ArrowLeft\"===t||37===e}function K(...t){return t.every(t=>null!=t)}function Z(t,e){return i=\"round\",n=t,void 0===(r=-e)||0==+r?Math[i](n):(n=+n,r=+r,isNaN(n)||\"number\"!=typeof r||r%1!=0?NaN:(n=n.toString().split(\"e\"),+((n=(n=Math[i](+(n[0]+\"e\"+(n[1]?+n[1]-r:-r)))).toString().split(\"e\"))[0]+\"e\"+(n[1]?+n[1]+r:r))));var i,n,r}function J(t){return K(t)&&Number.isFinite(t)}function Q(t){let e=\"both\"===t;return[e||\"vertical\"===t,e||\"horizontal\"===t]}function tt(t,e,...i){if(!K(t))return e;let n=t;for(let t=0;t<i.length;++t){const r=i[t];if(!K(n)||!n.hasOwnProperty(r))return e;n=n[r]}return n}function et(t){return null==t?t:JSON.parse(JSON.stringify(t))}function it(t,e,i=!0){let n=Object.keys(e),r=Object.keys(t);for(let o of n)if(s=o,!i||r.includes(s)){const i=t[o];void 0===i||\"object\"!=typeof i||Array.isArray(i)?t[o]=e[o]:nt(t[o],e[o])}var s}function nt(t,e){it(t,e)}function rt(t,e){let i=Object.keys(e);for(let n of i)t[n]=t[n]||e[n]}function st(t=[]){return t.reduce((t,e)=>(t[e.name]=e.value,t),{})}function ot(t){return t?new Date(t):null}function at(t){let e=\"\";for(let i in t){let n=\"\".concat(i,\"=\").concat(encodeURIComponent(t[i]));e+=(e.length>0?\"&\":\"\")+n}return e}function lt(t,e){it(t,e,!1)}const ct=/^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/,ut=[1e3,60,60,24,7,30/7,12];function ht(t){const e=ct.exec(t);if(!K(e))return null;const i=e.slice(2,9).map(t=>K(t)?parseFloat(t):0).reverse();return ut.forEach((t,e)=>{for(let n=e;n<i.length;n++)i[n]=i[n]*t}),Math.floor(I(i))}function dt(t,e,i,n){let r=t,s=e;return 0===r||0===s?(r=i,s=r/2):r>n?(s*=n/r,r=n):r<i&&(s*=i/r,r=i),[r,s]}var pt=i(7),ft=i.n(pt),mt=i(163),gt=i.n(mt);function yt(t,e){if(e.length<t)throw new TypeError(t+\" argument\"+(t>1?\"s\":\"\")+\" required, but only \"+e.length+\" present\")}function vt(t){yt(1,arguments);var e=Object.prototype.toString.call(t);return t instanceof Date||\"object\"==typeof t&&\"[object Date]\"===e?new Date(t.getTime()):\"number\"==typeof t||\"[object Number]\"===e?new Date(t):(\"string\"!=typeof t&&\"[object String]\"!==e||\"undefined\"==typeof console||(console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"),console.warn((new Error).stack)),new Date(NaN))}function Tt(t){yt(1,arguments);var e=vt(t);return e.setHours(0,0,0,0),e}function bt(t,e){yt(2,arguments);var i=Tt(t),n=Tt(e);return i.getTime()===n.getTime()}function St(t){yt(1,arguments);var e=vt(t);return e.setDate(1),e.setHours(0,0,0,0),e}function Pt(t){yt(1,arguments);var e=vt(t),i=e.getFullYear();return i}function At(t){if(null===t||!0===t||!1===t)return NaN;var e=Number(t);return isNaN(e)?e:e<0?Math.ceil(e):Math.floor(e)}function wt(t,e){yt(2,arguments);var i=vt(t),n=At(e);if(isNaN(n))return new Date(NaN);if(!n)return i;var r=i.getDate(),s=new Date(i.getTime());s.setMonth(i.getMonth()+n+1,0);var o=s.getDate();return r>=o?s:(i.setFullYear(s.getFullYear(),s.getMonth(),r),i)}function Ct(t,e){yt(2,arguments);var i=At(e);return wt(t,12*i)}function xt(t,e){yt(2,arguments);var i=vt(t),n=vt(e);return i.getTime()>n.getTime()}function Mt(t){return ft.a.parseInstrumentType(t)}const Et=new Map;async function Ot(t){if(!Ht(t))return t;const{root:e,dynamic:i,dynamicCode:n}=Mt(t);if(!K(e,i,n))return null;if(!Et.has(e)||!function(t){return yt(1,arguments),bt(t,Date.now())}(Et.get(e).savedAt)){const t=await Ut(e);if(!Array.isArray(t))return null;Et.set(e,{symbols:t,savedAt:new Date})}const{symbols:r}=Et.get(e),s=Math.max(parseInt(n)-1,0);return r.length<=n?null:r[s]}function Dt(t){return ft.a.getIsFuture(t)}const Lt=/^([A-Z]+)([0-9]{2})([A-Z]+\\.CM)$/;function _t(t){return Lt.test(t)}function It(t){return ft.a.getIsEquityOption(t)}function Nt(t){return String(t%100).padStart(2,\"0\")}function Rt(t){if(!Dt(t))return t;const e=Mt(t);return i=e.root,n=e.month,r=e.year,\"\".concat(i).concat(n).concat(Nt(r));var i,n,r}function Ht(t){const e=Mt(t);return K(e)&&!0===e.dynamic}function kt(t){const e=Dt(t)||function(t){return ft.a.getIsFutureOption(t)}(t),i=\"_S_\"===t.substring(0,2);return(e||It(t))&&!i}function Ft(t){return Dt(t)?\"America/Chicago\":\"America/New_York\"}async function Ut(t){const e=await Wp(\"futures\",\"?root=\".concat(t));return JSON.parse(e)[t].contracts.filter(t=>\"Y\"!==t.month).sort((t,e)=>t.expires-e.expires).map(e=>\"\".concat(t).concat(e.month).concat(e.year%100))}function Bt(t){if(!Dt(t))return null;return Mt(t).root}function Vt(t){if(!Dt(t))return null;const e=Mt(t),i=gt.a.getCodeToNumberMap()[e.month];return St(new Date(e.year,i-1))}function Wt(t,e){const i=Dt(t),n=_t(t);return i||n?i?function(t,e){const i=Mt(t);return\"\".concat(i.root).concat(i.month).concat((i.year+e)%100)}(t,e):function(t,e){const i=Lt.exec(t),n=Number.parseInt(i[2]),r=Pt(Ct(new Date(n+(n>79?1900:2e3),0,1),e));return\"\".concat(i[1]).concat(Nt(r)).concat(i[3])}(t,e):null}function jt(t){const e=Gt(t);return K(e)?e.innerHTML:null}function Gt(t){return Xt(t)[0]}function zt(t,e){for(const i in e)t.style[i]=e[i]}function Yt(t,e){for(const i in e)t.setAttribute(i,e[i])}function qt(t,e){\"string\"==typeof t&&(t=Gt(t)),\"string\"==typeof e?t.className=e:Array.isArray(e)?t.className=e.join(\" \"):\"object\"==typeof e&&(t.className=\"\",Object.keys(e).forEach(i=>{e[i]&&t.classList.add(i)}))}function $t(t,e){return t.appendChild(document.createElement(e))}function Xt(t){return document.querySelectorAll(t)}function Kt(t,e){let i=t;\"string\"==typeof t&&(i=Gt(t)),i&&(i.innerHTML=e)}function Zt(t){return new Promise(e=>{const i=()=>{t&&void 0!==t.naturalWidth&&0!==t.naturalWidth&&t.complete?e():setTimeout(i,150)};i()})}async function Jt(t,e=\"asyncReadyWork\"){K(this[e])||(this[e]={});const i=this[e];return K(i.result)?Promise.resolve(i.result):(K(i.promise)||(i.promise=t.call(this),i.promise.then(t=>{i.result=t})),i.promise)}const Qt=window.devicePixelRatio||1,te={HIT_TEST_TOLERANCE:$()?20*Qt:5*Qt,HALF_ANN_POINT_DIMENSION:$()?10:6,OUT_OF_SCREEN:8192,DEFAULT_SYMBOL_WIDTH_HEIGHT:18,PARTIAL_FIBONACCI_SEQUENCE:[0,1,2,3,5,8,13,21,34,55,89,144],PANE_SPLITTER_PERCENT_HEIGHT:.75,BASIS_MAIN:\"$main\",INPUT_PERIOD:\"Period\",INPUT_PERIOD1:\"Period1\",INPUT_PERIOD2:\"Period2\",INPUT_PERIOD3:\"Period3\",INPUT_SMOOTHING:\"Smoothing\",INPUT_SOURCE:\"Source\",EMPTY_ARRAY:[],CHART_DEFINITION:\"chart.def.json\",CHART_SCHEMA:\"chart.schema.json\",STUDIES_SCHEMA:\"studies.schema.json\",STUDIES_LIST:\"studies.lst.json\",FIELDS_SCHEMA:\"fields.schema.json\",FIELDS_LIST:\"fields.lst.json\",ACCESSOR_SCHEMA:\"accessor.schema.json\",EVENTS:[\"dividends\",\"earnings\",\"splits\"],PLACEHOLDER_SYMBOL_NAME:\"PLACEHOLDER\",REALTIME_INITIAL_QUOTE:\"REFRESH_QUOTE\",REALTIME_TRADE:\"TRADE\",REALTIME_VOLUME:\"VOLUME\",TOOLTIP_X_OFFSET:15,TOOLTIP_Y_OFFSET:30,TOOLTIP_TOGGLE_SIDE_ANIM_MS:300,TOOLTIP_TOGGLE_DISTANCE_TOLERANCE:10,CARDS_X_OFFSET:5,CARDS_Y_OFFSET:5,PANE_CAP_MAX_PADDING_PERCENT:.15,PANE_CAP_MIN_PADDING_PERCENT:.075,STANDARD_VISIBLE_BARS:130,ACTION_GET:\"Get\",ACTION_DELETE:\"Delete\",ACTION_TEMPLATE:\"Template\",ACTION_AGGREGATION:\"Aggregation\",ACTION_PLOT:\"Plot\",MINIMUM_BAR_WIDTH:.02,MAXIMUM_BAR_WIDTH:180,MINIMUM_BARS_VISIBLE:5,COLOR_TRANSPARENT:\"rgba(0, 0, 0, 0)\",AT_LINE:\"line\",AT_LINE_2:\"line2\",AT_FILL:\"fill\",AT_FILL2:\"fill2\",AT_FILL_TEXT:\"fillText\",AT_COMPACT:\"compact\",AT_ACCOUNT_SIZE:\"accountSize\",AT_RISK:\"risk\",AT_RISK_IS_PERCENT:\"riskIsPercent\",AT_SHOW_PRICES:\"showPrices\",AT_SHOW_BARCOUNT:\"showBarCount\",AT_EXTEND_PT_1:\"extendPoint1\",AT_EXTEND_PT_2:\"extendPoint2\",AT_TEXT_LINES:\"textLines\",AT_SHOW_TIMESTAMPS:\"showTimestamps\",AT_SHOW_TRENDLINE:\"showTrendline\",AT_SHOW_PERCENTDIFF:\"showPercentDiff\",AT_FACTORS:\"factors\",AT_MARKER:\"marker\",AT_DRAW_LINES:\"drawLines\",AT_ALLOW_PRICES_CHANGE_UI:\"allowPricesChangeUI\",AT_PRICES_ON_SCALE:\"pricesOnScale\",ANN_ACTION_ID:\"Annotation\",ANN_DUPLICATE_OFFSET:20,DEFAULT_ADORN_OFFSET:{x:-5,y:-10},ZOOM_DEBOUNCE_DELAY:3e3,MINIMUM_PANE_HEIGHT:10,DEBUG_TIME_FORMAT:\"yyyy-LL-dd HH:mm:ss.SSS\",DEBUG_SYMBOL:\"NOTASYMBOL\",DEBUG_CHART_ID:\"root\",COLOR_DEFAULT_OHLC:\"#808080\",COLOR_DEFAULT_VARY:[\"#d33e32\",\"#19ab52\"],COLOR_DEFAULT_AREA:\"#2d76b3\",TOOLTIP_STD:\"standard\",TOOLTIP_CARDS:\"cards\",TOOLTIP_BUBBLE:\"bubble\",TOOLTIP_EXTERNAL:\"external\",NS_SVG:\"http://www.w3.org/2000/svg\",NS_XLINK:\"http://www.w3.org/1999/xlink\",NULL_OBJECT:{magic:0x64646f746c6964},CROSSHAIR_ID:\"crosshair_elem_id\",ZOOM_X_AXIS_PERCENT:.02,DEFAULT_MAX_RECORDS:640,TICK_CUSTOM_AGG_MULTIPLIER:5,SNAP_PROXIMITY_PIXELS:18,LONG_PRESS_TIMEOUT_MILLIS:750,MINIMUM_THROTTLE:25,BACKGROUND_TAB_THROTTLE:2e3,INTERNAL_GC_MILLIS:3e5,US_TRADING_DAYS_PER_YEAR:251,INLINE_DATA_ELEMENT_ID:\"barchart-www-inline-data\",META_DATA_GET_TIMETOUT:3e3,FMT_US_DATE_ONLY:\"LL/dd/yyyy\",FMT_ISO_DATE_ONLY:\"yyyy-LL-dd\",FMT_HIST_FEED_PARAM_DATE_ONLY:\"yyyyLLdd\",FMT_HIST_FEED_PARAM_DATE_TIME:\"yyyyLLddHHmmss\",FMT_HIST_FEED_INTRADAY:\"yyyy-LL-dd HH:mm\",FMT_HIST_FEED_TICK:\"yyyy-LL-dd HH:mm:ss.SSS\",FMT_EXPORT_ALL_BUT_MILLIS:\"yyyy-LL-dd HH:mm:ss\",LINE_HEIGHT_MULTIPLIER:1.2,SVG_ICONS_DOM_NODE:\"bchart-svg-icons-placeholder\",DEFAULT_BAR_WIDTH:10,DEFAULT_BAR_SPACING:5,LINE_DASH_PROP_NAME:\"lineDash\",MARKER_ARROW_ANGLE:45,MARKER_ARROW_LENGTH:20,TIMELINE_PROLOG_PADDING_BARS:5e3,TIMELINE_EPILOG_PADDING_BARS:1e3,NO_DATA_TEXT:\"No data to display\",DEFAULT_PRICE_AXIS_WIDTH:70,SPECIAL_BUILDER_REQUIRED:[c.Renko,c.Kagi,c.PointAndFigure],INTRA_THRESHOLD:ht(\"P30D\"),ONE_DAY_MILLIS:ht(\"P1D\"),TIME_SCALE_MAX_SPACE_NO_TICKS:80,FIFTY_YEARS_MILLIS:ht(\"P50Y\"),BC_EVENT_LOGGED_IN:\"login success\",BC_EVENT_DISCONNECTED:\"disconnect\",BC_EVENT_FEED_PAUSED:\"feed paused\",BC_EVENT_FEED_RESUMED:\"feed resumed\",BC_EVENT_DISCONNECTING:\"disconnecting\",HEADER_SIZE_PLACEHOLDER_ID:\"header_size_helper_placeholder\",CURVE_STYLE_DOTS_RADIUS:2,DEFAULT_ACCESSOR_SUBACTION:\"Update\",MIN_EVENT_RADIUS:8,PHP_TO_UNICODE_TS_35_MAP:{a:\"EEE\",A:\"EEEE\",d:\"dd\",e:\"d\",w:\"c\",b:\"MMM\",B:\"MMMM\",m:\"MM\",y:\"yy\",Y:\"yyyy\",H:\"HH\",k:\"H\",I:\"hh\",l:\"h\",M:\"mm\",p:\"aaa\",P:\"aaaaa\",S:\"ss\",L:\"SSS\"},AUTOFIT_PERIOD:\"P50Y\",BARCHART_HIST_SRV_TICKS_PAGE_NAME:\"queryticks.ashx\",BARCHART_HIST_SRV_INTRADAY_PAGE_NAME:\"queryminutes.ashx\",BARCHART_HIST_SRV_FORMT_INTRADAY_PAGE_NAME:\"queryformtminutes.ashx\",BARCHART_HIST_SRV_EOD_PAGE_NAME:\"queryeod.ashx\",DOUBLE_CLICK_DURATION_MILLIS:500,TOOLTIP_STD_LEGACY_CLASS:\"highcharts-tooltip\",TOOLTIP_STD_CLASS:\"bcharts-tooltip\",TOOLTIP_BUBBLE_CLASS:\"bcharts-bubble\",TOOLTIP_BUBBLE_OFFSET:30,EVENTS_BUILT_IN:[\"dividends\",\"earnings\",\"splits\"],NOT_APPLICABLE:\"N/A\"};var ee=i(15),ie=i.n(ee),ne=i(9),re=i.n(ne);const se=[{min:0,divider:1,suffix:\"\",decimals:0},{min:1e5,divider:1e3,suffix:\"K\",decimals:0},{min:1e6,divider:1e6,suffix:\"M\",decimals:2},{min:1e9,divider:1e9,suffix:\"B\",decimals:3}];function oe(t,e){return ie()(t,e,\"-\",Yp().config.isAlt64,\",\")}function ae(t){if(K(t)){const e=tt(Yp().config,null,\"overrides\",\"symbology\",\"translateSymbol\");if(K(e)&&\"function\"==typeof e)try{const i=e(t);if(K(i))return i}catch(e){Bp(\"Failed translating the symbol '\".concat(t,\"', error is \").concat(e.message),\"warn\")}}return t}class le{constructor(t){this.symbolType=m.Unknown,this.exchange=\"\",this.name=\"\",this.unitCode=\"\",this.pointValue=1,this.resolved=this.symbol=t,this.timeZone=Ft(ae(this.symbol))}initialize(t){nt(this,t)}get isReady(){return this.symbolType!==m.Unknown}format(t,e,i){if(null==t)return\"\";if(!this.isReady)return t.toFixed(0);if(e.format===p.FromMetaData)return oe(t,this.unitCode);switch(e.format){case p.AsInteger:return t.toFixed();case p.UseMetricUnit:{i=i||{};const e=Object.assign({},{range:[t,t],allDigits:!1},i);if(i.allDigits)return ce(t,0);Array.isArray(e.range)&&e.range.length||(e.range=[t,t]);const n=Math.max(Math.abs(e.range[0]),Math.abs(e.range[1])),r=F(se,t=>n>t.min)||se[0];return\"\".concat((t/r.divider).toFixed(r.decimals)).concat(r.suffix)}case p.AsPercent:return\"\".concat((100*t).toFixed(2),\"%\");default:return\"\"}}parse(t){throw new Error(\"Not implemented yet\")}shutdown(){}}function ce(t,e){return re()(t,e,\",\")}function ue(t){const e=jt(\"#\".concat(te.INLINE_DATA_ELEMENT_ID));if(!K(e))return te.NULL_OBJECT;const i=JSON.parse(e);let n=t;const r=t=>i.hasOwnProperty(t);return r(n)||(n=function(t,e){if(!Dt(t))return t;const i=Mt(t);return e.find(t=>Mt(t).root===i.root)||t}(t,Object.keys(i)),r(n))?i[n].instrument:te.NULL_OBJECT}class he extends le{async ready(){return Jt.call(this,async()=>(this.initialize(ue(ae(this.symbol))),!0))}}class de extends le{async ready(){return Jt.call(this,async()=>{const t=ae(this.symbol);if(It(t))return this.initialize({name:this.symbol,exchange:\"\",unitCode:\"A\",pointValue:1,symbolType:m.Option}),!0;const e=Ht(t),i=await(e?Ot(t):t);this.resolved=Rt(i);const[n,r,s]=await async function(t){const e=Dt(t),i=_t(t),n=t=>[t,!1,!1];if(!e&&!i)return n(t);if(e){const e=xt(St(new Date),Vt(t));return[e?await Ot(\"\".concat(Bt(t),\"*1\")):t,!0,e]}if(i){const e=Lt.exec(t);return n(\"\".concat(e[1]).concat(Nt(Pt(new Date))).concat(e[3]))}return n(t)}(this.resolved),o=new Promise((function(t,e){setTimeout(t,te.META_DATA_GET_TIMETOUT,te.NULL_OBJECT)}));let a=await Promise.race([o,Yp().connection.getMarketState().getProfile(n)]);if(a!==te.NULL_OBJECT&&K(a)&&K(a.unitCode)&&0!==a.unitCode.length)delete a.symbol;else if(a=ue(n),a===te.NULL_OBJECT)try{const t=await Wp(\"ondemand\",\"/getInstrumentDefinition.json?symbols=\".concat(n)),e=JSON.parse(t);if(200===e.status.code&&1===e.results.length){const t=e.results[0];a={name:t.symbolName,exchange:t.exchange,unitCode:t.baseCode,pointValue:t.pointValue}}}catch(t){Bp(\"Failed fetching the metadata for \".concat(n,\", error is \").concat(t.message),\"warn\"),a={name:n,exchange:\"\",unitCode:\"A\",pointValue:1}}if(a.symbolType=r?m.Future:m.Equity,s){const t=Mt(this.resolved);a.month=t.month,a.year=t.year}return this.initialize(a),!0})}getCacheableEntities(t){t.add(this)}}class pe{constructor(t){this._decimals=t}async ready(){return!0}format(t,e,i){return null==t?\"\":ce(t,this._decimals)}getCacheableEntities(t){}}class fe{async ready(){return!1}format(t,e,i){return null==t?\"\":K(t)?t.toFixed(0):\"\"}getCacheableEntities(t){}}class me{constructor(t){const e=Yp().getMetaDataSource();this.inner=t.map(t=>e.getMetaData(t)),this.unitCode=null}async ready(){return Jt.call(this,async()=>{const t=(await Promise.all(this.inner.map(t=>t.ready()))).every(_);if(t){const t=t=>parseInt(t,16),e=e=>t(e.unitCode),{yes:i,no:n}=k(this.inner,t=>e(t)>=8),r=this.inner.length,s=t=>Math.max(...t).toString(16).toUpperCase();if(i.length===r||n.length===r)this.unitCode=s(this.inner.map(e));else{const r=\"B\".charCodeAt(0),o=i.map(e).concat(n.map(e).map(t=>String.fromCharCode(t-2+r)).map(t));this.unitCode=s(o)}}return t})}format(t,e,i){return null==t?\"\":K(this.unitCode)?oe(t,this.unitCode):t.toFixed(0)}getCacheableEntities(t){this.inner.forEach(e=>t.add(e))}}class ge{constructor(){this.metaDataCache=new Map}makeAndCacheMetaData(t,e){if(t===te.PLACEHOLDER_SYMBOL_NAME)return new fe;if(this.metaDataCache.has(t))return this.metaDataCache.get(t);{const i=e(t);return this.metaDataCache.set(t,i),i}}evictUnused(t){for(const[e,i]of this.metaDataCache)t.has(i)||(i.shutdown(),this.metaDataCache.delete(e))}}class ye extends ge{getMetaData(t){return this.makeAndCacheMetaData(t,()=>new he(t))}}class ve extends ge{getMetaData(t){return this.makeAndCacheMetaData(t,()=>new de(t))}}const Te=/^#([0-9a-fA-F]{3})([0-9a-fA-F]{3})?$/,be=/^rgb\\((\\s*\\d{1,3}\\s*),(\\s*\\d{1,3}\\s*),(\\s*\\d{1,3}\\s*)\\)$/,Se=/^rgba\\((\\s*\\d{1,3}\\s*),(\\s*\\d{1,3}\\s*),(\\s*\\d{1,3}\\s*),\\s*([01]+(?:\\.\\d+)?)\\)$/,Pe={r:255,g:255,b:255,a:1},Ae={r:0,g:0,b:0,a:1};function we(t,e){return{x:(t.x+e.x)/2,y:(t.y+e.y)/2}}function Ce(t,e){const i=Math.abs(t.x-e.x),n=Math.abs(t.y-e.y);return Math.sqrt(i*i+n*n)}function xe(t,e){return{x:t.x-e.x,y:t.y-e.y}}function Me(t,e){return{x:t.x+e.x,y:t.y+e.y}}function Ee(t,e){return Math.atan2(e.y-t.y,e.x-t.x)}function Oe(t,e,i){const[n,r]=t,s=r.x-n.x,o=r.y-n.y,a=e.x-n.x,l=e.y-n.y;if(0===s&&0===o)return Math.abs(a)<=i&&Math.abs(l)<=i;const c=Math.atan2(o,s),u=Math.sqrt(s*s+o*o),h=Math.atan2(l,a),d=Math.sqrt(a*a+l*l),p=d*Math.cos(h-c),f=d*Math.sin(h-c);return Math.abs(f)<=i&&-i<=p&&p<=u+i}function De(t){return t.toLowerCase().replace(\"shortdashdotdot\",\"3,1,1,1,1,1,\").replace(\"shortdashdot\",\"3,1,1,1\").replace(\"shortdot\",\"1,1,\").replace(\"shortdash\",\"3,1,\").replace(\"longdash\",\"8,3,\").replace(\"sparsedot\",\"1,8,\").replace(/dot/g,\"1,3,\").replace(\"dash\",\"4,3,\").replace(/,$/,\"\").replace(\"solid\",\"\").split(\",\").map(Number).filter(_)}function Le(t){return function(t){let e=t=>{let e=t.toString(16);return 2===e.length?e:\"0\"+e};return\"#\".concat(e(t.r)).concat(e(t.g)).concat(e(t.b))}(Ne(t))}function _e(t,e,i,n=!1){const r=t.a,s=n=>Math.floor(t[n]+(e[n]-t[n])*i);return{r:s(\"r\"),g:s(\"g\"),b:s(\"b\"),a:Math.min(1,(1+(n?i:0))*r)}}function Ie(t,e=!1){return L(Ne,i=>_e(i,Pe,t,e),Re)}function Ne(t){if([\"r\",\"g\",\"b\",\"a\"].map(e=>t[e]).every(t=>K(t)))return t;const e=K(t.linearGradient)?t._refColor:t,i=Te.exec(e);if(null!==i){const t=K(i[2]),e=i[1]+(i[2]||\"\"),n=i=>t?parseInt(e.substr(2*i,2),16):17*parseInt(e.charAt(i),16);return{r:n(0),g:n(1),b:n(2),a:1}}{const t=Se.exec(e),i=be.exec(e),n=(t,e)=>K(t)&&t.length===e,r=n(t,5),s=n(i,4);if(!r&&!s)throw new Error(\"Color is neither a hex color nor a rgba one.\");const o=r?t:i;let a=t=>parseInt(o[t]),l=parseFloat(o[4]);return{r:a(1),g:a(2),b:a(3),a:r?l:1}}}function Re(t){return\"rgba(\".concat(t.r,\", \").concat(t.g,\", \").concat(t.b,\", \").concat(t.a,\")\")}function He(t,e){t.beginPath(),t.rect(e.x,e.y,e.width,e.height),t.clip()}class ke{constructor(t,e,i,n){this.x=t,this.y=e,this.width=i,this.height=n}contains(t){return t.x>=this.x&&t.x<=this.x+this.width&&t.y>=this.y&&t.y<=this.y+this.height}get centerX(){return this.x+this.width/2}get centerY(){return this.y+this.height/2}duplicate(){return new ke(this.x,this.y,this.width,this.height)}}class Fe{constructor(t,e,i,n){this.cx=t,this.cy=e,this.radiusX=i,this.radiusY=n}contains(t){const e=Math.abs(t.x-this.cx)/this.radiusX,i=Math.abs(t.y-this.cy)/this.radiusY;return Math.sqrt(e*e+i*i)<=1}}function Ue(t,e=te.LINE_HEIGHT_MULTIPLIER){return e*t.measureText(\"M\").width}function Be(t,e,i,n=b.Left,r=null,s=null){t.save();const o=Array.isArray(e)?e:[e],a=Ue(t,1);if(K(s)){const e=Math.max(...o.map(e=>t.measureText(e).width)),r=a*o.length;let l=i.x;n===b.Right&&(l-=e),n===b.Center&&(l-=e/2);const c=i.y-a,u=function(t,e,i){return t.x-=e,t.y-=i,t.width+=2*e,t.height+=2*i,t}(new ke(l,c,e,r),4,4);t.fillStyle=s,Ve(t,u,!1)}K(r)&&(t.fillStyle=r);let l=i.x,c=i.y;o.forEach(e=>{t.textAlign=b[n].toLowerCase(),t.fillText(e,l,c),c+=a}),t.restore()}function Ve(t,e,i=!0){t.beginPath(),t.rect(e.x,e.y,e.width,e.height),i&&t.stroke(),t.fill()}function We(t,e,i,n=0,r=Math.PI,s=!1){t.beginPath(),t.arc(e.x,e.y,Math.abs(i),n,r,s),t.stroke()}function je(t,{x:e,y:i},{x:n,y:r}){t.beginPath(),t.moveTo(e,i),t.lineTo(n,r),t.stroke()}function Ge(t,e,i,n){je(t,{x:e,y:i},{x:e,y:n})}function ze(t,e,i,n){je(t,{x:i,y:e},{x:n,y:e})}function Ye(t,e,i){switch(e){case\"one\":!function(t,e){qe(t,e,\"1\")}(t,i);break;case\"two\":!function(t,e){qe(t,e,\"2\")}(t,i);break;case\"three\":!function(t,e){qe(t,e,\"3\")}(t,i);break;case\"four\":!function(t,e){qe(t,e,\"4\")}(t,i);break;case\"five\":!function(t,e){qe(t,e,\"5\")}(t,i);break;case\"question\":!function(t,e){qe(t,e,\"?\")}(t,i);break;case\"fish_hook\":!function(t,e){t.save(),t.translate(e.x,e.y);const i=Math.min(e.width,e.height)/560;t.scale(i,i),t.lineCap=\"butt\",t.lineJoin=\"miter\",t.miterLimit=4,t.save(),t.save(),t.miterLimit=10,t.beginPath(),t.moveTo(377.8,354.8),t.bezierCurveTo(377.8,354.8,401.8,517.8,290.6,507),t.bezierCurveTo(173.2,495.5,171.5,50.39,171.5,50.39),t.bezierCurveTo(171.5,50.39,191.7,252.59,212.3,351),t.bezierCurveTo(212.3,351,230.9,472.8,286.7,488.7),t.bezierCurveTo(350.4,507,369.5,452.7,377.8,354.79),t.closePath(),t.fill(),t.stroke(),t.restore(),t.save(),t.miterLimit=10,t.beginPath(),t.moveTo(378.3,351.1),t.lineTo(341.1,446.6),t.lineTo(371.2,436.7),t.lineTo(378.3,351.1),t.closePath(),t.fill(),t.stroke(),t.restore(),t.restore(),t.restore()}(t,i);break;case\"arrow_up\":!function(t,e){t.save();const{cx:i,cy:n,left:r,right:s,top:o,bottom:a,halfBaseSize:l}=$e(e);t.beginPath(),t.moveTo(s,n),t.lineTo(i,o),t.lineTo(r,n),t.lineTo(Math.floor(i-l),n),t.lineTo(Math.floor(i-l),a),t.lineTo(Math.floor(i+l),a),t.lineTo(Math.floor(i+l),n),t.closePath(),t.fill(),t.stroke(),t.restore()}(t,i);break;case\"arrow_down\":!function(t,e){t.save();const{cx:i,cy:n,left:r,right:s,top:o,bottom:a,halfBaseSize:l}=$e(e);t.beginPath(),t.moveTo(s,n),t.lineTo(i,a),t.lineTo(r,n),t.lineTo(Math.floor(i-l),n),t.lineTo(Math.floor(i-l),o),t.lineTo(Math.floor(i+l),o),t.lineTo(Math.floor(i+l),n),t.closePath(),t.fill(),t.stroke(),t.restore()}(t,i);break;case\"arrow_right\":!function(t,e){t.save();const{cx:i,cy:n,left:r,right:s,top:o,bottom:a,halfBaseSize:l}=$e(e);t.beginPath(),t.moveTo(i,o),t.lineTo(s,n),t.lineTo(i,a),t.lineTo(i,Math.floor(n+l)),t.lineTo(r,Math.floor(n+l)),t.lineTo(r,Math.floor(n-l)),t.lineTo(i,Math.floor(n-l)),t.closePath(),t.fill(),t.stroke(),t.restore()}(t,i);break;case\"arrow_left\":!function(t,e){t.save();const{cx:i,cy:n,left:r,right:s,top:o,bottom:a,halfBaseSize:l}=$e(e);t.beginPath(),t.moveTo(i,o),t.lineTo(r,n),t.lineTo(i,a),t.lineTo(i,Math.floor(n+l)),t.lineTo(s,Math.floor(n+l)),t.lineTo(s,Math.floor(n-l)),t.lineTo(i,Math.floor(n-l)),t.closePath(),t.fill(),t.stroke(),t.restore()}(t,i);break;case\"arc_down\":!function(t,e){const{cx:i,cy:n,left:r,right:s,deflection:o,arcWidth:a}=Xe(e);t.save(),t.beginPath(),t.moveTo(s,n);const l=i+o,c=n+o,u=i-o,h=n+o;t.bezierCurveTo(l,c,u,h,r,n),t.lineTo(r,n+a),t.bezierCurveTo(u,h+a,l,c+a,s,n+a),t.closePath(),t.fill(),t.stroke(),t.restore()}(t,i);break;case\"arc_up\":!function(t,e){const{cx:i,cy:n,left:r,right:s,deflection:o,arcWidth:a}=Xe(e);t.save(),t.beginPath(),t.moveTo(s,n);const l=i+o,c=n-o,u=i-o,h=n-o;t.bezierCurveTo(l,c,u,h,r,n),t.lineTo(r,n-a),t.bezierCurveTo(u,h-a,l,c-a,s,n-a),t.closePath(),t.fill(),t.stroke(),t.restore()}(t,i);break;case\"thumbs_up\":!function(t,e){t.save(),t.translate(e.x,e.y);const i=Math.min(e.width,e.height)/18;t.scale(i,i),t.lineCap=\"butt\",t.save(),t.save(),t.beginPath(),t.moveTo(3.23,8.96),t.lineTo(4.17,8.96),t.bezierCurveTo(4.73,8.81,5.91,6.45,6.45,5.82),t.bezierCurveTo(6.88,5.33,7.66,5.09,8.48,3.7),t.bezierCurveTo(9.11,2.78,8.38,1.49,10.06,1.17),t.bezierCurveTo(10.9,1.01,11.86,2.61,11.58,4.11),t.bezierCurveTo(11.49,4.6,11.25,5.14,11.07,5.54),t.bezierCurveTo(10.63,6.5,10.05,6.58,10.17,7.23),t.bezierCurveTo(10.98,7.25,11.79,7.32,12.67,7.27),t.bezierCurveTo(14.33,7.17,15.55,9.08,14.43,10.38),t.bezierCurveTo(14.9,11.12,14.79,12.33,14.14,12.81),t.bezierCurveTo(14.42,13.58,14.25,14.45,13.67,14.8),t.bezierCurveTo(14.13,16.77,12.36,16.87,11.77,16.84),t.lineTo(4.65,16.84),t.bezierCurveTo(3.87,16.77,3.95,16.28,3.5,16.27),t.bezierCurveTo(3.39,16.26,3.3,16.26,3.3,16.26),t.bezierCurveTo(3.18,16.26,3.19,15.7,3.28,15.7),t.bezierCurveTo(3.36,15.69,3.61,15.68,3.87,15.71),t.bezierCurveTo(4.03,15.79,4.4,16.26,4.75,16.27),t.lineTo(12.12,16.26),t.bezierCurveTo(13.13,16.27,13.67,15.11,12.8,14.56),t.bezierCurveTo(13.85,14.53,13.98,12.98,13.19,12.6),t.bezierCurveTo(14.35,12.49,14.5,10.65,13.44,10.41),t.bezierCurveTo(14.8,9.97,14.39,7.59,12.35,7.83),t.bezierCurveTo(11.42,7.77,9.87,7.94,9.68,7.62),t.bezierCurveTo(9.41,6.82,9.684,6.45,10.17,5.88),t.bezierCurveTo(10.5,5.46,11.02,4.6,11.04,3.64),t.bezierCurveTo(11.05,2.5,10.41,1.23,9.58,1.98),t.bezierCurveTo(9.38,2.21,9.36,3.47,8.94,4.02),t.bezierCurveTo(8.09,5.52,7.3,5.66,6.95,6.15),t.bezierCurveTo(6.27,6.86,4.93,9.52,4.36,9.52),t.bezierCurveTo(3.98,9.52,3.243,9.52,3.24,9.52),t.bezierCurveTo(3.12,9.52,3.08,8.98,3.22,8.95),t.closePath(),t.fill(),t.stroke(),t.restore(),t.restore(),t.restore()}(t,i);break;case\"thumbs_down\":!function(t,e){t.save(),t.translate(e.x,e.y);const i=Math.min(e.width,e.height)/18;t.scale(i,i),t.lineCap=\"butt\",t.save(),t.save(),t.beginPath(),t.moveTo(14.77,9.04),t.lineTo(13.82,9.04),t.bezierCurveTo(13.27,9.18,12.09,11.55,11.54,12.17),t.bezierCurveTo(11.12,12.66,10.34,12.9,9.52,14.29),t.bezierCurveTo(8.88,15.21,9.62,16.51,7.93,16.82),t.bezierCurveTo(7.1,16.98,6.13,15.39,6.42,13.88),t.bezierCurveTo(6.51,13.4,6.75,12.855,6.93,12.46),t.bezierCurveTo(7.37,11.49,7.95,11.41,7.82,10.76),t.bezierCurveTo(7.02,10.75,6.21,10.68,5.33,10.73),t.bezierCurveTo(3.66,10.83,2.44,8.91,3.57,7.62),t.bezierCurveTo(3.09,6.88,3.2,5.67,3.85,5.19),t.bezierCurveTo(3.57,4.42,3.74,3.55,4.33,3.2),t.bezierCurveTo(3.87,1.22,5.64,1.13,6.22,1.16),t.lineTo(13.35,1.16),t.bezierCurveTo(14.12,1.22,14.04,1.71,14.49,1.73),t.bezierCurveTo(14.6,1.73,14.7,1.73,14.7,1.73),t.bezierCurveTo(14.82,1.74,14.8,2.29,14.72,2.3),t.bezierCurveTo(14.63,2.31,14.39,2.32,14.12,2.28),t.bezierCurveTo(13.96,2.21,13.6,1.74,13.25,1.73),t.lineTo(5.88,1.73),t.bezierCurveTo(4.86,1.73,4.33,2.88,5.19,3.44),t.bezierCurveTo(4.14,3.47,4.01,5.02,4.8,5.39),t.bezierCurveTo(3.64,5.5,3.49,7.35,4.55,7.58),t.bezierCurveTo(3.19,8.02,3.6,10.4,5.64,10.16),t.bezierCurveTo(6.57,10.23,8.12,10.05,8.32,10.37),t.bezierCurveTo(8.58,11.17,8.32,11.54,7.82,12.11),t.bezierCurveTo(7.49,12.54,6.97,13.39,6.96,14.36),t.bezierCurveTo(6.94,15.49,7.59,16.76,8.41,16.01),t.bezierCurveTo(8.62,15.78,8.63,14.52,9.05,13.97),t.bezierCurveTo(9.9,12.47,10.69,12.33,11.04,11.84),t.bezierCurveTo(11.72,11.13,13.06,8.47,13.637,8.47),t.bezierCurveTo(14.01,8.47,14.75,8.47,14.75,8.47),t.bezierCurveTo(14.87,8.47,14.91,9.01,14.77,9.04),t.closePath(),t.fill(),t.stroke(),t.restore(),t.restore(),t.restore()}(t,i)}}function qe(t,e,i){t.save();const n=e.centerX,r=e.centerY,s=Math.floor(Math.min(e.width/2,e.height/2));t.strokeStyle=t.fillStyle,t.lineWidth=Math.max(1,.1*s),We(t,{x:n,y:r},s,0,2*Math.PI),t.textAlign=\"center\",t.font=\"\".concat(2*s,\"px Arial\"),t.textBaseline=\"middle\",t.fillText(i,n,r+.1*s),t.restore()}function $e(t){const e=Math.floor(t.centerX),i=Math.floor(t.centerY),{width:n,height:r}=t;let s=Math.floor(Math.min(n,r));s*=.9;return{cx:e,cy:i,left:Math.floor(e-s/2),right:Math.floor(e+s/2),top:Math.floor(i-s/2),bottom:Math.floor(i+s/2),halfBaseSize:.21*s}}function Xe(t){const e=Math.floor(t.centerX),i=Math.floor(t.centerY),{width:n,height:r}=t;let s=Math.floor(Math.min(n,r));s*=.9;return{cx:e,cy:i,left:Math.floor(e-s/2),right:Math.floor(e+s/2),arcWidth:.075*s,deflection:.3*s}}function Ke(){const t=Yp().config.bypassSmoothing||!1;return{prolog:e=>{t&&e.translate(.5,.5)},adjust:e=>t?Z(e,0):e,epilog:e=>{t&&e.translate(-.5,-.5)}}}function Ze(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,n)}return i}function Je(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}const Qe={width:1,color:\"#000\",dashStyle:\"Solid\"},ti={color:te.COLOR_TRANSPARENT};function ei(t,e){return function(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?Ze(Object(i),!0).forEach((function(e){Je(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):Ze(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}({line:tt(t,Qe,\"annotationTraits\",\"line\"),fill:tt(t,ti,\"annotationTraits\",\"fill\"),zIndex:tt(t,9,\"annotationTraits\",\"zIndex\")},ai[e].defaults||{})}function ii(t,e){Object.keys(e).forEach(i=>{i===te.LINE_DASH_PROP_NAME?t.setLineDash(e[i]):t[i]=e[i]})}function ni(t){const e=L(Ne,Re);return{lineWidth:t.line.width,strokeStyle:e(t.line.color),fillStyle:e(t.fill.color),lineDash:De(t.line.dashStyle)}}const ri=[te.AT_LINE,te.AT_ALLOW_PRICES_CHANGE_UI],si=[te.AT_FILL],oi=[te.AT_LINE,te.AT_FILL],ai={Line:{editable:[te.AT_LINE,te.AT_SHOW_PRICES,te.AT_ALLOW_PRICES_CHANGE_UI,te.AT_SHOW_BARCOUNT,te.AT_SHOW_PERCENTDIFF,te.AT_EXTEND_PT_1,te.AT_EXTEND_PT_2,te.AT_MARKER],defaults:{[te.AT_SHOW_PRICES]:!1,[te.AT_SHOW_BARCOUNT]:!1,[te.AT_SHOW_PERCENTDIFF]:!1,[te.AT_EXTEND_PT_1]:!1,[te.AT_EXTEND_PT_2]:!1}},Ray:{editable:[te.AT_LINE,te.AT_SHOW_PRICES,te.AT_ALLOW_PRICES_CHANGE_UI,te.AT_SHOW_BARCOUNT,te.AT_SHOW_PERCENTDIFF,te.AT_EXTEND_PT_1,te.AT_EXTEND_PT_2,te.AT_MARKER],defaults:{[te.AT_SHOW_PRICES]:!1,[te.AT_SHOW_BARCOUNT]:!1,[te.AT_SHOW_PERCENTDIFF]:!1,[te.AT_EXTEND_PT_1]:!1,[te.AT_EXTEND_PT_2]:!0}},GannLine:{editable:[te.AT_LINE,te.AT_SHOW_PRICES,te.AT_ALLOW_PRICES_CHANGE_UI,te.AT_SHOW_BARCOUNT,te.AT_SHOW_PERCENTDIFF,te.AT_EXTEND_PT_1,te.AT_EXTEND_PT_2,te.AT_MARKER],defaults:{[te.AT_SHOW_PRICES]:!1,[te.AT_SHOW_BARCOUNT]:!1,[te.AT_SHOW_PERCENTDIFF]:!1,[te.AT_EXTEND_PT_1]:!1,[te.AT_EXTEND_PT_2]:!0}},LongPosition:{editable:[te.AT_LINE,te.AT_FILL,te.AT_FILL2,te.AT_FILL_TEXT,te.AT_COMPACT,te.AT_ACCOUNT_SIZE,te.AT_RISK,te.AT_RISK_IS_PERCENT,te.AT_ALLOW_PRICES_CHANGE_UI],defaults:{[te.AT_FILL]:{color:\"rgba(0, 160, 0, 0.2)\"},[te.AT_FILL2]:{color:\"rgba(205, 0, 0, 0.2)\"},[te.AT_FILL_TEXT]:{color:\"#fff\"},[te.AT_COMPACT]:!1,[te.AT_ACCOUNT_SIZE]:1e3,[te.AT_RISK]:25,[te.AT_RISK_IS_PERCENT]:!0}},ShortPosition:{editable:[te.AT_LINE,te.AT_FILL,te.AT_FILL2,te.AT_FILL_TEXT,te.AT_COMPACT,te.AT_ACCOUNT_SIZE,te.AT_RISK,te.AT_RISK_IS_PERCENT,te.AT_ALLOW_PRICES_CHANGE_UI],defaults:{[te.AT_FILL]:{color:\"rgba(205, 0, 0, 0.2)\"},[te.AT_FILL2]:{color:\"rgba(0, 160, 0, 0.2)\"},[te.AT_FILL_TEXT]:{color:\"#fff\"},[te.AT_COMPACT]:!1,[te.AT_ACCOUNT_SIZE]:1e3,[te.AT_RISK]:25,[te.AT_RISK_IS_PERCENT]:!0}},VerticalLine:{editable:[te.AT_LINE,te.AT_SHOW_TIMESTAMPS,te.AT_ALLOW_PRICES_CHANGE_UI],defaults:{[te.AT_SHOW_TIMESTAMPS]:!0}},HorizontalLine:{editable:[te.AT_LINE,te.AT_SHOW_PRICES,te.AT_ALLOW_PRICES_CHANGE_UI],defaults:{[te.AT_SHOW_PRICES]:!0}},FiftyPercentLine:{editable:[te.AT_LINE,te.AT_LINE_2,te.AT_SHOW_PRICES,te.AT_ALLOW_PRICES_CHANGE_UI],defaults:{[te.AT_SHOW_PRICES]:!0}},FibonacciRetracement:{editable:[te.AT_LINE,te.AT_SHOW_PRICES,te.AT_ALLOW_PRICES_CHANGE_UI,te.AT_SHOW_TRENDLINE,te.AT_FACTORS,te.AT_PRICES_ON_SCALE],defaults:{[te.AT_SHOW_PRICES]:!0,[te.AT_SHOW_TRENDLINE]:!0,[te.AT_FACTORS]:[-.618,-.236,0,.236,.382,.5,.618,.786,1,1.272,1.618,2.618].map(t=>({shown:0<=t&&t<=1,value:t})),[te.AT_PRICES_ON_SCALE]:!1}},FibonacciFan:{editable:ri},FibonacciArcs:{editable:ri},GannFan:{editable:ri},SpeedResistanceFan:{editable:ri},SpeedResistanceArcs:{editable:ri},AndrewsPitchfork:{editable:ri},Rectangle:{editable:oi},Ellipse:{editable:oi},TrendChannel:{editable:ri},SymbolArrowUp:{editable:si},SymbolArrowDown:{editable:si},SymbolArrowRight:{editable:si},SymbolArrowLeft:{editable:si},SymbolArcDown:{editable:si},SymbolArcUp:{editable:si},SymbolThumbsUp:{editable:si},SymbolThumbsDown:{editable:si},SymbolOne:{editable:si},SymbolTwo:{editable:si},SymbolThree:{editable:si},SymbolFour:{editable:si},SymbolFive:{editable:si},SymbolQuestion:{editable:si},SymbolFishHook:{editable:si},FibonacciTimeZones:{editable:[te.AT_LINE]},Text:{editable:si},ComputedText:{editable:[te.AT_LINE,te.AT_FILL,te.AT_ALLOW_PRICES_CHANGE_UI]}};function li(t){return t?ai[t].editable:ai}var ci=i(164),ui=i(165),hi=i(166),di=i(167),pi=i(168);function fi(t){switch(t){case te.CHART_SCHEMA:return ci;case te.STUDIES_SCHEMA:return ui;case te.FIELDS_SCHEMA:return hi;case te.ACCESSOR_SCHEMA:return di;default:throw new Error(\"Unknown schema name: \".concat(t))}}let mi=null;function gi(){return mi||(mi=tn(pi,te.STUDIES_SCHEMA))}function yi(t){return et(gi().find(e=>e.id===t))}function vi(t){const e=[on.Open,on.High,on.Low,on.Close].map(t=>t.id),i=t.defaults.source&&!e.includes(t.defaults.source);return[\"CHAMF\",\"EMV\",\"FI\",\"MFI\",\"CLV\",\"OBVOL\",\"PVT\",\"NVI\",\"PVI\",\"VOL\"].includes(t.id)||i}function Ti(t,e){const i=e.id;return![\"GPMI\",\"GTPI\",\"CTM\"].includes(i)||t===C.GBE}function bi(){const t=[f.Study,f.BalanceSheet,f.IncomeStatement];let e=t.reduce((t,e)=>(t[e]=[],t),{});Object.keys(on).map(t=>on[t]).filter(e=>t.includes(e.category)).map(t=>{e[t.category].push({id:t.id,name:t.name})});const i=Object.keys(c).filter(t=>{const e=parseInt(t);if(Number.isFinite(e)&&e<c.Renko)return c[e]}),n=Yp(),r=K(n)?C[n.config.mode]:C.Unspecified,s=et(gi()).filter(D(Ti,r)).sort((t,e)=>t.meta.overlay===e.meta.overlay?t.meta.title<e.meta.title?-1:1:t.meta.overlay<e.meta.overlay?1:-1),o=li(),a=Object.keys(o).map(t=>({id:t,options:o[t].editable}));return{studies:s,incomeStatements:e[f.IncomeStatement],balanceSheets:e[f.BalanceSheet],studyFields:e[f.Study],curveStyles:i,annotations:a}}var Si=i(169),Pi=i.n(Si);function Ai(t,e,i){return[].concat(Pi()(e,t,i))}var wi=function(t,e,i){let n=et(t),r=Ai(n,e),s=r.map(i);if(s.some(t=>void 0===t))throw new Error(\"Forgot to return transformed value from accessor \".concat(i));return function t(e,i,n){if(function(t){return\"string\"==typeof t||\"number\"==typeof t||\"boolean\"==typeof t||null===t}(e))return e;if(Array.isArray(e))return e.map(e=>t(e,i,n)).filter(t=>t!==te.NULL_OBJECT);{let r=i.indexOf(e);if(-1!==r)return n[r];let s={};for(let r in e){const o=e[r];s[r]=t(o,i,n)}return s}}(n,r,s)};const Ci=[\"1D\",\"5D\",\"1M\",\"3M\",\"6M\",\"1Y\",\"5Y\",\"Max\"];function xi(t){return 1===t.length}function Mi(t){return 1===t.length}const Ei={ATRLTR:\"REATRHI\",ATRSTR:\"REATRLO\",PeriodMARng:\"PeriodAdjATR\",PeriodAdjATR:\"FactorAdjATR\"};const Oi={BBANDS:{colors:[\"#89211e\"],fields:[\"BOLLBM\"],visible:!1},DONCHN:{colors:[\"#ff6a00\"],fields:[\"DONMID\"],visible:!1}};const Di={_3to4:function(t){const e=t.data.period;if(null!==e){const i=\"Max\"===e?te.AUTOFIT_PERIOD:\"P\".concat(e),n=Ci.findIndex(t=>t===e);let r={unit:\"Day\"};n<2?r={unit:\"Intraday\",size:15}:n>5&&(r={unit:\"Month\"}),delete t.data.period,t.display.period=i,t.data.aggregation=r,t.version=4}return t},_4to5:function(t){const e=Ai(t,'..panes[0]..plots{.type === \"Symbol\"}[0].curves{.style === \"Candlestick\" && .attributes === \"Hollow\" }');if(1===e.length){const t=e[0];t.attributes.splice(t.attributes.indexOf(\"Hollow\"),1),0===t.attributes.length&&delete t.attributes,t.style=\"HollowCandles\",t.colors=et(te.COLOR_DEFAULT_VARY)}return t.version=5,t},_5to6:function(t){const e=Ai(t,'..panes[0]..plots{.type === \"Symbol\"}[0]');if(1===e.length){e[0].main=!0}return t.version=6,t},_6to7:function(t){const e=Ai(t,'..plots{.type === \"Study\" && .study === $studies}',{studies:[\"MAENV\",\"BBANDS\",\"KELCHN\",\"KELEXP\",\"DONCHN\"]});return e.length>0&&e.forEach(t=>{if(t.curves&&t.curves.length>1){const e=t.curves.length-1,i=Ne(t.curves[e].colors[0]);i.a=.1,t.curves.push({colors:[Re(i)],fields:t.curves[0].fields.concat(t.curves[e].fields),lineWidth:0,style:c[c.Ribbon]})}}),t.version=7,t},_7to8:function(t){const e=Ai(t,'..plots{.type === \"Study\" && (.study === \"ADX\" || .study === \"ADXMOD\")}');return e.length>0&&e.forEach(t=>{if(t.inputs&&1===t.inputs.length&&t.inputs[0].name===te.INPUT_PERIOD){const e=t.inputs[0].value;t.inputs=[{name:\"AdxSmoothing\",value:e},{name:\"DiLength\",value:e}]}}),t.version=8,t},_8to9:function(t){const e=Ai(t,\".display.yAxis\");if(xi(e)){if(!xi(Ai(e,\".minorGridLines\"))){const t=Ai(Yp().template,\".display.yAxis.minorGridLines\");xi(t)&&(e[0].minorGridLines=t[0])}}return t.version=9,t},_9to10:function(t){const e=\".display.navigator\",i=Ai(t,e);if(Mi(i)){if(!Mi(Ai(i,\".enabled\"))){const t=Ai(Yp().template,e+\".enabled\");Mi(t)&&(i[0].enabled=t[0])}}return t.version=10,t},_10to11:function(t){const e=Ai(t,'..plots{.type === \"Study\" && .study === \"TCHN\"}');return e.length>0&&e.forEach(t=>{if(t.inputs&&1===t.inputs.length&&t.inputs[0].name===te.INPUT_PERIOD){const e=t.inputs[0].value;t.inputs=[{name:\"PeriodUpper\",value:e},{name:\"PeriodLower\",value:e},{name:\"Range\",value:\"High/Low\"}]}}),t.version=11,t},_11to12:function(t){const e=Ai(t,\".display.navigator\");if(1===e.length){const t=e[0];t.visible=t.enabled&&t.visible||!1,delete t.enabled}return t.version=12,t},_12to13:function(t){return Ai(t,\"..annotations\").forEach(t=>{if(\"AndrewsPitchfork\"===t.id){const[e,i,n]=t.points;t.points=[i,e,n]}}),t.version=13,t},_13to14:function(t){const e=Ai(t,\".display\");if(1===e.length){const t=e[0];t.scrollbar.visible=t.navigator.visible||!1,delete t.navigator}return t.version=14,t},_14to15:function(t){const e=Ai(t,'..plots{.type === \"Study\" && .study === $studies}',{studies:[\"ATRLTR\",\"ATRSTR\"]}),i=t=>Ei.hasOwnProperty(t)?Ei[t]:t;return e.length>0&&e.forEach(t=>{t.curves&&t.curves[0].fields&&(t.curves[0].fields=t.curves[0].fields.map(i)),t.inputs&&(t.inputs=t.inputs.map(t=>(t.name=i(t.name),t))),t.study=i(t.study)}),t.version=15,t},_15to16:function(t){const e=Ai(t,\"..annotations\"),i=t=>({shown:!1,value:t}),n=[-.618,-.236].map(i),r=[1.272,1.618,2.618].map(i);return e.forEach(t=>{if(\"FibonacciRetracement\"===t.id){const e=t.traits;if(K(e)&&K(e[te.AT_FACTORS])){const t=ei(null,\"FibonacciRetracement\")[te.AT_FACTORS],i=e[te.AT_FACTORS].map((e,i)=>{const n=!K(e);return{shown:!n,value:n?t[i+2].value:e}});e[te.AT_FACTORS]=n.concat(i).concat(r)}}}),t.version=16,t},_16to17:function(t){const e=Ai(t,'..plots{.type === \"Study\" && .study === $studies}',{studies:[\"STOCHF\",\"STOCHM\",\"STOCHS\"]});return e.length>0&&e.forEach(t=>{const e=\"STOCHM\"===t.study,i=yi(e?\"STOCHS\":t.study);K(t.inputs)?t.inputs.push({name:\"Smoothing\",value:e?\"EMA\":\"MA\"}):t.inputs=i.defaults.inputs.map(t=>(\"Smoothing\"===t.name&&e&&(t.value=\"EMA\"),t)),e&&(t.study=\"STOCHS\")}),t.version=17,t},_17to18:function(t){const e=Ai(t,'..plots{.type === \"Study\" && .study === $studies}',{studies:[\"BBANDS\",\"DONCHN\"]});return e.length>0&&e.forEach(t=>{if(K(t.curves)&&3===t.curves.length){const e=et(Oi[t.study]);t.curves.push(e)}}),t.version=18,t},_18to19:function(t){const e=Ai(t,'..plots{.type === \"Study\" && .study === $studies}',{studies:[\"REATRHI\",\"REATRLO\"]});return e.length>0&&e.forEach(t=>{t.inputs&&4===t.inputs.length&&t.inputs.push({name:\"FactorATR\",value:2})}),t.version=19,t},_19to20:function(t){const e=Ai(t,\".display.yAxis\");if(1===e.length){const t=e[0];K(t.showLastValue)&&(t.showLastValue=t.showLastValue?\"All\":\"None\")}return t.version=20,t},_20to21:function(t){const e=Ai(t,'..plots{.type === \"Study\" && .study === $studies}',{studies:[\"CTMF\",\"TPI\"]});return e.length>0&&e.forEach(t=>{const e=\"CTMF\"===t.study?\"GPMI\":\"GTPI\";t.study=e,t.curves&&t.curves.length>0&&(t.curves.splice(1,1),t.curves[0].fields=[e])}),t.version=21,t},_21to22:function(t){const e=Ai(t,'..plots{.type === \"Study\" && .study === \"AWEOSC\"}');return e.length>0&&e.forEach(t=>{if(t.curves&&t.curves.length>0&&t.curves[0].zones){const e=t.curves[0];delete e.zones,e.varyColorPerBar=!0}}),t.version=22,t},_22to23:function(t){const e=t.display.yAxis;return delete e.minPadding,delete e.maxPadding,t.version=23,t},_23to24:function(t){const e=Ai(t,'..plots{.type === \"Study\" && .study === \"GTPI\"}');return e.length>0&&e.forEach(t=>{if(t.curves&&t.curves.length>0){const e=t.curves[0];e.colors=[\"#ef4226\",\"#2642ef\"],e.zones=[{value:50,colors:1,gradient:\"linDarken\"},{colors:1,gradient:\"linLighten\"}]}}),t.version=24,t},_24to25:function(t){const e=Ai(t,'..plots{.type === \"Study\" && .study === \"MOM\"}');if(e.length>0){const t=yi(\"MOM\");e.forEach(e=>{e.curves&&1===e.curves.length&&2===t.defaults.curves.length&&e.curves.push(t.defaults.curves[1]),e.inputs&&1===e.inputs.length&&2===t.defaults.inputs.length&&e.inputs.push(t.defaults.inputs[1])})}return t.version=25,t},_25to26:function(t){const e=Ai(t,'..plots{.type === \"Study\" && .study === $studies}',{studies:[\"MA\",\"MAEXP\"]});return e.length>0&&e.forEach(t=>{t.source&&delete t.source,t.inputs&&1===t.inputs.length?t.inputs.push({name:\"Source\",value:\"Close\"}):t.inputs=yi(t.study).defaults.inputs}),t.version=26,t},_26to27:function(t){const e=Ai(t,'..plots{.type === \"Study\" && .study === \"ATR\"}');if(e.length>0){const t=yi(\"ATR\");e.forEach(e=>{e.curves&&1===e.curves.length&&2===t.defaults.curves.length&&e.curves.push(t.defaults.curves[1]),e.inputs&&2===e.inputs.length&&3===t.defaults.inputs.length&&e.inputs.push(t.defaults.inputs[2])})}return t.version=27,t},_27to28:function(t){const e=Ai(t,'..plots{.type === \"Study\"}'),i=yi(\"ALLG\");return e.length>0&&e.forEach(t=>{delete t.shift,\"ALLG\"===t.study&&t.curves&&t.curves.forEach(t=>{const e=(t=>{const e=i.defaults.curves.find(e=>e.fields[0]===t.fields[0]);return K(e)?e.shift:null})(t);K(e)&&(t.shift=e)})}),t.version=28,t},_28to29:function(t){const e=en(wi(t,'..plots{.type === \"Study\" && .study === \"DEMARK\"}',t=>te.NULL_OBJECT));return e.version=29,e},_29to30:function(t){const e=en(wi(t,'..plots{.type === \"Study\" && .study === \"ULTOSC\"}',t=>te.NULL_OBJECT));return e.version=30,e}};function Li(t,e){if(e===te.CHART_SCHEMA){const i=Ai(fi(e),\".properties.version.minimum\")[0],n=t.version;if(n<i)return function(t,e,i){let n=t;for(;e<i;){n=(0,Di[\"_\".concat(e,\"to\").concat(e+1)])(n),e+=1}return n}(t,n,i)}return t}function _i(t,e){yt(2,arguments);var i=vt(t),n=vt(e);return i.getFullYear()===n.getFullYear()}function Ii(t,e){yt(1,arguments);var i=e||{},n=i.locale,r=n&&n.options&&n.options.weekStartsOn,s=null==r?0:At(r),o=null==i.weekStartsOn?s:At(i.weekStartsOn);if(!(o>=0&&o<=6))throw new RangeError(\"weekStartsOn must be between 0 and 6 inclusively\");var a=vt(t),l=a.getDay(),c=(l<o?7:0)+l-o;return a.setDate(a.getDate()-c),a.setHours(0,0,0,0),a}function Ni(t,e,i){yt(2,arguments);var n=Ii(t,i),r=Ii(e,i);return n.getTime()===r.getTime()}function Ri(t,e){yt(2,arguments);var i=vt(t),n=vt(e);return i.getFullYear()===n.getFullYear()&&i.getMonth()===n.getMonth()}function Hi(t){yt(1,arguments);var e=vt(t),i=e.getMonth(),n=i-i%3;return e.setMonth(n,1),e.setHours(0,0,0,0),e}function ki(t,e){yt(2,arguments);var i=Hi(t),n=Hi(e);return i.getTime()===n.getTime()}function Fi(t){let e=function(t){return{unit:tt(t,\"Day\",\"unit\"),size:tt(t,1,\"size\"),spec:tt(t,\"None\",\"spec\"),isContractVolume:tt(t,!1,\"isContractVolume\"),dividendsAdjust:tt(t,!1,\"dividendsAdjust\"),backAdjust:tt(t,!1,\"backAdjust\"),daysToExpiration:tt(t,1,\"daysToExpiration\"),contractRoll:tt(t,\"expiration\",\"contractRoll\")}}(t);return new Gi(u[e.unit],e.size,h[e.spec],e.isContractVolume,e.dividendsAdjust,e.backAdjust,e.daysToExpiration,e.contractRoll)}function Ui(t,e){return bt(t,e)&&Vi(t,e)}function Bi(t,e){return Ni(t,e)&&Vi(t,e)}function Vi(t,e){return Ri(t,e)&&_i(t,e)}function Wi(t,e){return ki(t,e)&&_i(t,e)}function ji(t,e){return+t==+e}class Gi{constructor(t=u.Day,e=1,i=h.None,n=!1,r=!1,s=!1,o=1,a=\"expiration\"){this.unit=t,this.size=e,this.spec=i,this.isContractVolume=n,this.dividendsAdjust=r,this.backAdjust=s,this.daysToExpiration=o,this.contractRoll=a}isKnownMinute(t){return-1!==Gi.KNOWN_MINUTES.indexOf(t)}getHashKey(){return\"[\".concat(this.unit,\":\").concat(this.size,\":\").concat(this.spec,\":\").concat(this.isContractVolume,\":\").concat(this.dividendsAdjust,\":\").concat(this.backAdjust,\":\").concat(this.daysToExpiration,\":\").concat(this.contractRoll,\"]\")}unitToString(){let t=\"\";switch(this.unit){case u.Tick:t=\"Tick\";break;case u.Intraday:t=this.isKnownMinute(this.size)?60===this.size?\"Hourly\":\"\".concat(this.size<10?\" \":\"\").concat(this.size,\" minute\").concat(this.size>1?\"s\":\"\"):\"Custom Intraday\";break;case u.Day:t=\"Daily\";break;case u.Week:t=\"Weekly\";break;case u.Month:t=\"Monthly\";break;case u.Quarter:t=\"Quarterly\";break;case u.Year:t=\"Yearly\"}return t}describe(){let t=this.unitToString();switch(this.spec){case h.Nearest:t+=\" Nearest\";break;case h.Continue:t+=\" Continue\";break;case h.PerCount:t=\"Ticks Per Bar\";break;case h.PerVolume:t=\"Volume Per Bar\";break;case h.PerRange:t=\"Range Per Bar\";break;case h.PerSeconds:t=\"Seconds Per Bar\";break;case h.None:case h.FormT:}return t}get isEndOfDay(){return!this.isTick&&!this.isIntraday}get isTick(){return this.unit===u.Tick}get isIntraday(){return this.unit===u.Intraday}get isMultiContract(){return this.isEndOfDay&&(this.spec===h.Nearest||this.spec===h.Continue)}}function zi(t){delete t.display.chart.bar}function Yi(t){K(t.display.xAxis.visibleRange)&&delete t.display.xAxis.visibleRange,K(t.data.range)&&delete t.data.range,delete t.checkRange}function qi(t){Xi(t.display.period)&&delete t.display.period}function $i(t){K(t.display.density)&&delete t.display.density}Gi.KNOWN_MINUTES=[1,2,3,5,10,15,30,60];function Xi(t){return K(t)&&t!==te.AUTOFIT_PERIOD}var Ki=function(t){const e=Ai(t,\"..axes{.annotations{.points{!.price || !.time}}}\");e.length>0&&e.forEach(t=>{const e=t.annotations.map(t=>{const e=t.points.find(t=>K(t.price)),i=t.points.find(t=>K(t.time));return K(e)&&K(i)?(t.points.forEach(t=>{K(t.price)||(t.price=e.price),K(t.time)||(t.time=i.time)}),t):null}).filter(t=>K(t));e.length>0?t.annotations=e:delete t.annotations});const i=Ai(t,\"..panes\"),n=t=>K(t.height)?t.height:1,r=i.map(t=>n(t)),s=Math.min(...r),o=s<.01?5/s:1;i.forEach(t=>t.height=Z(o*n(t),4));const a=Yp().config.showResizeHandles||!1;t.display.xAxis.resizeHandles=a;let l=Yp().config.scrollBehavior||\"wheel+shift\";Object.values(M).filter(t=>\"string\"==typeof t).includes(l)||(l=\"wheel+shift\"),t.display.scrollBehavior=l;const c=Ai(t,'..plots{.type === \"Study\" && .study === \"RSI\"}');var u;return c.length>0&&c.forEach(t=>{if(K(t.bands)&&t.bands.length>0){const e=t.inputs&&1===t.inputs.length&&t.inputs[0].name===te.INPUT_PERIOD?t.inputs[0].value:null,i=yi(\"RSI\").defaults;t.curves=i.curves,t.inputs=i.inputs,K(e)&&(t.inputs[0].value=e),delete t.bands,t.levels=i.levels}}),(u=t).display.density?(qi(u),Yi(u)):Xi(u.display.period)&&Yi(u),function(t){const e=tt(t.display,null,\"chart\",\"bar\");if(K(e)){const[t,i]=dt(e.width||0,e.spacing||0,te.MINIMUM_BAR_WIDTH,te.MAXIMUM_BAR_WIDTH);e.width=t,e.spacing=i}}(t),function(t){t.display.period&&\"YTD\"===t.display.period&&delete t.display.period}(t),function(t){const e=Ai(t,\"..annotations{.traits.fill.color === null}\");e.length>0&&e.forEach(t=>{t.traits.fill.color=\"rgba(0, 0, 0, 0)\"})}(t),function(t){const{from:e,to:i}=t.display.xAxis.visibleRange||{},n=null===e,r=null===i;n&&delete t.display.xAxis.visibleRange.from,r&&delete t.display.xAxis.visibleRange.to,n&&r&&delete t.display.xAxis.visibleRange}(t),t},Zi=i(170),Ji=i.n(Zi);let Qi=null;function tn(t,e){null===Qi&&(Qi=Ji()(),Qi.defaultOptions.useDefault=!0,[te.CHART_SCHEMA,te.STUDIES_SCHEMA,te.FIELDS_SCHEMA,te.ACCESSOR_SCHEMA].forEach(t=>{Qi.addSchema(t,fi(t))}));let i=Li(t,e);(function(t){return t===te.CHART_SCHEMA})(e)&&(Ai(i,'..plots{.type===\"'.concat(v[v.Study],'\"}')).forEach(t=>{const e=yi(t.study);K(e)&&rt(t,e.defaults)}),i=Ki(i));let n=Qi.validate(e,i);if(!!n)throw new Error(\"Document not valid according to schema \".concat(e,\"; error is \").concat(JSON.stringify(n,null,4)));return function(t){return t===te.ACCESSOR_SCHEMA}(e)&&function(t){const{id:e,context:i}=t,n=t=>K(i[t]),r=(t,e)=>{if(!K(i[t]))throw new Error(\"\".concat(e,\" plot accessor: you must provide '\").concat(t,\"'\"))},s=t=>{if(n(\"placement\")&&\"clone\"===i.placement&&!n(\"cloneIndex\"))throw new Error(\"\".concat(t,\" plot accessor: when placement is 'clone', you must provide 'cloneIndex'.\"))};if(\"Plot\"===e)switch(i.id){case\"Add\":switch(r(\"type\",\"Add\"),i.type){case\"Study\":r(\"studyId\",\"Add\"),s(\"Add\");break;case\"IncomeStatement\":case\"BalanceSheet\":r(\"fundamentalId\",\"Add\");break;case\"Expression\":r(\"expression\",\"Add\")}break;case\"Get\":if(!n(\"main\")&&!n(\"type\"))throw new Error(\"Get plot accessor: you must provide either 'main' or 'type'\");break;case\"Delete\":r(\"type\",\"Delete\"),r(\"index\",\"Delete\");break;case\"Update\":switch(r(\"type\",\"Update\"),r(\"index\",\"Update\"),s(\"Update\"),i.type){case\"Forward\":if(!K(i.forward)){if(!K(i.curves)||!K(i.offsets))throw new Error(\"Update forward plot accessor: you must provide either 'forward' or 'curves' and 'offsets'\");if(i.curves.length!==i.offsets.length)throw new Error(\"Update forward plot accessor: you must provide same number of elements for 'curves' and 'offsets'\")}break;case\"Seasonal\":if(!K(i.seasonal)){if(!K(i.curves)||!K(i.offsets))throw new Error(\"Update seasonal plot accessor: you must provide either 'seasonal' or 'curves' and 'offsets'\");if(i.curves.length!==i.offsets.length&&i.curves.length!==i.offsets.length+1)throw new Error(\"Update seasonal plot accessor: you must provide either same number of elements for 'curves' and 'offsets' or one curve more\")}break;case\"Study\":{r(\"studyId\",\"Update\"),s(\"Update\");const t=t=>t.reduce((t,e)=>t.concat(e.fields),[]),e=yi(i.studyId),n=t=>\"Update study plot accessor: you must provide same number of elements for '\".concat(t,\"' of the study as defined in the taxonomy\"),o=t=>\"Update study plot accessor: incoming list of \".concat(t,\" is different from the \").concat(t,\" as defined in the taxonomy\");if(!K(i.curves)||i.curves.length!==e.defaults.curves.length)throw new Error(n(\"curves\"));const a=t(i.curves);if(0!==U(t(e.defaults.curves),a).length)throw new Error(o(\"fields\"));break}}}}(i),i}function en(t){let e=wi(t,\"..axes{!.plots}\",t=>te.NULL_OBJECT);return wi(e,\"..panes{!.axes}\",t=>te.NULL_OBJECT)}var nn=i(171);class rn{constructor(t,e=d.Number,i=f.Common,n=null,r=p.FromMetaData,s=null){this.id=t,this.type=e,this.category=i,this.name=n,this.format=r,null===n&&(this.name=this.id.replace(/([A-Z])/g,\" $1\").trim()),this.shortName=s||this.name}}let sn=null;const on=function(){if(!sn){sn={};tn(nn,te.FIELDS_SCHEMA).map(t=>new rn(t.id,d[t.type],f[t.category],t.name,p[t.format],t.shortName)).forEach(t=>{sn[t.id]=t})}return sn}(),an={CH_ALL:\"ch\",CH_RECREATED:\"ch.recreated\",CH_ANNOTATIONCHANGED:\"ch.annotationchanged\",CH_ANNNEEDSCONTEXTMENU:\"ch.annneedscontextmenu\",CH_CHTNEEDSCONTEXTMENU:\"ch.chtneedscontextmenu\",CH_ANNSELECTIONCHANGED:\"ch.annselectionchanged\",CH_ANNPOINTPICKED:\"ch.annpointpicked\",CH_PANEHEIGHTSCHANGED:\"ch.paneheightschanged\",CH_PANESREORDERED:\"ch.panesreordered\",CH_NODATAFORMAINSYMBOL:\"ch.nodataformainsymbol\",CH_CARDPLOTCLICKED:\"ch.cardplotclicked\",CH_CARDPLOTREMOVED:\"ch.cardplotremoved\",CH_TOOLTIPCHANGED:\"ch.tooltipchanged\",CH_LOGOCLICKED:\"ch.logoclicked\",CH_SHUTDOWN:\"ch.shutdown\",CH_ZOOMCHANGED:\"ch.zoomchanged\",CH_ALL_DATA_PROJECTED:\"ch.all.data.projected\",CH_API_ACTIONS_RECEIVED:\"ch.api.actions.received\",TS_ALL:\"ts\",TS_LOADING:\"ts.loading\",TS_MANYCHANGED:\"ts.manychaged\",TS_DATAPOINTADDED:\"ts.datapointadded\",TS_DATAPOINTCHANGED:\"ts.datapointchanged\",TS_EVENTSCHANGED:\"ts.eventschanged\",TS_LAST_POINT_UPDATED:\"ts.last.point.updated\",MD_ALL:\"md\",MD_CHANGED:\"md.changed\",RT_ALL:\"rt\",RT_QUOTE:\"rt.quote\",RT_TRADE:\"rt.trade\",RT_VOLUME:\"rt.volume\",TL_CHANGED:\"tl.changed\",ME_ALL:\"me\",ME_MOUSE_OUT_SERIES:\"me.mouse.out.series\",ME_MOUSE_OVER_SERIES:\"me.mouse.over.series\"};class ln{constructor(t){this.symbol=t,this.translated=ae(this.symbol),this.storage={},this.isValid=!1}addFields(...t){this.fields=function(t,e){let i=t?t.slice():new Array;return e.forEach(t=>{i.includes(t)||i.push(t)}),i}(this.fields,t),this.fields.forEach(t=>{this.storage.hasOwnProperty(t.id)||(this.storage[t.id]=null)})}update(t,e){if(this.hasField(t)){const i=this.storage[t.id];return this.storage[t.id]=e,i!==e}}hasField(t){return this.fields.includes(t)}getValue(t){return this.hasField(t)?this.storage[t.id]:null}shutdown(){}}class cn extends ln{async ready(){return!1}}const un={previousClose:on.PreviousClose,previousHigh:on.PreviousHigh,previousLow:on.PreviousLow,weeklyPreviousClose:on.WeekPreviousClose,weeklyPreviousHigh:on.WeekPreviousHigh,weeklyPreviousLow:on.WeekPreviousLow,monthlyPreviousClose:on.MonthPreviousClose,monthlyPreviousHigh:on.MonthPreviousHigh,monthlyPreviousLow:on.MonthPreviousLow},hn=Object.values(un),dn=Object.keys(un);class pn extends ln{async ready(){return Jt.call(this,async()=>{const t=Yp().getMetaDataSource().getMetaData(this.symbol);return this.isValid=await t.ready(),this.isValid})}shutdown(){}getValue(t){return this.hasField(t)&&hn.includes(t)&&null===super.getValue(t)&&!K(this.triedFetchingPreviousValues)&&this.supplementPreviousValues(),super.getValue(t)}supplementPreviousValues(){this.triedFetchingPreviousValues=!0,Wp(\"ondemand\",\"/getQuote.json?symbols=\".concat(this.translated,\"&fields=\").concat(dn.join(\",\"))).then(t=>{try{const e=JSON.parse(t);if(200===e.status.code&&1===e.results.length){const t=e.results[0];dn.forEach(e=>this.update(un[e],t[e])),Yp().getRecordSource().subject.next({topic:an.RT_QUOTE,data:{symbol:this.symbol}})}}catch(t){}})}}class fn extends ln{addOptionalField(t,e){K(e)&&(this.addFields(t),this.update(t,e))}async ready(){return Jt.call(this,async()=>{const t=jt(\"#\".concat(te.INLINE_DATA_ELEMENT_ID)),e=JSON.parse(t);if(e.hasOwnProperty(this.translated)){const t=e[this.translated].quote;this.update(on.Open,t.open),this.update(on.High,t.high),this.update(on.Low,t.low),this.update(on.Close,t.close),this.update(on.PreviousClose,t.previousClose),this.update(on.Volume,t.volume),dn.filter(t=>\"previousClose\"!==t).forEach(e=>{this.addOptionalField(un[e],t[e])}),this.isValid=!0}else this.isValid=!1;return this.isValid})}}function mn(t,e){return i=>i.topic===t&&i.data.symbol===e}\n/*! *****************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */var gn=function(t,e){return(gn=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i])})(t,e)};function yn(t,e){function i(){this.constructor=t}gn(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}function vn(t){return\"function\"==typeof t}var Tn=!1,bn={Promise:void 0,set useDeprecatedSynchronousErrorHandling(t){t&&(new Error).stack;Tn=t},get useDeprecatedSynchronousErrorHandling(){return Tn}};function Sn(t){setTimeout((function(){throw t}),0)}var Pn={closed:!0,next:function(t){},error:function(t){if(bn.useDeprecatedSynchronousErrorHandling)throw t;Sn(t)},complete:function(){}},An=function(){return Array.isArray||function(t){return t&&\"number\"==typeof t.length}}();function wn(t){return null!==t&&\"object\"==typeof t}var Cn=function(){function t(t){return Error.call(this),this.message=t?t.length+\" errors occurred during unsubscription:\\n\"+t.map((function(t,e){return e+1+\") \"+t.toString()})).join(\"\\n  \"):\"\",this.name=\"UnsubscriptionError\",this.errors=t,this}return t.prototype=Object.create(Error.prototype),t}(),xn=function(){function t(t){this.closed=!1,this._parentOrParents=null,this._subscriptions=null,t&&(this._unsubscribe=t)}var e;return t.prototype.unsubscribe=function(){var e;if(!this.closed){var i=this._parentOrParents,n=this._unsubscribe,r=this._subscriptions;if(this.closed=!0,this._parentOrParents=null,this._subscriptions=null,i instanceof t)i.remove(this);else if(null!==i)for(var s=0;s<i.length;++s){i[s].remove(this)}if(vn(n))try{n.call(this)}catch(t){e=t instanceof Cn?Mn(t.errors):[t]}if(An(r)){s=-1;for(var o=r.length;++s<o;){var a=r[s];if(wn(a))try{a.unsubscribe()}catch(t){e=e||[],t instanceof Cn?e=e.concat(Mn(t.errors)):e.push(t)}}}if(e)throw new Cn(e)}},t.prototype.add=function(e){var i=e;if(!e)return t.EMPTY;switch(typeof e){case\"function\":i=new t(e);case\"object\":if(i===this||i.closed||\"function\"!=typeof i.unsubscribe)return i;if(this.closed)return i.unsubscribe(),i;if(!(i instanceof t)){var n=i;(i=new t)._subscriptions=[n]}break;default:throw new Error(\"unrecognized teardown \"+e+\" added to Subscription.\")}var r=i._parentOrParents;if(null===r)i._parentOrParents=this;else if(r instanceof t){if(r===this)return i;i._parentOrParents=[r,this]}else{if(-1!==r.indexOf(this))return i;r.push(this)}var s=this._subscriptions;return null===s?this._subscriptions=[i]:s.push(i),i},t.prototype.remove=function(t){var e=this._subscriptions;if(e){var i=e.indexOf(t);-1!==i&&e.splice(i,1)}},t.EMPTY=((e=new t).closed=!0,e),t}();function Mn(t){return t.reduce((function(t,e){return t.concat(e instanceof Cn?e.errors:e)}),[])}var En=function(){return\"function\"==typeof Symbol?Symbol(\"rxSubscriber\"):\"@@rxSubscriber_\"+Math.random()}(),On=function(t){function e(i,n,r){var s=t.call(this)||this;switch(s.syncErrorValue=null,s.syncErrorThrown=!1,s.syncErrorThrowable=!1,s.isStopped=!1,arguments.length){case 0:s.destination=Pn;break;case 1:if(!i){s.destination=Pn;break}if(\"object\"==typeof i){i instanceof e?(s.syncErrorThrowable=i.syncErrorThrowable,s.destination=i,i.add(s)):(s.syncErrorThrowable=!0,s.destination=new Dn(s,i));break}default:s.syncErrorThrowable=!0,s.destination=new Dn(s,i,n,r)}return s}return yn(e,t),e.prototype[En]=function(){return this},e.create=function(t,i,n){var r=new e(t,i,n);return r.syncErrorThrowable=!1,r},e.prototype.next=function(t){this.isStopped||this._next(t)},e.prototype.error=function(t){this.isStopped||(this.isStopped=!0,this._error(t))},e.prototype.complete=function(){this.isStopped||(this.isStopped=!0,this._complete())},e.prototype.unsubscribe=function(){this.closed||(this.isStopped=!0,t.prototype.unsubscribe.call(this))},e.prototype._next=function(t){this.destination.next(t)},e.prototype._error=function(t){this.destination.error(t),this.unsubscribe()},e.prototype._complete=function(){this.destination.complete(),this.unsubscribe()},e.prototype._unsubscribeAndRecycle=function(){var t=this._parentOrParents;return this._parentOrParents=null,this.unsubscribe(),this.closed=!1,this.isStopped=!1,this._parentOrParents=t,this},e}(xn),Dn=function(t){function e(e,i,n,r){var s,o=t.call(this)||this;o._parentSubscriber=e;var a=o;return vn(i)?s=i:i&&(s=i.next,n=i.error,r=i.complete,i!==Pn&&(vn((a=Object.create(i)).unsubscribe)&&o.add(a.unsubscribe.bind(a)),a.unsubscribe=o.unsubscribe.bind(o))),o._context=a,o._next=s,o._error=n,o._complete=r,o}return yn(e,t),e.prototype.next=function(t){if(!this.isStopped&&this._next){var e=this._parentSubscriber;bn.useDeprecatedSynchronousErrorHandling&&e.syncErrorThrowable?this.__tryOrSetError(e,this._next,t)&&this.unsubscribe():this.__tryOrUnsub(this._next,t)}},e.prototype.error=function(t){if(!this.isStopped){var e=this._parentSubscriber,i=bn.useDeprecatedSynchronousErrorHandling;if(this._error)i&&e.syncErrorThrowable?(this.__tryOrSetError(e,this._error,t),this.unsubscribe()):(this.__tryOrUnsub(this._error,t),this.unsubscribe());else if(e.syncErrorThrowable)i?(e.syncErrorValue=t,e.syncErrorThrown=!0):Sn(t),this.unsubscribe();else{if(this.unsubscribe(),i)throw t;Sn(t)}}},e.prototype.complete=function(){var t=this;if(!this.isStopped){var e=this._parentSubscriber;if(this._complete){var i=function(){return t._complete.call(t._context)};bn.useDeprecatedSynchronousErrorHandling&&e.syncErrorThrowable?(this.__tryOrSetError(e,i),this.unsubscribe()):(this.__tryOrUnsub(i),this.unsubscribe())}else this.unsubscribe()}},e.prototype.__tryOrUnsub=function(t,e){try{t.call(this._context,e)}catch(t){if(this.unsubscribe(),bn.useDeprecatedSynchronousErrorHandling)throw t;Sn(t)}},e.prototype.__tryOrSetError=function(t,e,i){if(!bn.useDeprecatedSynchronousErrorHandling)throw new Error(\"bad call\");try{e.call(this._context,i)}catch(e){return bn.useDeprecatedSynchronousErrorHandling?(t.syncErrorValue=e,t.syncErrorThrown=!0,!0):(Sn(e),!0)}return!1},e.prototype._unsubscribe=function(){var t=this._parentSubscriber;this._context=null,this._parentSubscriber=null,t.unsubscribe()},e}(On);var Ln=function(){return\"function\"==typeof Symbol&&Symbol.observable||\"@@observable\"}();function _n(t){return t}function In(t){return 0===t.length?_n:1===t.length?t[0]:function(e){return t.reduce((function(t,e){return e(t)}),e)}}var Nn=function(){function t(t){this._isScalar=!1,t&&(this._subscribe=t)}return t.prototype.lift=function(e){var i=new t;return i.source=this,i.operator=e,i},t.prototype.subscribe=function(t,e,i){var n=this.operator,r=function(t,e,i){if(t){if(t instanceof On)return t;if(t[En])return t[En]()}return t||e||i?new On(t,e,i):new On(Pn)}(t,e,i);if(n?r.add(n.call(r,this.source)):r.add(this.source||bn.useDeprecatedSynchronousErrorHandling&&!r.syncErrorThrowable?this._subscribe(r):this._trySubscribe(r)),bn.useDeprecatedSynchronousErrorHandling&&r.syncErrorThrowable&&(r.syncErrorThrowable=!1,r.syncErrorThrown))throw r.syncErrorValue;return r},t.prototype._trySubscribe=function(t){try{return this._subscribe(t)}catch(e){bn.useDeprecatedSynchronousErrorHandling&&(t.syncErrorThrown=!0,t.syncErrorValue=e),!function(t){for(;t;){var e=t,i=e.closed,n=e.destination,r=e.isStopped;if(i||r)return!1;t=n&&n instanceof On?n:null}return!0}(t)?console.warn(e):t.error(e)}},t.prototype.forEach=function(t,e){var i=this;return new(e=Rn(e))((function(e,n){var r;r=i.subscribe((function(e){try{t(e)}catch(t){n(t),r&&r.unsubscribe()}}),n,e)}))},t.prototype._subscribe=function(t){var e=this.source;return e&&e.subscribe(t)},t.prototype[Ln]=function(){return this},t.prototype.pipe=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return 0===t.length?this:In(t)(this)},t.prototype.toPromise=function(t){var e=this;return new(t=Rn(t))((function(t,i){var n;e.subscribe((function(t){return n=t}),(function(t){return i(t)}),(function(){return t(n)}))}))},t.create=function(e){return new t(e)},t}();function Rn(t){if(t||(t=bn.Promise||Promise),!t)throw new Error(\"no Promise impl found\");return t}var Hn=function(t){function e(e,i){var n=t.call(this,e,i)||this;return n.scheduler=e,n.work=i,n.pending=!1,n}return yn(e,t),e.prototype.schedule=function(t,e){if(void 0===e&&(e=0),this.closed)return this;this.state=t;var i=this.id,n=this.scheduler;return null!=i&&(this.id=this.recycleAsyncId(n,i,e)),this.pending=!0,this.delay=e,this.id=this.id||this.requestAsyncId(n,this.id,e),this},e.prototype.requestAsyncId=function(t,e,i){return void 0===i&&(i=0),setInterval(t.flush.bind(t,this),i)},e.prototype.recycleAsyncId=function(t,e,i){if(void 0===i&&(i=0),null!==i&&this.delay===i&&!1===this.pending)return e;clearInterval(e)},e.prototype.execute=function(t,e){if(this.closed)return new Error(\"executing a cancelled action\");this.pending=!1;var i=this._execute(t,e);if(i)return i;!1===this.pending&&null!=this.id&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null))},e.prototype._execute=function(t,e){var i=!1,n=void 0;try{this.work(t)}catch(t){i=!0,n=!!t&&t||new Error(t)}if(i)return this.unsubscribe(),n},e.prototype._unsubscribe=function(){var t=this.id,e=this.scheduler,i=e.actions,n=i.indexOf(this);this.work=null,this.state=null,this.pending=!1,this.scheduler=null,-1!==n&&i.splice(n,1),null!=t&&(this.id=this.recycleAsyncId(e,t,null)),this.delay=null},e}(function(t){function e(e,i){return t.call(this)||this}return yn(e,t),e.prototype.schedule=function(t,e){return void 0===e&&(e=0),this},e}(xn)),kn=function(){function t(e,i){void 0===i&&(i=t.now),this.SchedulerAction=e,this.now=i}return t.prototype.schedule=function(t,e,i){return void 0===e&&(e=0),new this.SchedulerAction(this,t).schedule(i,e)},t.now=function(){return Date.now()},t}(),Fn=new(function(t){function e(i,n){void 0===n&&(n=kn.now);var r=t.call(this,i,(function(){return e.delegate&&e.delegate!==r?e.delegate.now():n()}))||this;return r.actions=[],r.active=!1,r.scheduled=void 0,r}return yn(e,t),e.prototype.schedule=function(i,n,r){return void 0===n&&(n=0),e.delegate&&e.delegate!==this?e.delegate.schedule(i,n,r):t.prototype.schedule.call(this,i,n,r)},e.prototype.flush=function(t){var e=this.actions;if(this.active)e.push(t);else{var i;this.active=!0;do{if(i=t.execute(t.state,t.delay))break}while(t=e.shift());if(this.active=!1,i){for(;t=e.shift();)t.unsubscribe();throw i}}},e}(kn))(Hn);function Un(t,e){var i;return void 0===t&&(t=0),void 0===e&&(e=Fn),(An(i=t)||!(i-parseFloat(i)+1>=0)||t<0)&&(t=0),e&&\"function\"==typeof e.schedule||(e=Fn),new Nn((function(i){return i.add(e.schedule(Bn,t,{subscriber:i,counter:0,period:t})),i}))}function Bn(t){var e=t.subscriber,i=t.counter,n=t.period;e.next(i),this.schedule({subscriber:e,counter:i+1,period:n},n)}var Vn=function(){function t(){return Error.call(this),this.message=\"object unsubscribed\",this.name=\"ObjectUnsubscribedError\",this}return t.prototype=Object.create(Error.prototype),t}(),Wn=function(t){function e(e,i){var n=t.call(this)||this;return n.subject=e,n.subscriber=i,n.closed=!1,n}return yn(e,t),e.prototype.unsubscribe=function(){if(!this.closed){this.closed=!0;var t=this.subject,e=t.observers;if(this.subject=null,e&&0!==e.length&&!t.isStopped&&!t.closed){var i=e.indexOf(this.subscriber);-1!==i&&e.splice(i,1)}}},e}(xn),jn=function(t){function e(e){var i=t.call(this,e)||this;return i.destination=e,i}return yn(e,t),e}(On),Gn=function(t){function e(){var e=t.call(this)||this;return e.observers=[],e.closed=!1,e.isStopped=!1,e.hasError=!1,e.thrownError=null,e}return yn(e,t),e.prototype[En]=function(){return new jn(this)},e.prototype.lift=function(t){var e=new zn(this,this);return e.operator=t,e},e.prototype.next=function(t){if(this.closed)throw new Vn;if(!this.isStopped)for(var e=this.observers,i=e.length,n=e.slice(),r=0;r<i;r++)n[r].next(t)},e.prototype.error=function(t){if(this.closed)throw new Vn;this.hasError=!0,this.thrownError=t,this.isStopped=!0;for(var e=this.observers,i=e.length,n=e.slice(),r=0;r<i;r++)n[r].error(t);this.observers.length=0},e.prototype.complete=function(){if(this.closed)throw new Vn;this.isStopped=!0;for(var t=this.observers,e=t.length,i=t.slice(),n=0;n<e;n++)i[n].complete();this.observers.length=0},e.prototype.unsubscribe=function(){this.isStopped=!0,this.closed=!0,this.observers=null},e.prototype._trySubscribe=function(e){if(this.closed)throw new Vn;return t.prototype._trySubscribe.call(this,e)},e.prototype._subscribe=function(t){if(this.closed)throw new Vn;return this.hasError?(t.error(this.thrownError),xn.EMPTY):this.isStopped?(t.complete(),xn.EMPTY):(this.observers.push(t),new Wn(this,t))},e.prototype.asObservable=function(){var t=new Nn;return t.source=this,t},e.create=function(t,e){return new zn(t,e)},e}(Nn),zn=function(t){function e(e,i){var n=t.call(this)||this;return n.destination=e,n.source=i,n}return yn(e,t),e.prototype.next=function(t){var e=this.destination;e&&e.next&&e.next(t)},e.prototype.error=function(t){var e=this.destination;e&&e.error&&this.destination.error(t)},e.prototype.complete=function(){var t=this.destination;t&&t.complete&&this.destination.complete()},e.prototype._subscribe=function(t){return this.source?this.source.subscribe(t):xn.EMPTY},e}(Gn),Yn=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return yn(e,t),e.prototype.notifyNext=function(t,e,i,n,r){this.destination.next(e)},e.prototype.notifyError=function(t,e){this.destination.error(t)},e.prototype.notifyComplete=function(t){this.destination.complete()},e}(On),qn=function(t){function e(e,i,n){var r=t.call(this)||this;return r.parent=e,r.outerValue=i,r.outerIndex=n,r.index=0,r}return yn(e,t),e.prototype._next=function(t){this.parent.notifyNext(this.outerValue,t,this.outerIndex,this.index++,this)},e.prototype._error=function(t){this.parent.notifyError(t,this),this.unsubscribe()},e.prototype._complete=function(){this.parent.notifyComplete(this),this.unsubscribe()},e}(On);function $n(){return\"function\"==typeof Symbol&&Symbol.iterator?Symbol.iterator:\"@@iterator\"}var Xn=$n();var Kn=function(t){if(t&&\"function\"==typeof t[Ln])return s=t,function(t){var e=s[Ln]();if(\"function\"!=typeof e.subscribe)throw new TypeError(\"Provided object does not correctly implement Symbol.observable\");return e.subscribe(t)};if((r=t)&&\"number\"==typeof r.length&&\"function\"!=typeof r)return n=t,function(t){for(var e=0,i=n.length;e<i&&!t.closed;e++)t.next(n[e]);t.complete()};if(function(t){return!!t&&\"function\"!=typeof t.subscribe&&\"function\"==typeof t.then}(t))return i=t,function(t){return i.then((function(e){t.closed||(t.next(e),t.complete())}),(function(e){return t.error(e)})).then(null,Sn),t};if(t&&\"function\"==typeof t[Xn])return e=t,function(t){for(var i=e[Xn]();;){var n=void 0;try{n=i.next()}catch(e){return t.error(e),t}if(n.done){t.complete();break}if(t.next(n.value),t.closed)break}return\"function\"==typeof i.return&&t.add((function(){i.return&&i.return()})),t};var e,i,n,r,s,o=wn(t)?\"an invalid object\":\"'\"+t+\"'\";throw new TypeError(\"You provided \"+o+\" where a stream was expected. You can provide an Observable, Promise, Array, or Iterable.\")};var Zn=function(){function t(t){this.closingSelector=t}return t.prototype.call=function(t,e){return e.subscribe(new Jn(t,this.closingSelector))},t}(),Jn=function(t){function e(e,i){var n=t.call(this,e)||this;return n.closingSelector=i,n.subscribing=!1,n.openBuffer(),n}return yn(e,t),e.prototype._next=function(t){this.buffer.push(t)},e.prototype._complete=function(){var e=this.buffer;e&&this.destination.next(e),t.prototype._complete.call(this)},e.prototype._unsubscribe=function(){this.buffer=null,this.subscribing=!1},e.prototype.notifyNext=function(t,e,i,n,r){this.openBuffer()},e.prototype.notifyComplete=function(){this.subscribing?this.complete():this.openBuffer()},e.prototype.openBuffer=function(){var t=this.closingSubscription;t&&(this.remove(t),t.unsubscribe());var e,i=this.buffer;this.buffer&&this.destination.next(i),this.buffer=[];try{e=(0,this.closingSelector)()}catch(t){return this.error(t)}t=new xn,this.closingSubscription=t,this.add(t),this.subscribing=!0,t.add(function(t,e,i,n,r){if(void 0===r&&(r=new qn(t,i,n)),!r.closed)return e instanceof Nn?e.subscribe(r):Kn(e)(r)}(this,e)),this.subscribing=!1},e}(Yn);function Qn(t,e){return function(i){return i.lift(new tr(t,e))}}var tr=function(){function t(t,e){this.predicate=t,this.thisArg=e}return t.prototype.call=function(t,e){return e.subscribe(new er(t,this.predicate,this.thisArg))},t}(),er=function(t){function e(e,i,n){var r=t.call(this,e)||this;return r.predicate=i,r.thisArg=n,r.count=0,r}return yn(e,t),e.prototype._next=function(t){var e;try{e=this.predicate.call(this.thisArg,t,this.count++)}catch(t){return void this.destination.error(t)}e&&this.destination.next(t)},e}(On);function ir(t){yt(1,arguments);var e=vt(t);return!isNaN(e)}var nr={lessThanXSeconds:{one:\"less than a second\",other:\"less than {{count}} seconds\"},xSeconds:{one:\"1 second\",other:\"{{count}} seconds\"},halfAMinute:\"half a minute\",lessThanXMinutes:{one:\"less than a minute\",other:\"less than {{count}} minutes\"},xMinutes:{one:\"1 minute\",other:\"{{count}} minutes\"},aboutXHours:{one:\"about 1 hour\",other:\"about {{count}} hours\"},xHours:{one:\"1 hour\",other:\"{{count}} hours\"},xDays:{one:\"1 day\",other:\"{{count}} days\"},aboutXWeeks:{one:\"about 1 week\",other:\"about {{count}} weeks\"},xWeeks:{one:\"1 week\",other:\"{{count}} weeks\"},aboutXMonths:{one:\"about 1 month\",other:\"about {{count}} months\"},xMonths:{one:\"1 month\",other:\"{{count}} months\"},aboutXYears:{one:\"about 1 year\",other:\"about {{count}} years\"},xYears:{one:\"1 year\",other:\"{{count}} years\"},overXYears:{one:\"over 1 year\",other:\"over {{count}} years\"},almostXYears:{one:\"almost 1 year\",other:\"almost {{count}} years\"}};function rr(t){return function(e){var i=e||{},n=i.width?String(i.width):t.defaultWidth;return t.formats[n]||t.formats[t.defaultWidth]}}var sr={date:rr({formats:{full:\"EEEE, MMMM do, y\",long:\"MMMM do, y\",medium:\"MMM d, y\",short:\"MM/dd/yyyy\"},defaultWidth:\"full\"}),time:rr({formats:{full:\"h:mm:ss a zzzz\",long:\"h:mm:ss a z\",medium:\"h:mm:ss a\",short:\"h:mm a\"},defaultWidth:\"full\"}),dateTime:rr({formats:{full:\"{{date}} 'at' {{time}}\",long:\"{{date}} 'at' {{time}}\",medium:\"{{date}}, {{time}}\",short:\"{{date}}, {{time}}\"},defaultWidth:\"full\"})},or={lastWeek:\"'last' eeee 'at' p\",yesterday:\"'yesterday at' p\",today:\"'today at' p\",tomorrow:\"'tomorrow at' p\",nextWeek:\"eeee 'at' p\",other:\"P\"};function ar(t){return function(e,i){var n,r=i||{};if(\"formatting\"===(r.context?String(r.context):\"standalone\")&&t.formattingValues){var s=t.defaultFormattingWidth||t.defaultWidth,o=r.width?String(r.width):s;n=t.formattingValues[o]||t.formattingValues[s]}else{var a=t.defaultWidth,l=r.width?String(r.width):t.defaultWidth;n=t.values[l]||t.values[a]}return n[t.argumentCallback?t.argumentCallback(e):e]}}function lr(t){return function(e,i){var n=String(e),r=i||{},s=n.match(t.matchPattern);if(!s)return null;var o=s[0],a=n.match(t.parsePattern);if(!a)return null;var l=t.valueCallback?t.valueCallback(a[0]):a[0];return{value:l=r.valueCallback?r.valueCallback(l):l,rest:n.slice(o.length)}}}function cr(t){return function(e,i){var n=String(e),r=i||{},s=r.width,o=s&&t.matchPatterns[s]||t.matchPatterns[t.defaultMatchWidth],a=n.match(o);if(!a)return null;var l,c=a[0],u=s&&t.parsePatterns[s]||t.parsePatterns[t.defaultParseWidth];return l=\"[object Array]\"===Object.prototype.toString.call(u)?function(t,e){for(var i=0;i<t.length;i++)if(e(t[i]))return i}(u,(function(t){return t.test(c)})):function(t,e){for(var i in t)if(t.hasOwnProperty(i)&&e(t[i]))return i}(u,(function(t){return t.test(c)})),l=t.valueCallback?t.valueCallback(l):l,{value:l=r.valueCallback?r.valueCallback(l):l,rest:n.slice(c.length)}}}var ur={code:\"en-US\",formatDistance:function(t,e,i){var n;return i=i||{},n=\"string\"==typeof nr[t]?nr[t]:1===e?nr[t].one:nr[t].other.replace(\"{{count}}\",e),i.addSuffix?i.comparison>0?\"in \"+n:n+\" ago\":n},formatLong:sr,formatRelative:function(t,e,i,n){return or[t]},localize:{ordinalNumber:function(t,e){var i=Number(t),n=i%100;if(n>20||n<10)switch(n%10){case 1:return i+\"st\";case 2:return i+\"nd\";case 3:return i+\"rd\"}return i+\"th\"},era:ar({values:{narrow:[\"B\",\"A\"],abbreviated:[\"BC\",\"AD\"],wide:[\"Before Christ\",\"Anno Domini\"]},defaultWidth:\"wide\"}),quarter:ar({values:{narrow:[\"1\",\"2\",\"3\",\"4\"],abbreviated:[\"Q1\",\"Q2\",\"Q3\",\"Q4\"],wide:[\"1st quarter\",\"2nd quarter\",\"3rd quarter\",\"4th quarter\"]},defaultWidth:\"wide\",argumentCallback:function(t){return Number(t)-1}}),month:ar({values:{narrow:[\"J\",\"F\",\"M\",\"A\",\"M\",\"J\",\"J\",\"A\",\"S\",\"O\",\"N\",\"D\"],abbreviated:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],wide:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"]},defaultWidth:\"wide\"}),day:ar({values:{narrow:[\"S\",\"M\",\"T\",\"W\",\"T\",\"F\",\"S\"],short:[\"Su\",\"Mo\",\"Tu\",\"We\",\"Th\",\"Fr\",\"Sa\"],abbreviated:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],wide:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]},defaultWidth:\"wide\"}),dayPeriod:ar({values:{narrow:{am:\"a\",pm:\"p\",midnight:\"mi\",noon:\"n\",morning:\"morning\",afternoon:\"afternoon\",evening:\"evening\",night:\"night\"},abbreviated:{am:\"AM\",pm:\"PM\",midnight:\"midnight\",noon:\"noon\",morning:\"morning\",afternoon:\"afternoon\",evening:\"evening\",night:\"night\"},wide:{am:\"a.m.\",pm:\"p.m.\",midnight:\"midnight\",noon:\"noon\",morning:\"morning\",afternoon:\"afternoon\",evening:\"evening\",night:\"night\"}},defaultWidth:\"wide\",formattingValues:{narrow:{am:\"a\",pm:\"p\",midnight:\"mi\",noon:\"n\",morning:\"in the morning\",afternoon:\"in the afternoon\",evening:\"in the evening\",night:\"at night\"},abbreviated:{am:\"AM\",pm:\"PM\",midnight:\"midnight\",noon:\"noon\",morning:\"in the morning\",afternoon:\"in the afternoon\",evening:\"in the evening\",night:\"at night\"},wide:{am:\"a.m.\",pm:\"p.m.\",midnight:\"midnight\",noon:\"noon\",morning:\"in the morning\",afternoon:\"in the afternoon\",evening:\"in the evening\",night:\"at night\"}},defaultFormattingWidth:\"wide\"})},match:{ordinalNumber:lr({matchPattern:/^(\\d+)(th|st|nd|rd)?/i,parsePattern:/\\d+/i,valueCallback:function(t){return parseInt(t,10)}}),era:cr({matchPatterns:{narrow:/^(b|a)/i,abbreviated:/^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},defaultMatchWidth:\"wide\",parsePatterns:{any:[/^b/i,/^(a|c)/i]},defaultParseWidth:\"any\"}),quarter:cr({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},defaultMatchWidth:\"wide\",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:\"any\",valueCallback:function(t){return t+1}}),month:cr({matchPatterns:{narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},defaultMatchWidth:\"wide\",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},defaultParseWidth:\"any\"}),day:cr({matchPatterns:{narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},defaultMatchWidth:\"wide\",parsePatterns:{narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},defaultParseWidth:\"any\"}),dayPeriod:cr({matchPatterns:{narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},defaultMatchWidth:\"any\",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},defaultParseWidth:\"any\"})},options:{weekStartsOn:0,firstWeekContainsDate:1}};function hr(t,e){yt(2,arguments);var i=vt(t).getTime(),n=At(e);return new Date(i+n)}function dr(t,e){yt(2,arguments);var i=At(e);return hr(t,-i)}function pr(t,e){for(var i=t<0?\"-\":\"\",n=Math.abs(t).toString();n.length<e;)n=\"0\"+n;return i+n}var fr={y:function(t,e){var i=t.getUTCFullYear(),n=i>0?i:1-i;return pr(\"yy\"===e?n%100:n,e.length)},M:function(t,e){var i=t.getUTCMonth();return\"M\"===e?String(i+1):pr(i+1,2)},d:function(t,e){return pr(t.getUTCDate(),e.length)},a:function(t,e){var i=t.getUTCHours()/12>=1?\"pm\":\"am\";switch(e){case\"a\":case\"aa\":case\"aaa\":return i.toUpperCase();case\"aaaaa\":return i[0];case\"aaaa\":default:return\"am\"===i?\"a.m.\":\"p.m.\"}},h:function(t,e){return pr(t.getUTCHours()%12||12,e.length)},H:function(t,e){return pr(t.getUTCHours(),e.length)},m:function(t,e){return pr(t.getUTCMinutes(),e.length)},s:function(t,e){return pr(t.getUTCSeconds(),e.length)},S:function(t,e){var i=e.length,n=t.getUTCMilliseconds();return pr(Math.floor(n*Math.pow(10,i-3)),e.length)}};function mr(t){yt(1,arguments);var e=1,i=vt(t),n=i.getUTCDay(),r=(n<e?7:0)+n-e;return i.setUTCDate(i.getUTCDate()-r),i.setUTCHours(0,0,0,0),i}function gr(t){yt(1,arguments);var e=vt(t),i=e.getUTCFullYear(),n=new Date(0);n.setUTCFullYear(i+1,0,4),n.setUTCHours(0,0,0,0);var r=mr(n),s=new Date(0);s.setUTCFullYear(i,0,4),s.setUTCHours(0,0,0,0);var o=mr(s);return e.getTime()>=r.getTime()?i+1:e.getTime()>=o.getTime()?i:i-1}function yr(t){yt(1,arguments);var e=gr(t),i=new Date(0);i.setUTCFullYear(e,0,4),i.setUTCHours(0,0,0,0);var n=mr(i);return n}function vr(t){yt(1,arguments);var e=vt(t),i=mr(e).getTime()-yr(e).getTime();return Math.round(i/6048e5)+1}function Tr(t,e){yt(1,arguments);var i=e||{},n=i.locale,r=n&&n.options&&n.options.weekStartsOn,s=null==r?0:At(r),o=null==i.weekStartsOn?s:At(i.weekStartsOn);if(!(o>=0&&o<=6))throw new RangeError(\"weekStartsOn must be between 0 and 6 inclusively\");var a=vt(t),l=a.getUTCDay(),c=(l<o?7:0)+l-o;return a.setUTCDate(a.getUTCDate()-c),a.setUTCHours(0,0,0,0),a}function br(t,e){yt(1,arguments);var i=vt(t,e),n=i.getUTCFullYear(),r=e||{},s=r.locale,o=s&&s.options&&s.options.firstWeekContainsDate,a=null==o?1:At(o),l=null==r.firstWeekContainsDate?a:At(r.firstWeekContainsDate);if(!(l>=1&&l<=7))throw new RangeError(\"firstWeekContainsDate must be between 1 and 7 inclusively\");var c=new Date(0);c.setUTCFullYear(n+1,0,l),c.setUTCHours(0,0,0,0);var u=Tr(c,e),h=new Date(0);h.setUTCFullYear(n,0,l),h.setUTCHours(0,0,0,0);var d=Tr(h,e);return i.getTime()>=u.getTime()?n+1:i.getTime()>=d.getTime()?n:n-1}function Sr(t,e){yt(1,arguments);var i=e||{},n=i.locale,r=n&&n.options&&n.options.firstWeekContainsDate,s=null==r?1:At(r),o=null==i.firstWeekContainsDate?s:At(i.firstWeekContainsDate),a=br(t,e),l=new Date(0);l.setUTCFullYear(a,0,o),l.setUTCHours(0,0,0,0);var c=Tr(l,e);return c}function Pr(t,e){yt(1,arguments);var i=vt(t),n=Tr(i,e).getTime()-Sr(i,e).getTime();return Math.round(n/6048e5)+1}var Ar=\"midnight\",wr=\"noon\",Cr=\"morning\",xr=\"afternoon\",Mr=\"evening\",Er=\"night\";function Or(t,e){var i=t>0?\"-\":\"+\",n=Math.abs(t),r=Math.floor(n/60),s=n%60;if(0===s)return i+String(r);var o=e||\"\";return i+String(r)+o+pr(s,2)}function Dr(t,e){return t%60==0?(t>0?\"-\":\"+\")+pr(Math.abs(t)/60,2):Lr(t,e)}function Lr(t,e){var i=e||\"\",n=t>0?\"-\":\"+\",r=Math.abs(t);return n+pr(Math.floor(r/60),2)+i+pr(r%60,2)}var _r={G:function(t,e,i){var n=t.getUTCFullYear()>0?1:0;switch(e){case\"G\":case\"GG\":case\"GGG\":return i.era(n,{width:\"abbreviated\"});case\"GGGGG\":return i.era(n,{width:\"narrow\"});case\"GGGG\":default:return i.era(n,{width:\"wide\"})}},y:function(t,e,i){if(\"yo\"===e){var n=t.getUTCFullYear(),r=n>0?n:1-n;return i.ordinalNumber(r,{unit:\"year\"})}return fr.y(t,e)},Y:function(t,e,i,n){var r=br(t,n),s=r>0?r:1-r;return\"YY\"===e?pr(s%100,2):\"Yo\"===e?i.ordinalNumber(s,{unit:\"year\"}):pr(s,e.length)},R:function(t,e){return pr(gr(t),e.length)},u:function(t,e){return pr(t.getUTCFullYear(),e.length)},Q:function(t,e,i){var n=Math.ceil((t.getUTCMonth()+1)/3);switch(e){case\"Q\":return String(n);case\"QQ\":return pr(n,2);case\"Qo\":return i.ordinalNumber(n,{unit:\"quarter\"});case\"QQQ\":return i.quarter(n,{width:\"abbreviated\",context:\"formatting\"});case\"QQQQQ\":return i.quarter(n,{width:\"narrow\",context:\"formatting\"});case\"QQQQ\":default:return i.quarter(n,{width:\"wide\",context:\"formatting\"})}},q:function(t,e,i){var n=Math.ceil((t.getUTCMonth()+1)/3);switch(e){case\"q\":return String(n);case\"qq\":return pr(n,2);case\"qo\":return i.ordinalNumber(n,{unit:\"quarter\"});case\"qqq\":return i.quarter(n,{width:\"abbreviated\",context:\"standalone\"});case\"qqqqq\":return i.quarter(n,{width:\"narrow\",context:\"standalone\"});case\"qqqq\":default:return i.quarter(n,{width:\"wide\",context:\"standalone\"})}},M:function(t,e,i){var n=t.getUTCMonth();switch(e){case\"M\":case\"MM\":return fr.M(t,e);case\"Mo\":return i.ordinalNumber(n+1,{unit:\"month\"});case\"MMM\":return i.month(n,{width:\"abbreviated\",context:\"formatting\"});case\"MMMMM\":return i.month(n,{width:\"narrow\",context:\"formatting\"});case\"MMMM\":default:return i.month(n,{width:\"wide\",context:\"formatting\"})}},L:function(t,e,i){var n=t.getUTCMonth();switch(e){case\"L\":return String(n+1);case\"LL\":return pr(n+1,2);case\"Lo\":return i.ordinalNumber(n+1,{unit:\"month\"});case\"LLL\":return i.month(n,{width:\"abbreviated\",context:\"standalone\"});case\"LLLLL\":return i.month(n,{width:\"narrow\",context:\"standalone\"});case\"LLLL\":default:return i.month(n,{width:\"wide\",context:\"standalone\"})}},w:function(t,e,i,n){var r=Pr(t,n);return\"wo\"===e?i.ordinalNumber(r,{unit:\"week\"}):pr(r,e.length)},I:function(t,e,i){var n=vr(t);return\"Io\"===e?i.ordinalNumber(n,{unit:\"week\"}):pr(n,e.length)},d:function(t,e,i){return\"do\"===e?i.ordinalNumber(t.getUTCDate(),{unit:\"date\"}):fr.d(t,e)},D:function(t,e,i){var n=function(t){yt(1,arguments);var e=vt(t),i=e.getTime();e.setUTCMonth(0,1),e.setUTCHours(0,0,0,0);var n=e.getTime(),r=i-n;return Math.floor(r/864e5)+1}(t);return\"Do\"===e?i.ordinalNumber(n,{unit:\"dayOfYear\"}):pr(n,e.length)},E:function(t,e,i){var n=t.getUTCDay();switch(e){case\"E\":case\"EE\":case\"EEE\":return i.day(n,{width:\"abbreviated\",context:\"formatting\"});case\"EEEEE\":return i.day(n,{width:\"narrow\",context:\"formatting\"});case\"EEEEEE\":return i.day(n,{width:\"short\",context:\"formatting\"});case\"EEEE\":default:return i.day(n,{width:\"wide\",context:\"formatting\"})}},e:function(t,e,i,n){var r=t.getUTCDay(),s=(r-n.weekStartsOn+8)%7||7;switch(e){case\"e\":return String(s);case\"ee\":return pr(s,2);case\"eo\":return i.ordinalNumber(s,{unit:\"day\"});case\"eee\":return i.day(r,{width:\"abbreviated\",context:\"formatting\"});case\"eeeee\":return i.day(r,{width:\"narrow\",context:\"formatting\"});case\"eeeeee\":return i.day(r,{width:\"short\",context:\"formatting\"});case\"eeee\":default:return i.day(r,{width:\"wide\",context:\"formatting\"})}},c:function(t,e,i,n){var r=t.getUTCDay(),s=(r-n.weekStartsOn+8)%7||7;switch(e){case\"c\":return String(s);case\"cc\":return pr(s,e.length);case\"co\":return i.ordinalNumber(s,{unit:\"day\"});case\"ccc\":return i.day(r,{width:\"abbreviated\",context:\"standalone\"});case\"ccccc\":return i.day(r,{width:\"narrow\",context:\"standalone\"});case\"cccccc\":return i.day(r,{width:\"short\",context:\"standalone\"});case\"cccc\":default:return i.day(r,{width:\"wide\",context:\"standalone\"})}},i:function(t,e,i){var n=t.getUTCDay(),r=0===n?7:n;switch(e){case\"i\":return String(r);case\"ii\":return pr(r,e.length);case\"io\":return i.ordinalNumber(r,{unit:\"day\"});case\"iii\":return i.day(n,{width:\"abbreviated\",context:\"formatting\"});case\"iiiii\":return i.day(n,{width:\"narrow\",context:\"formatting\"});case\"iiiiii\":return i.day(n,{width:\"short\",context:\"formatting\"});case\"iiii\":default:return i.day(n,{width:\"wide\",context:\"formatting\"})}},a:function(t,e,i){var n=t.getUTCHours()/12>=1?\"pm\":\"am\";switch(e){case\"a\":case\"aa\":case\"aaa\":return i.dayPeriod(n,{width:\"abbreviated\",context:\"formatting\"});case\"aaaaa\":return i.dayPeriod(n,{width:\"narrow\",context:\"formatting\"});case\"aaaa\":default:return i.dayPeriod(n,{width:\"wide\",context:\"formatting\"})}},b:function(t,e,i){var n,r=t.getUTCHours();switch(n=12===r?wr:0===r?Ar:r/12>=1?\"pm\":\"am\",e){case\"b\":case\"bb\":case\"bbb\":return i.dayPeriod(n,{width:\"abbreviated\",context:\"formatting\"});case\"bbbbb\":return i.dayPeriod(n,{width:\"narrow\",context:\"formatting\"});case\"bbbb\":default:return i.dayPeriod(n,{width:\"wide\",context:\"formatting\"})}},B:function(t,e,i){var n,r=t.getUTCHours();switch(n=r>=17?Mr:r>=12?xr:r>=4?Cr:Er,e){case\"B\":case\"BB\":case\"BBB\":return i.dayPeriod(n,{width:\"abbreviated\",context:\"formatting\"});case\"BBBBB\":return i.dayPeriod(n,{width:\"narrow\",context:\"formatting\"});case\"BBBB\":default:return i.dayPeriod(n,{width:\"wide\",context:\"formatting\"})}},h:function(t,e,i){if(\"ho\"===e){var n=t.getUTCHours()%12;return 0===n&&(n=12),i.ordinalNumber(n,{unit:\"hour\"})}return fr.h(t,e)},H:function(t,e,i){return\"Ho\"===e?i.ordinalNumber(t.getUTCHours(),{unit:\"hour\"}):fr.H(t,e)},K:function(t,e,i){var n=t.getUTCHours()%12;return\"Ko\"===e?i.ordinalNumber(n,{unit:\"hour\"}):pr(n,e.length)},k:function(t,e,i){var n=t.getUTCHours();return 0===n&&(n=24),\"ko\"===e?i.ordinalNumber(n,{unit:\"hour\"}):pr(n,e.length)},m:function(t,e,i){return\"mo\"===e?i.ordinalNumber(t.getUTCMinutes(),{unit:\"minute\"}):fr.m(t,e)},s:function(t,e,i){return\"so\"===e?i.ordinalNumber(t.getUTCSeconds(),{unit:\"second\"}):fr.s(t,e)},S:function(t,e){return fr.S(t,e)},X:function(t,e,i,n){var r=(n._originalDate||t).getTimezoneOffset();if(0===r)return\"Z\";switch(e){case\"X\":return Dr(r);case\"XXXX\":case\"XX\":return Lr(r);case\"XXXXX\":case\"XXX\":default:return Lr(r,\":\")}},x:function(t,e,i,n){var r=(n._originalDate||t).getTimezoneOffset();switch(e){case\"x\":return Dr(r);case\"xxxx\":case\"xx\":return Lr(r);case\"xxxxx\":case\"xxx\":default:return Lr(r,\":\")}},O:function(t,e,i,n){var r=(n._originalDate||t).getTimezoneOffset();switch(e){case\"O\":case\"OO\":case\"OOO\":return\"GMT\"+Or(r,\":\");case\"OOOO\":default:return\"GMT\"+Lr(r,\":\")}},z:function(t,e,i,n){var r=(n._originalDate||t).getTimezoneOffset();switch(e){case\"z\":case\"zz\":case\"zzz\":return\"GMT\"+Or(r,\":\");case\"zzzz\":default:return\"GMT\"+Lr(r,\":\")}},t:function(t,e,i,n){var r=n._originalDate||t;return pr(Math.floor(r.getTime()/1e3),e.length)},T:function(t,e,i,n){return pr((n._originalDate||t).getTime(),e.length)}};function Ir(t,e){switch(t){case\"P\":return e.date({width:\"short\"});case\"PP\":return e.date({width:\"medium\"});case\"PPP\":return e.date({width:\"long\"});case\"PPPP\":default:return e.date({width:\"full\"})}}function Nr(t,e){switch(t){case\"p\":return e.time({width:\"short\"});case\"pp\":return e.time({width:\"medium\"});case\"ppp\":return e.time({width:\"long\"});case\"pppp\":default:return e.time({width:\"full\"})}}var Rr={p:Nr,P:function(t,e){var i,n=t.match(/(P+)(p+)?/),r=n[1],s=n[2];if(!s)return Ir(t,e);switch(r){case\"P\":i=e.dateTime({width:\"short\"});break;case\"PP\":i=e.dateTime({width:\"medium\"});break;case\"PPP\":i=e.dateTime({width:\"long\"});break;case\"PPPP\":default:i=e.dateTime({width:\"full\"})}return i.replace(\"{{date}}\",Ir(r,e)).replace(\"{{time}}\",Nr(s,e))}};function Hr(t){return t.getTime()%6e4}function kr(t){var e=new Date(t.getTime()),i=Math.ceil(e.getTimezoneOffset());return e.setSeconds(0,0),6e4*i+(i>0?(6e4+Hr(e))%6e4:Hr(e))}var Fr=[\"D\",\"DD\"],Ur=[\"YY\",\"YYYY\"];function Br(t){return-1!==Fr.indexOf(t)}function Vr(t){return-1!==Ur.indexOf(t)}function Wr(t){if(\"YYYY\"===t)throw new RangeError(\"Use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr\");if(\"YY\"===t)throw new RangeError(\"Use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr\");if(\"D\"===t)throw new RangeError(\"Use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr\");if(\"DD\"===t)throw new RangeError(\"Use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr\")}var jr=/[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g,Gr=/P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,zr=/^'([^]*?)'?$/,Yr=/''/g,qr=/[a-zA-Z]/;function $r(t,e,i){yt(2,arguments);var n=String(e),r=i||{},s=r.locale||ur,o=s.options&&s.options.firstWeekContainsDate,a=null==o?1:At(o),l=null==r.firstWeekContainsDate?a:At(r.firstWeekContainsDate);if(!(l>=1&&l<=7))throw new RangeError(\"firstWeekContainsDate must be between 1 and 7 inclusively\");var c=s.options&&s.options.weekStartsOn,u=null==c?0:At(c),h=null==r.weekStartsOn?u:At(r.weekStartsOn);if(!(h>=0&&h<=6))throw new RangeError(\"weekStartsOn must be between 0 and 6 inclusively\");if(!s.localize)throw new RangeError(\"locale must contain localize property\");if(!s.formatLong)throw new RangeError(\"locale must contain formatLong property\");var d=vt(t);if(!ir(d))throw new RangeError(\"Invalid time value\");var p=kr(d),f=dr(d,p),m={firstWeekContainsDate:l,weekStartsOn:h,locale:s,_originalDate:d},g=n.match(Gr).map((function(t){var e=t[0];return\"p\"===e||\"P\"===e?(0,Rr[e])(t,s.formatLong,m):t})).join(\"\").match(jr).map((function(t){if(\"''\"===t)return\"'\";var e=t[0];if(\"'\"===e)return Xr(t);var i=_r[e];if(i)return!r.useAdditionalWeekYearTokens&&Vr(t)&&Wr(t),!r.useAdditionalDayOfYearTokens&&Br(t)&&Wr(t),i(f,t,s.localize,m);if(e.match(qr))throw new RangeError(\"Format string contains an unescaped latin alphabet character `\"+e+\"`\");return t})).join(\"\");return g}function Xr(t){return t.match(zr)[1].replace(Yr,\"'\")}class Kr{constructor(){this.recordCache=new Map,this.translateSymbolBack=new Map}get subject(){if(!K(this._subject)){const e=Un(Math.max(te.MINIMUM_THROTTLE,Yp().config.throttleMillis||0)),i=Un(te.BACKGROUND_TAB_THROTTLE),n=()=>document.hidden?i:e;this._subject=(new Gn).pipe((t=n,function(e){return e.lift(new Zn(t))}),Qn(t=>t.length>0))}var t;return this._subject}addRecordForSymbol(t,e){const i=ae(t);i!==t&&this.translateSymbolBack.set(i,t),this.recordCache.set(t,e)}removeRecordForSymbol(t){this.recordCache.delete(t);const e=ae(t);this.translateSymbolBack.has(e)&&this.translateSymbolBack.delete(e)}findRecordForSymbol(t){const e=this.translateSymbolBack.has(t)?this.translateSymbolBack.get(t):t;return this.recordCache.get(e)}makeAndCacheRecord(t,e){if(t===te.PLACEHOLDER_SYMBOL_NAME)return new cn(te.PLACEHOLDER_SYMBOL_NAME);if(this.recordCache.has(t))return this.recordCache.get(t);const i=e(t);return i.addFields(on.Open,on.High,on.Low,on.Last,on.Close,on.PreviousClose,on.PreviousHigh,on.PreviousLow,on.PreviousOpen,on.Volume),this.addRecordForSymbol(t,i),i.ready().then(t=>{this.postInit(t,i)}),i}evictUnused(t,e){for(const[i,n]of this.recordCache)t.has(n)||(e(n),this.removeRecordForSymbol(i))}postInit(t,e){}}class Zr extends Kr{getRecord(t){return this.makeAndCacheRecord(t,()=>new fn(t))}evictUnused(t){super.evictUnused(t,t=>t.shutdown())}}class Jr extends Kr{constructor(){super(),this.onMarketUpdate=this.onMarketUpdate.bind(this)}evictUnused(t){super.evictUnused(t,t=>{t.shutdown(),Yp().connection.off(\"marketUpdate\",this.onMarketUpdate,t.translated)})}getRecord(t){return this.makeAndCacheRecord(t,()=>new pn(t))}postInit(t,e){t&&Yp().connection.on(\"marketUpdate\",this.onMarketUpdate,e.translated)}onMarketUpdate(t){if(t.type===te.REALTIME_INITIAL_QUOTE)this.updateFromQuote(t,!0),this.subject.next({topic:an.RT_QUOTE,data:t});else if(t.type===te.REALTIME_TRADE){let e=Yp().connection.getMarketState().getQuote(t.symbol);this.updateFromQuote(e),this.subject.next({topic:an.RT_TRADE,data:t}),t.symbol===te.DEBUG_SYMBOL&&console.log(\"Trade\\nSymbol: \".concat(t.symbol,\" \\t%cPrice: \").concat(t.tradePrice,\" \\t%cSize: \").concat(t.tradeSize,\" \\t%cTime: \").concat($r(t.time,te.DEBUG_TIME_FORMAT),\" \\t%cSession: \").concat(t.session),\"color:#0f0\",\"color:#a7a\",\"color:#f96\",\"color:#bee\")}else if(t.type===te.REALTIME_VOLUME){this.updateFromVolume(t)&&(this.subject.next({topic:an.RT_VOLUME,data:t}),t.symbol===te.DEBUG_SYMBOL&&console.log(\"Volume\\n Symbol: \".concat(t.symbol,\" \\t%cValue: \").concat(t.value,\" \\t%cSession: \").concat(t.session),\"color:#a7a\",\"color:#bee\"))}}updateFromQuote(t,e=!1){const i=this.findRecordForSymbol(t.symbol);i.update(on.Open,t.openPrice),i.update(on.High,t.highPrice),i.update(on.Low,t.lowPrice),i.update(on.Last,t.lastPrice),i.update(on.Close,t.lastPrice);const n=(t,e)=>{e&&i.update(t,e)};n(on.Volume,t.volume),i.update(on.PreviousClose,t.previousPrice),e&&(n(on.PreviousOpen,t.previousOpenPrice),n(on.PreviousHigh,t.previousHighPrice),n(on.PreviousLow,t.previousLowPrice))}updateFromVolume(t){return this.findRecordForSymbol(t.symbol).update(on.Volume,t.value)}}class Qr{constructor(t){this.fields=t,this.storage={},t.forEach(t=>{this.storage[t.id]=[]})}fixupTransition(t,e){if(t!==on.Change||!this.hasField(on.Close)||e<1)return;const i=this.storage[t.id],n=this.storage[on.Close.id];i[e]=n[e]-n[e-1]}concat(t,e,i){this.storage[t.id]=e.concat(i),this.fixupTransition(t,e.length)}prependData(t,e){this.checkField(t),this.concat(t,e,this.getData(t))}prepend(t){const e=t.getLastDataPoint(on.DateTime).getTime()===this.getData(on.DateTime)[0].getTime(),i=t.size;t.fields.forEach(n=>{e&&t.getData(n).splice(i-1,1),this.prependData(n,t.getData(n))})}appendData(t,e){this.checkField(t),this.concat(t,this.getData(t),e)}append(t){const e=t.getData(on.DateTime)[0].getTime()===this.getLastDataPoint(on.DateTime).getTime(),i=this.size;return t.fields.forEach(n=>{e&&this.getData(n).splice(i-1,1),this.appendData(n,t.getData(n))}),t.size-(e?1:0)}getTimeData(){return this.getData(on.DateTime)}getData(t){return this.storage[t.id]}setData(t,e){this.checkField(t),this.storage[t.id]=e}hasField(t){return-1!==this.fields.findIndex(e=>e.id===t.id)}get size(){return 0===this.fields.length?0:this.getData(this.fields[0]).length}get isEmpty(){return 0===this.size}checkField(t){if(!this.hasField(t))throw new Error(\"This container does not store values for field \".concat(t.id))}addDataPoint(t,e){this.checkField(t);this.getData(t).push(e)}getLastDataPoint(t){this.checkField(t);return V(this.getData(t))}setLastDataPoint(t,e){this.checkField(t);const i=this.getData(t);i[i.length-1]=e}}class ts extends Qr{constructor(){super([])}get size(){return 0}}class es extends Qr{constructor(t,e){super(t),this.wrapper=e}isWrapped(t){return this.wrapper.hasOwnProperty(t.id)}hasField(t){return this.isWrapped(t)||super.hasField(t)}getData(t){return this.isWrapped(t)?this.wrapper[t.id]():super.getData(t)}}const is=[on.DateTime,on.Last,on.TradeSize,on.Change],ns=[on.DateTime,on.Open,on.High,on.Low,on.Close,on.Volume,on.Change],rs=[on.DateTime,on.Open,on.High,on.Low,on.Close,on.Volume,on.OpenInterest,on.Change],ss=[on.Symbol,on.DateTime,on.Open,on.High,on.Low,on.Close,on.Volume,on.OpenInterest,on.Change];function os(t,e){const i=kt(t),n=e.isMultiContract;return e.isTick?is:e.isIntraday||!i&&!n?ns:n?ss:rs}function as(t,e){yt(2,arguments);var i=vt(t),n=vt(e);return i.getTime()<n.getTime()}function ls(t,e){yt(2,arguments);var i=vt(t),n=vt(e);return i.getTime()===n.getTime()}function cs(t,e,i){return(i=i||[]).length>=e?t.apply(null,i.slice(0,e).reverse()):function(){var n=Array.prototype.slice.call(arguments);return cs(t,e,i.concat(n))}}var us=cs((function(t,e){yt(2,arguments);var i=At(e);return hr(t,1e3*i)}),2);var hs=cs((function(t,e){yt(2,arguments);var i=At(e);return hr(t,6e4*i)}),2);function ds(t,e){yt(2,arguments);var i=vt(t),n=At(e);return isNaN(n)?new Date(NaN):n?(i.setDate(i.getDate()+n),i):i}var ps=cs(ds,2);var fs=cs((function(t,e){yt(2,arguments);var i=At(e),n=7*i;return ds(t,n)}),2),ms=cs(wt,2);var gs=cs((function(t,e){yt(2,arguments);var i=At(e),n=3*i;return wt(t,n)}),2),ys=cs(Ct,2),vs=cs($r,2);function Ts(t){return t.size-1}class bs{constructor(t){this.container=t}process(t){const e=this.container.size>0?this.container.getLastDataPoint(on.Last):null,i=this.container.getLastDataPoint(on.DateTime);let n=t.time;return void 0!==i&&n<=i&&(n=hr(i,1)),this.container.addDataPoint(on.DateTime,n),this.container.addDataPoint(on.Last,t.tradePrice),this.container.addDataPoint(on.TradeSize,t.tradeSize),this.container.addDataPoint(on.Change,K(e)?t.tradePrice-e:null),{isUpdate:!1,time:n.getTime(),index:Ts(this.container)}}}class Ss{constructor(t,e){this.processRetrieved(t,e)}processRetrieved(t,e){this.container=new Qr(os(e,new Gi(u.Intraday,5)));const i=t=>({high:t.high,low:t.low});let n={},r=0,s=0;for(let e=0;e<t.size;e++){const o={date:t.getData(on.DateTime)[e],high:t.getData(on.High)[e],low:t.getData(on.Low)[e],close:t.getData(on.Close)[e],open:t.getData(on.Open)[e],volume:t.getData(on.Volume)[e]};0===e&&(s=o.close,r=o.open),n.from||(n.high=o.high,n.low=o.low,n.from=e,n.date=o.date),n.volume=(n.volume||0)+o.volume;const a=s-i(o).high,l=s-i(o).low,c=r-i(o).high,u=r-i(o).low,h=Math.min(Math.abs(a),Math.abs(l),Math.abs(c),Math.abs(u));n.high=Math.max(n.high,o.high),n.low=Math.min(n.low,o.low);const d=Math.floor(h/5);if(n.open=Math.abs(a)<Math.abs(c)||Math.abs(l)<Math.abs(u)?s:r,d>=1){for(let t=0;t<d;t++)n.close=n.open<i(o).high?n.open+5:n.open-5,n.to=e,this.addToContainer(n),s=n.close,r=n.open,n={high:n.high,low:n.low,open:n.close,from:e,date:o.date},n.volume=(n.volume||0)+o.volume;n={}}else e===t.size-1&&(n.close=n.close>n.open>0?i(o).high:i(o).low,n.to=e,n.date=o.date,this.addToContainer(n))}}process(t){const{tradePrice:e,tradeSize:i,time:n}=t;return{isUpdate:!1,time:n,index:0}}addToContainer(t){this.container.addDataPoint(on.DateTime,t.date),this.container.addDataPoint(on.Open,t.open),this.container.addDataPoint(on.Close,t.close),this.container.addDataPoint(on.High,t.high),this.container.addDataPoint(on.Low,t.low),this.container.addDataPoint(on.Volume,t.volume)}}class Ps{constructor(t,e,i){this.agg=e,this.processRetrieved(t,i)}processRetrieved(t,e){if(this.agg.unit===u.Tick&&this.agg.spec!==h.None)switch(this.container=new Qr(os(e,new Gi(u.Intraday,5))),this.agg.spec){case h.PerSeconds:for(let e=0;e<t.size;e++){const i={time:t.getData(on.DateTime)[e],tradeSize:t.getData(on.TradeSize)[e],tradePrice:t.getData(on.Last)[e]};this.process(i)}break;case h.PerCount:case h.PerVolume:case h.PerRange:default:throw new Error(\"Custom tick aggregation \".concat(this.agg.describe(),\" has not been implemented yet\"))}else this.container=t}isSameBar(t,e,i){switch(this.agg.unit){case u.Tick:case u.Intraday:return as(e,i(t));case u.Day:return bt(t,e);case u.Week:return Ni(t,e);case u.Month:return Ri(t,e);case u.Quarter:return ki(t,e);case u.Year:return _i(t,e);default:throw new Error(\"Unexpected aggregation unit \".concat(u[this.agg.unit]))}}getBarDurationAdder(){switch(this.agg.unit){case u.Tick:return us(this.agg.size);case u.Intraday:return hs(this.agg.size);case u.Day:return ps(1);case u.Week:return fs(1);case u.Month:return ms(1);case u.Quarter:return gs(1);case u.Year:return ys(1);default:throw new Error(\"Unexpected aggregation unit \".concat(u[this.agg.unit]))}}getPosition(t){if(0===this.container.size){const e=t.time;return{lastTimeStamp:null,newTimestamp:e,nextTimestamp:e,isUpdate:!1}}const e=this.container.getLastDataPoint(on.DateTime),i=t.time;if(as(i,e))throw new Error(\"Currently not handling data corrections (updates of the past historical data)\");const n=this.getBarDurationAdder();let r=e;for(;!this.isSameBar(r,i,n);)r=n(r);return{lastTimestamp:e,newTimestamp:i,nextTimestamp:r,isUpdate:ls(r,e)}}addBar(t,e){const{nextTimestamp:i}=e,n=this.container.size>0?this.container.getLastDataPoint(on.Close):null;return this.container.addDataPoint(on.DateTime,i),this.container.addDataPoint(on.Open,t.tradePrice),this.container.addDataPoint(on.High,t.tradePrice),this.container.addDataPoint(on.Low,t.tradePrice),this.container.addDataPoint(on.Close,t.tradePrice),this.container.addDataPoint(on.Change,K(n)?t.tradePrice-n:null),this.container.addDataPoint(on.Volume,t.tradeSize),this.container.hasField(on.OpenInterest)&&this.container.addDataPoint(on.OpenInterest,null),{isUpdate:!1,time:i.getTime(),index:Ts(this.container)}}updateLastBar(t,e,i,n){if(K(t)&&t>this.container.getLastDataPoint(on.High)&&this.container.setLastDataPoint(on.High,t),K(e)&&e<this.container.getLastDataPoint(on.Low)&&this.container.setLastDataPoint(on.Low,e),K(i)){this.container.setLastDataPoint(on.Close,i);const t=this.container.getData(on.Close)[this.container.size-2];this.container.setLastDataPoint(on.Change,i-t)}if(K(n)){const t=this.container.getLastDataPoint(on.Volume)+n;this.container.setLastDataPoint(on.Volume,t)}}changeLastBar(t,e){const{lastTimestamp:i}=e,n=t.tradePrice;return this.updateLastBar(n,n,n,t.tradeSize),{isUpdate:!0,time:i.getTime(),index:this.lastBarIndex}}process(t){const e=this.getPosition(t),i=vs(te.DEBUG_TIME_FORMAT);return e.isUpdate?(t.symbol===te.DEBUG_SYMBOL&&console.log(\"Adding \".concat(this.agg.describe(),\" Bar\\n\")+\"Bars %cnot same %c\".concat(i(e.lastTimestamp),\" < \").concat(i(e.newTimestamp),\" %cnext is %c\").concat(i(e.nextTimestamp)),\"color:#f00\",\"color:#f96\",\"\",\"color:#fff\"),this.changeLastBar(t,e)):K(t.tradePrice)?(t.symbol===te.DEBUG_SYMBOL&&console.log(\"Updating \".concat(this.agg.describe(),\" Bar\\n\")+\"Bars %csame %c\".concat(i(e.lastTimestamp),\" == \").concat(i(e.newTimestamp)),\"color:#0f0\",\"color:#f96\"),this.addBar(t,e)):null}alignToQuote(t){if(K(t.lastPrice,t.time))return this.updateLastBar(t.highPrice,t.lowPrice,t.lastPrice,null),{isUpdate:!0,time:t.time.getTime(),index:this.lastBarIndex}}}function As(t,e){if(null==t)throw new TypeError(\"assign requires that input parameter not be null or undefined\");for(var i in e=e||{})e.hasOwnProperty(i)&&(t[i]=e[i]);return t}function ws(t,e,i){yt(2,arguments);var n=i||{},r=n.locale,s=r&&r.options&&r.options.weekStartsOn,o=null==s?0:At(s),a=null==n.weekStartsOn?o:At(n.weekStartsOn);if(!(a>=0&&a<=6))throw new RangeError(\"weekStartsOn must be between 0 and 6 inclusively\");var l=vt(t),c=At(e),u=l.getUTCDay(),h=c%7,d=(h+7)%7,p=(d<a?7:0)+c-u;return l.setUTCDate(l.getUTCDate()+p),l}var Cs=/^(1[0-2]|0?\\d)/,xs=/^(3[0-1]|[0-2]?\\d)/,Ms=/^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/,Es=/^(5[0-3]|[0-4]?\\d)/,Os=/^(2[0-3]|[0-1]?\\d)/,Ds=/^(2[0-4]|[0-1]?\\d)/,Ls=/^(1[0-1]|0?\\d)/,_s=/^(1[0-2]|0?\\d)/,Is=/^[0-5]?\\d/,Ns=/^[0-5]?\\d/,Rs=/^\\d/,Hs=/^\\d{1,2}/,ks=/^\\d{1,3}/,Fs=/^\\d{1,4}/,Us=/^-?\\d+/,Bs=/^-?\\d/,Vs=/^-?\\d{1,2}/,Ws=/^-?\\d{1,3}/,js=/^-?\\d{1,4}/,Gs=/^([+-])(\\d{2})(\\d{2})?|Z/,zs=/^([+-])(\\d{2})(\\d{2})|Z/,Ys=/^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,qs=/^([+-])(\\d{2}):(\\d{2})|Z/,$s=/^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/;function Xs(t,e,i){var n=e.match(t);if(!n)return null;var r=parseInt(n[0],10);return{value:i?i(r):r,rest:e.slice(n[0].length)}}function Ks(t,e){var i=e.match(t);return i?\"Z\"===i[0]?{value:0,rest:e.slice(1)}:{value:(\"+\"===i[1]?1:-1)*(36e5*(i[2]?parseInt(i[2],10):0)+6e4*(i[3]?parseInt(i[3],10):0)+1e3*(i[5]?parseInt(i[5],10):0)),rest:e.slice(i[0].length)}:null}function Zs(t,e){return Xs(Us,t,e)}function Js(t,e,i){switch(t){case 1:return Xs(Rs,e,i);case 2:return Xs(Hs,e,i);case 3:return Xs(ks,e,i);case 4:return Xs(Fs,e,i);default:return Xs(new RegExp(\"^\\\\d{1,\"+t+\"}\"),e,i)}}function Qs(t,e,i){switch(t){case 1:return Xs(Bs,e,i);case 2:return Xs(Vs,e,i);case 3:return Xs(Ws,e,i);case 4:return Xs(js,e,i);default:return Xs(new RegExp(\"^-?\\\\d{1,\"+t+\"}\"),e,i)}}function to(t){switch(t){case\"morning\":return 4;case\"evening\":return 17;case\"pm\":case\"noon\":case\"afternoon\":return 12;case\"am\":case\"midnight\":case\"night\":default:return 0}}function eo(t,e){var i,n=e>0,r=n?e:1-e;if(r<=50)i=t||100;else{var s=r+50;i=t+100*Math.floor(s/100)-(t>=s%100?100:0)}return n?i:1-i}var io=[31,28,31,30,31,30,31,31,30,31,30,31],no=[31,29,31,30,31,30,31,31,30,31,30,31];function ro(t){return t%400==0||t%4==0&&t%100!=0}var so={G:{priority:140,parse:function(t,e,i,n){switch(e){case\"G\":case\"GG\":case\"GGG\":return i.era(t,{width:\"abbreviated\"})||i.era(t,{width:\"narrow\"});case\"GGGGG\":return i.era(t,{width:\"narrow\"});case\"GGGG\":default:return i.era(t,{width:\"wide\"})||i.era(t,{width:\"abbreviated\"})||i.era(t,{width:\"narrow\"})}},set:function(t,e,i,n){return e.era=i,t.setUTCFullYear(i,0,1),t.setUTCHours(0,0,0,0),t},incompatibleTokens:[\"R\",\"u\",\"t\",\"T\"]},y:{priority:130,parse:function(t,e,i,n){var r=function(t){return{year:t,isTwoDigitYear:\"yy\"===e}};switch(e){case\"y\":return Js(4,t,r);case\"yo\":return i.ordinalNumber(t,{unit:\"year\",valueCallback:r});default:return Js(e.length,t,r)}},validate:function(t,e,i){return e.isTwoDigitYear||e.year>0},set:function(t,e,i,n){var r=t.getUTCFullYear();if(i.isTwoDigitYear){var s=eo(i.year,r);return t.setUTCFullYear(s,0,1),t.setUTCHours(0,0,0,0),t}var o=\"era\"in e&&1!==e.era?1-i.year:i.year;return t.setUTCFullYear(o,0,1),t.setUTCHours(0,0,0,0),t},incompatibleTokens:[\"Y\",\"R\",\"u\",\"w\",\"I\",\"i\",\"e\",\"c\",\"t\",\"T\"]},Y:{priority:130,parse:function(t,e,i,n){var r=function(t){return{year:t,isTwoDigitYear:\"YY\"===e}};switch(e){case\"Y\":return Js(4,t,r);case\"Yo\":return i.ordinalNumber(t,{unit:\"year\",valueCallback:r});default:return Js(e.length,t,r)}},validate:function(t,e,i){return e.isTwoDigitYear||e.year>0},set:function(t,e,i,n){var r=br(t,n);if(i.isTwoDigitYear){var s=eo(i.year,r);return t.setUTCFullYear(s,0,n.firstWeekContainsDate),t.setUTCHours(0,0,0,0),Tr(t,n)}var o=\"era\"in e&&1!==e.era?1-i.year:i.year;return t.setUTCFullYear(o,0,n.firstWeekContainsDate),t.setUTCHours(0,0,0,0),Tr(t,n)},incompatibleTokens:[\"y\",\"R\",\"u\",\"Q\",\"q\",\"M\",\"L\",\"I\",\"d\",\"D\",\"i\",\"t\",\"T\"]},R:{priority:130,parse:function(t,e,i,n){return Qs(\"R\"===e?4:e.length,t)},set:function(t,e,i,n){var r=new Date(0);return r.setUTCFullYear(i,0,4),r.setUTCHours(0,0,0,0),mr(r)},incompatibleTokens:[\"G\",\"y\",\"Y\",\"u\",\"Q\",\"q\",\"M\",\"L\",\"w\",\"d\",\"D\",\"e\",\"c\",\"t\",\"T\"]},u:{priority:130,parse:function(t,e,i,n){return Qs(\"u\"===e?4:e.length,t)},set:function(t,e,i,n){return t.setUTCFullYear(i,0,1),t.setUTCHours(0,0,0,0),t},incompatibleTokens:[\"G\",\"y\",\"Y\",\"R\",\"w\",\"I\",\"i\",\"e\",\"c\",\"t\",\"T\"]},Q:{priority:120,parse:function(t,e,i,n){switch(e){case\"Q\":case\"QQ\":return Js(e.length,t);case\"Qo\":return i.ordinalNumber(t,{unit:\"quarter\"});case\"QQQ\":return i.quarter(t,{width:\"abbreviated\",context:\"formatting\"})||i.quarter(t,{width:\"narrow\",context:\"formatting\"});case\"QQQQQ\":return i.quarter(t,{width:\"narrow\",context:\"formatting\"});case\"QQQQ\":default:return i.quarter(t,{width:\"wide\",context:\"formatting\"})||i.quarter(t,{width:\"abbreviated\",context:\"formatting\"})||i.quarter(t,{width:\"narrow\",context:\"formatting\"})}},validate:function(t,e,i){return e>=1&&e<=4},set:function(t,e,i,n){return t.setUTCMonth(3*(i-1),1),t.setUTCHours(0,0,0,0),t},incompatibleTokens:[\"Y\",\"R\",\"q\",\"M\",\"L\",\"w\",\"I\",\"d\",\"D\",\"i\",\"e\",\"c\",\"t\",\"T\"]},q:{priority:120,parse:function(t,e,i,n){switch(e){case\"q\":case\"qq\":return Js(e.length,t);case\"qo\":return i.ordinalNumber(t,{unit:\"quarter\"});case\"qqq\":return i.quarter(t,{width:\"abbreviated\",context:\"standalone\"})||i.quarter(t,{width:\"narrow\",context:\"standalone\"});case\"qqqqq\":return i.quarter(t,{width:\"narrow\",context:\"standalone\"});case\"qqqq\":default:return i.quarter(t,{width:\"wide\",context:\"standalone\"})||i.quarter(t,{width:\"abbreviated\",context:\"standalone\"})||i.quarter(t,{width:\"narrow\",context:\"standalone\"})}},validate:function(t,e,i){return e>=1&&e<=4},set:function(t,e,i,n){return t.setUTCMonth(3*(i-1),1),t.setUTCHours(0,0,0,0),t},incompatibleTokens:[\"Y\",\"R\",\"Q\",\"M\",\"L\",\"w\",\"I\",\"d\",\"D\",\"i\",\"e\",\"c\",\"t\",\"T\"]},M:{priority:110,parse:function(t,e,i,n){var r=function(t){return t-1};switch(e){case\"M\":return Xs(Cs,t,r);case\"MM\":return Js(2,t,r);case\"Mo\":return i.ordinalNumber(t,{unit:\"month\",valueCallback:r});case\"MMM\":return i.month(t,{width:\"abbreviated\",context:\"formatting\"})||i.month(t,{width:\"narrow\",context:\"formatting\"});case\"MMMMM\":return i.month(t,{width:\"narrow\",context:\"formatting\"});case\"MMMM\":default:return i.month(t,{width:\"wide\",context:\"formatting\"})||i.month(t,{width:\"abbreviated\",context:\"formatting\"})||i.month(t,{width:\"narrow\",context:\"formatting\"})}},validate:function(t,e,i){return e>=0&&e<=11},set:function(t,e,i,n){return t.setUTCMonth(i,1),t.setUTCHours(0,0,0,0),t},incompatibleTokens:[\"Y\",\"R\",\"q\",\"Q\",\"L\",\"w\",\"I\",\"D\",\"i\",\"e\",\"c\",\"t\",\"T\"]},L:{priority:110,parse:function(t,e,i,n){var r=function(t){return t-1};switch(e){case\"L\":return Xs(Cs,t,r);case\"LL\":return Js(2,t,r);case\"Lo\":return i.ordinalNumber(t,{unit:\"month\",valueCallback:r});case\"LLL\":return i.month(t,{width:\"abbreviated\",context:\"standalone\"})||i.month(t,{width:\"narrow\",context:\"standalone\"});case\"LLLLL\":return i.month(t,{width:\"narrow\",context:\"standalone\"});case\"LLLL\":default:return i.month(t,{width:\"wide\",context:\"standalone\"})||i.month(t,{width:\"abbreviated\",context:\"standalone\"})||i.month(t,{width:\"narrow\",context:\"standalone\"})}},validate:function(t,e,i){return e>=0&&e<=11},set:function(t,e,i,n){return t.setUTCMonth(i,1),t.setUTCHours(0,0,0,0),t},incompatibleTokens:[\"Y\",\"R\",\"q\",\"Q\",\"M\",\"w\",\"I\",\"D\",\"i\",\"e\",\"c\",\"t\",\"T\"]},w:{priority:100,parse:function(t,e,i,n){switch(e){case\"w\":return Xs(Es,t);case\"wo\":return i.ordinalNumber(t,{unit:\"week\"});default:return Js(e.length,t)}},validate:function(t,e,i){return e>=1&&e<=53},set:function(t,e,i,n){return Tr(function(t,e,i){yt(2,arguments);var n=vt(t),r=At(e),s=Pr(n,i)-r;return n.setUTCDate(n.getUTCDate()-7*s),n}(t,i,n),n)},incompatibleTokens:[\"y\",\"R\",\"u\",\"q\",\"Q\",\"M\",\"L\",\"I\",\"d\",\"D\",\"i\",\"t\",\"T\"]},I:{priority:100,parse:function(t,e,i,n){switch(e){case\"I\":return Xs(Es,t);case\"Io\":return i.ordinalNumber(t,{unit:\"week\"});default:return Js(e.length,t)}},validate:function(t,e,i){return e>=1&&e<=53},set:function(t,e,i,n){return mr(function(t,e){yt(2,arguments);var i=vt(t),n=At(e),r=vr(i)-n;return i.setUTCDate(i.getUTCDate()-7*r),i}(t,i,n),n)},incompatibleTokens:[\"y\",\"Y\",\"u\",\"q\",\"Q\",\"M\",\"L\",\"w\",\"d\",\"D\",\"e\",\"c\",\"t\",\"T\"]},d:{priority:90,parse:function(t,e,i,n){switch(e){case\"d\":return Xs(xs,t);case\"do\":return i.ordinalNumber(t,{unit:\"date\"});default:return Js(e.length,t)}},validate:function(t,e,i){var n=ro(t.getUTCFullYear()),r=t.getUTCMonth();return n?e>=1&&e<=no[r]:e>=1&&e<=io[r]},set:function(t,e,i,n){return t.setUTCDate(i),t.setUTCHours(0,0,0,0),t},incompatibleTokens:[\"Y\",\"R\",\"q\",\"Q\",\"w\",\"I\",\"D\",\"i\",\"e\",\"c\",\"t\",\"T\"]},D:{priority:90,parse:function(t,e,i,n){switch(e){case\"D\":case\"DD\":return Xs(Ms,t);case\"Do\":return i.ordinalNumber(t,{unit:\"date\"});default:return Js(e.length,t)}},validate:function(t,e,i){return ro(t.getUTCFullYear())?e>=1&&e<=366:e>=1&&e<=365},set:function(t,e,i,n){return t.setUTCMonth(0,i),t.setUTCHours(0,0,0,0),t},incompatibleTokens:[\"Y\",\"R\",\"q\",\"Q\",\"M\",\"L\",\"w\",\"I\",\"d\",\"E\",\"i\",\"e\",\"c\",\"t\",\"T\"]},E:{priority:90,parse:function(t,e,i,n){switch(e){case\"E\":case\"EE\":case\"EEE\":return i.day(t,{width:\"abbreviated\",context:\"formatting\"})||i.day(t,{width:\"short\",context:\"formatting\"})||i.day(t,{width:\"narrow\",context:\"formatting\"});case\"EEEEE\":return i.day(t,{width:\"narrow\",context:\"formatting\"});case\"EEEEEE\":return i.day(t,{width:\"short\",context:\"formatting\"})||i.day(t,{width:\"narrow\",context:\"formatting\"});case\"EEEE\":default:return i.day(t,{width:\"wide\",context:\"formatting\"})||i.day(t,{width:\"abbreviated\",context:\"formatting\"})||i.day(t,{width:\"short\",context:\"formatting\"})||i.day(t,{width:\"narrow\",context:\"formatting\"})}},validate:function(t,e,i){return e>=0&&e<=6},set:function(t,e,i,n){return(t=ws(t,i,n)).setUTCHours(0,0,0,0),t},incompatibleTokens:[\"D\",\"i\",\"e\",\"c\",\"t\",\"T\"]},e:{priority:90,parse:function(t,e,i,n){var r=function(t){var e=7*Math.floor((t-1)/7);return(t+n.weekStartsOn+6)%7+e};switch(e){case\"e\":case\"ee\":return Js(e.length,t,r);case\"eo\":return i.ordinalNumber(t,{unit:\"day\",valueCallback:r});case\"eee\":return i.day(t,{width:\"abbreviated\",context:\"formatting\"})||i.day(t,{width:\"short\",context:\"formatting\"})||i.day(t,{width:\"narrow\",context:\"formatting\"});case\"eeeee\":return i.day(t,{width:\"narrow\",context:\"formatting\"});case\"eeeeee\":return i.day(t,{width:\"short\",context:\"formatting\"})||i.day(t,{width:\"narrow\",context:\"formatting\"});case\"eeee\":default:return i.day(t,{width:\"wide\",context:\"formatting\"})||i.day(t,{width:\"abbreviated\",context:\"formatting\"})||i.day(t,{width:\"short\",context:\"formatting\"})||i.day(t,{width:\"narrow\",context:\"formatting\"})}},validate:function(t,e,i){return e>=0&&e<=6},set:function(t,e,i,n){return(t=ws(t,i,n)).setUTCHours(0,0,0,0),t},incompatibleTokens:[\"y\",\"R\",\"u\",\"q\",\"Q\",\"M\",\"L\",\"I\",\"d\",\"D\",\"E\",\"i\",\"c\",\"t\",\"T\"]},c:{priority:90,parse:function(t,e,i,n){var r=function(t){var e=7*Math.floor((t-1)/7);return(t+n.weekStartsOn+6)%7+e};switch(e){case\"c\":case\"cc\":return Js(e.length,t,r);case\"co\":return i.ordinalNumber(t,{unit:\"day\",valueCallback:r});case\"ccc\":return i.day(t,{width:\"abbreviated\",context:\"standalone\"})||i.day(t,{width:\"short\",context:\"standalone\"})||i.day(t,{width:\"narrow\",context:\"standalone\"});case\"ccccc\":return i.day(t,{width:\"narrow\",context:\"standalone\"});case\"cccccc\":return i.day(t,{width:\"short\",context:\"standalone\"})||i.day(t,{width:\"narrow\",context:\"standalone\"});case\"cccc\":default:return i.day(t,{width:\"wide\",context:\"standalone\"})||i.day(t,{width:\"abbreviated\",context:\"standalone\"})||i.day(t,{width:\"short\",context:\"standalone\"})||i.day(t,{width:\"narrow\",context:\"standalone\"})}},validate:function(t,e,i){return e>=0&&e<=6},set:function(t,e,i,n){return(t=ws(t,i,n)).setUTCHours(0,0,0,0),t},incompatibleTokens:[\"y\",\"R\",\"u\",\"q\",\"Q\",\"M\",\"L\",\"I\",\"d\",\"D\",\"E\",\"i\",\"e\",\"t\",\"T\"]},i:{priority:90,parse:function(t,e,i,n){var r=function(t){return 0===t?7:t};switch(e){case\"i\":case\"ii\":return Js(e.length,t);case\"io\":return i.ordinalNumber(t,{unit:\"day\"});case\"iii\":return i.day(t,{width:\"abbreviated\",context:\"formatting\",valueCallback:r})||i.day(t,{width:\"short\",context:\"formatting\",valueCallback:r})||i.day(t,{width:\"narrow\",context:\"formatting\",valueCallback:r});case\"iiiii\":return i.day(t,{width:\"narrow\",context:\"formatting\",valueCallback:r});case\"iiiiii\":return i.day(t,{width:\"short\",context:\"formatting\",valueCallback:r})||i.day(t,{width:\"narrow\",context:\"formatting\",valueCallback:r});case\"iiii\":default:return i.day(t,{width:\"wide\",context:\"formatting\",valueCallback:r})||i.day(t,{width:\"abbreviated\",context:\"formatting\",valueCallback:r})||i.day(t,{width:\"short\",context:\"formatting\",valueCallback:r})||i.day(t,{width:\"narrow\",context:\"formatting\",valueCallback:r})}},validate:function(t,e,i){return e>=1&&e<=7},set:function(t,e,i,n){return(t=function(t,e){yt(2,arguments);var i=At(e);i%7==0&&(i-=7);var n=1,r=vt(t),s=r.getUTCDay(),o=i%7,a=(o+7)%7,l=(a<n?7:0)+i-s;return r.setUTCDate(r.getUTCDate()+l),r}(t,i,n)).setUTCHours(0,0,0,0),t},incompatibleTokens:[\"y\",\"Y\",\"u\",\"q\",\"Q\",\"M\",\"L\",\"w\",\"d\",\"D\",\"E\",\"e\",\"c\",\"t\",\"T\"]},a:{priority:80,parse:function(t,e,i,n){switch(e){case\"a\":case\"aa\":case\"aaa\":return i.dayPeriod(t,{width:\"abbreviated\",context:\"formatting\"})||i.dayPeriod(t,{width:\"narrow\",context:\"formatting\"});case\"aaaaa\":return i.dayPeriod(t,{width:\"narrow\",context:\"formatting\"});case\"aaaa\":default:return i.dayPeriod(t,{width:\"wide\",context:\"formatting\"})||i.dayPeriod(t,{width:\"abbreviated\",context:\"formatting\"})||i.dayPeriod(t,{width:\"narrow\",context:\"formatting\"})}},set:function(t,e,i,n){return t.setUTCHours(to(i),0,0,0),t},incompatibleTokens:[\"b\",\"B\",\"H\",\"K\",\"k\",\"t\",\"T\"]},b:{priority:80,parse:function(t,e,i,n){switch(e){case\"b\":case\"bb\":case\"bbb\":return i.dayPeriod(t,{width:\"abbreviated\",context:\"formatting\"})||i.dayPeriod(t,{width:\"narrow\",context:\"formatting\"});case\"bbbbb\":return i.dayPeriod(t,{width:\"narrow\",context:\"formatting\"});case\"bbbb\":default:return i.dayPeriod(t,{width:\"wide\",context:\"formatting\"})||i.dayPeriod(t,{width:\"abbreviated\",context:\"formatting\"})||i.dayPeriod(t,{width:\"narrow\",context:\"formatting\"})}},set:function(t,e,i,n){return t.setUTCHours(to(i),0,0,0),t},incompatibleTokens:[\"a\",\"B\",\"H\",\"K\",\"k\",\"t\",\"T\"]},B:{priority:80,parse:function(t,e,i,n){switch(e){case\"B\":case\"BB\":case\"BBB\":return i.dayPeriod(t,{width:\"abbreviated\",context:\"formatting\"})||i.dayPeriod(t,{width:\"narrow\",context:\"formatting\"});case\"BBBBB\":return i.dayPeriod(t,{width:\"narrow\",context:\"formatting\"});case\"BBBB\":default:return i.dayPeriod(t,{width:\"wide\",context:\"formatting\"})||i.dayPeriod(t,{width:\"abbreviated\",context:\"formatting\"})||i.dayPeriod(t,{width:\"narrow\",context:\"formatting\"})}},set:function(t,e,i,n){return t.setUTCHours(to(i),0,0,0),t},incompatibleTokens:[\"a\",\"b\",\"t\",\"T\"]},h:{priority:70,parse:function(t,e,i,n){switch(e){case\"h\":return Xs(_s,t);case\"ho\":return i.ordinalNumber(t,{unit:\"hour\"});default:return Js(e.length,t)}},validate:function(t,e,i){return e>=1&&e<=12},set:function(t,e,i,n){var r=t.getUTCHours()>=12;return r&&i<12?t.setUTCHours(i+12,0,0,0):r||12!==i?t.setUTCHours(i,0,0,0):t.setUTCHours(0,0,0,0),t},incompatibleTokens:[\"H\",\"K\",\"k\",\"t\",\"T\"]},H:{priority:70,parse:function(t,e,i,n){switch(e){case\"H\":return Xs(Os,t);case\"Ho\":return i.ordinalNumber(t,{unit:\"hour\"});default:return Js(e.length,t)}},validate:function(t,e,i){return e>=0&&e<=23},set:function(t,e,i,n){return t.setUTCHours(i,0,0,0),t},incompatibleTokens:[\"a\",\"b\",\"h\",\"K\",\"k\",\"t\",\"T\"]},K:{priority:70,parse:function(t,e,i,n){switch(e){case\"K\":return Xs(Ls,t);case\"Ko\":return i.ordinalNumber(t,{unit:\"hour\"});default:return Js(e.length,t)}},validate:function(t,e,i){return e>=0&&e<=11},set:function(t,e,i,n){return t.getUTCHours()>=12&&i<12?t.setUTCHours(i+12,0,0,0):t.setUTCHours(i,0,0,0),t},incompatibleTokens:[\"a\",\"b\",\"h\",\"H\",\"k\",\"t\",\"T\"]},k:{priority:70,parse:function(t,e,i,n){switch(e){case\"k\":return Xs(Ds,t);case\"ko\":return i.ordinalNumber(t,{unit:\"hour\"});default:return Js(e.length,t)}},validate:function(t,e,i){return e>=1&&e<=24},set:function(t,e,i,n){var r=i<=24?i%24:i;return t.setUTCHours(r,0,0,0),t},incompatibleTokens:[\"a\",\"b\",\"h\",\"H\",\"K\",\"t\",\"T\"]},m:{priority:60,parse:function(t,e,i,n){switch(e){case\"m\":return Xs(Is,t);case\"mo\":return i.ordinalNumber(t,{unit:\"minute\"});default:return Js(e.length,t)}},validate:function(t,e,i){return e>=0&&e<=59},set:function(t,e,i,n){return t.setUTCMinutes(i,0,0),t},incompatibleTokens:[\"t\",\"T\"]},s:{priority:50,parse:function(t,e,i,n){switch(e){case\"s\":return Xs(Ns,t);case\"so\":return i.ordinalNumber(t,{unit:\"second\"});default:return Js(e.length,t)}},validate:function(t,e,i){return e>=0&&e<=59},set:function(t,e,i,n){return t.setUTCSeconds(i,0),t},incompatibleTokens:[\"t\",\"T\"]},S:{priority:30,parse:function(t,e,i,n){return Js(e.length,t,(function(t){return Math.floor(t*Math.pow(10,3-e.length))}))},set:function(t,e,i,n){return t.setUTCMilliseconds(i),t},incompatibleTokens:[\"t\",\"T\"]},X:{priority:10,parse:function(t,e,i,n){switch(e){case\"X\":return Ks(Gs,t);case\"XX\":return Ks(zs,t);case\"XXXX\":return Ks(Ys,t);case\"XXXXX\":return Ks($s,t);case\"XXX\":default:return Ks(qs,t)}},set:function(t,e,i,n){return e.timestampIsSet?t:new Date(t.getTime()-i)},incompatibleTokens:[\"t\",\"T\",\"x\"]},x:{priority:10,parse:function(t,e,i,n){switch(e){case\"x\":return Ks(Gs,t);case\"xx\":return Ks(zs,t);case\"xxxx\":return Ks(Ys,t);case\"xxxxx\":return Ks($s,t);case\"xxx\":default:return Ks(qs,t)}},set:function(t,e,i,n){return e.timestampIsSet?t:new Date(t.getTime()-i)},incompatibleTokens:[\"t\",\"T\",\"X\"]},t:{priority:40,parse:function(t,e,i,n){return Zs(t)},set:function(t,e,i,n){return[new Date(1e3*i),{timestampIsSet:!0}]},incompatibleTokens:\"*\"},T:{priority:20,parse:function(t,e,i,n){return Zs(t)},set:function(t,e,i,n){return[new Date(i),{timestampIsSet:!0}]},incompatibleTokens:\"*\"}},oo=/[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g,ao=/P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,lo=/^'([^]*?)'?$/,co=/''/g,uo=/\\S/,ho=/[a-zA-Z]/;function po(t,e,i,n){yt(3,arguments);var r=String(t),s=String(e),o=n||{},a=o.locale||ur;if(!a.match)throw new RangeError(\"locale must contain match property\");var l=a.options&&a.options.firstWeekContainsDate,c=null==l?1:At(l),u=null==o.firstWeekContainsDate?c:At(o.firstWeekContainsDate);if(!(u>=1&&u<=7))throw new RangeError(\"firstWeekContainsDate must be between 1 and 7 inclusively\");var h=a.options&&a.options.weekStartsOn,d=null==h?0:At(h),p=null==o.weekStartsOn?d:At(o.weekStartsOn);if(!(p>=0&&p<=6))throw new RangeError(\"weekStartsOn must be between 0 and 6 inclusively\");if(\"\"===s)return\"\"===r?vt(i):new Date(NaN);var f,m={firstWeekContainsDate:u,weekStartsOn:p,locale:a},g=[{priority:10,set:fo,index:0}],y=s.match(ao).map((function(t){var e=t[0];return\"p\"===e||\"P\"===e?(0,Rr[e])(t,a.formatLong,m):t})).join(\"\").match(oo),v=[];for(f=0;f<y.length;f++){var T=y[f];!o.useAdditionalWeekYearTokens&&Vr(T)&&Wr(T),!o.useAdditionalDayOfYearTokens&&Br(T)&&Wr(T);var b=T[0],S=so[b];if(S){var P=S.incompatibleTokens;if(Array.isArray(P)){for(var A=void 0,w=0;w<v.length;w++){var C=v[w].token;if(-1!==P.indexOf(C)||C===b){A=v[w];break}}if(A)throw new RangeError(\"The format string mustn't contain `\".concat(A.fullToken,\"` and `\").concat(T,\"` at the same time\"))}else if(\"*\"===S.incompatibleTokens&&v.length)throw new RangeError(\"The format string mustn't contain `\".concat(T,\"` and any other token at the same time\"));v.push({token:b,fullToken:T});var x=S.parse(r,T,a.match,m);if(!x)return new Date(NaN);g.push({priority:S.priority,set:S.set,validate:S.validate,value:x.value,index:g.length}),r=x.rest}else{if(b.match(ho))throw new RangeError(\"Format string contains an unescaped latin alphabet character `\"+b+\"`\");if(\"''\"===T?T=\"'\":\"'\"===b&&(T=mo(T)),0!==r.indexOf(T))return new Date(NaN);r=r.slice(T.length)}}if(r.length>0&&uo.test(r))return new Date(NaN);var M=g.map((function(t){return t.priority})).sort((function(t,e){return e-t})).filter((function(t,e,i){return i.indexOf(t)===e})).map((function(t){return g.filter((function(e){return e.priority===t})).reverse()})).map((function(t){return t[0]})),E=vt(i);if(isNaN(E))return new Date(NaN);var O=dr(E,kr(E)),D={};for(f=0;f<M.length;f++){var L=M[f];if(L.validate&&!L.validate(O,L.value,m))return new Date(NaN);var _=L.set(O,D,L.value,m);_[0]?(O=_[0],As(D,_[1])):O=_}return O}function fo(t,e){if(e.timestampIsSet)return t;var i=new Date(0);return i.setFullYear(t.getUTCFullYear(),t.getUTCMonth(),t.getUTCDate()),i.setHours(t.getUTCHours(),t.getUTCMinutes(),t.getUTCSeconds(),t.getUTCMilliseconds()),i}function mo(t){return t.match(lo)[1].replace(co,\"'\")}var go=cs(po,3),yo=cs(hr,2);class vo{constructor(t,e,i){this.symbol=t,this.aggregation=e,this.offset=i||0,this.previousTime=new Date(0),this.dateFormat=this.getDateFormat(),this.timeZone=this.getTimeZone(),this.hasOpenInterest=kt(t)}makeContainer(){return new Qr(os(this.symbol,this.aggregation))}parse(t){this.container=this.makeContainer();const e=t.split(\"\\n\"),i=this.getParseFunc();if(null!==i){const t=i.bind(this);e.forEach(e=>{const i=e.trim();if(i){const e=i.split(\",\");t(e)}})}return this.container}getParseFunc(){return this.aggregation.isTick?this.parseTick:this.aggregation.isIntraday?this.parseMinutes:this.parseEod}parseTick(t){const e=t.length-5;0!==e&&1!==e||(this.container.addDataPoint(on.DateTime,this.parseDate(t[0+e])),this.container.addDataPoint(on.Last,parseFloat(t[3+e])),this.container.addDataPoint(on.TradeSize,parseInt(t[4+e])),this.container.addDataPoint(on.Change,this.calculateChange(on.Last)))}nullify(t){return 0===t?null:t}parseMinutes(t){let e=this.symbol.includes(\"*\")?1:0;t.length===7+e&&(this.container.addDataPoint(on.DateTime,this.parseDate(t[0+e])),this.container.addDataPoint(on.Open,parseFloat(t[2+e])),this.container.addDataPoint(on.High,parseFloat(t[3+e])),this.container.addDataPoint(on.Low,parseFloat(t[4+e])),this.container.addDataPoint(on.Close,parseFloat(t[5+e])),this.container.addDataPoint(on.Volume,this.nullify(parseInt(t[6+e]))),this.container.addDataPoint(on.Change,this.calculateChange()))}parseEod(t){const e=this.aggregation.isMultiContract,i=7+(this.hasOpenInterest?1:0);t.length===i&&(e&&this.container.addDataPoint(on.Symbol,t[0]),this.container.addDataPoint(on.DateTime,this.parseDate(t[1])),this.container.addDataPoint(on.Open,parseFloat(t[2])),this.container.addDataPoint(on.High,parseFloat(t[3])),this.container.addDataPoint(on.Low,parseFloat(t[4])),this.container.addDataPoint(on.Close,parseFloat(t[5])),this.container.addDataPoint(on.Volume,this.nullify(parseInt(t[6]))),this.hasOpenInterest&&this.container.addDataPoint(on.OpenInterest,this.nullify(parseInt(t[7]))),this.container.addDataPoint(on.Change,this.calculateChange()))}calculateChange(t=on.Close){const e=this.container.size;if(e>1){const i=this.container.getData(t);return i[e-1]-i[e-2]}return 0}getDateFormat(){switch(this.aggregation.unit){case u.Tick:return te.FMT_HIST_FEED_TICK;case u.Intraday:return te.FMT_HIST_FEED_INTRADAY;default:return te.FMT_ISO_DATE_ONLY}}parseDate(t){const e=go(new Date,this.dateFormat);if(this.aggregation.isEndOfDay)return L(e,ys(this.offset))(t);{const i=e(t);return xt(i,this.previousTime)?this.previousTime=i:this.previousTime=yo(1)(this.previousTime),this.previousTime}}getTimeZone(){return Ft(this.symbol)}}class To{getPageNameFor(t){switch(t.unit){case u.Tick:return te.BARCHART_HIST_SRV_TICKS_PAGE_NAME;case u.Intraday:return t.spec===h.FormT?te.BARCHART_HIST_SRV_FORMT_INTRADAY_PAGE_NAME:te.BARCHART_HIST_SRV_INTRADAY_PAGE_NAME;case u.Day:case u.Week:case u.Month:case u.Quarter:case u.Year:return te.BARCHART_HIST_SRV_EOD_PAGE_NAME;default:return\"\"}}addExtraParams(t){}makeUrl(t){let e={};const i=ae(t.symbol);e.symbol=i;let n=this.getDataParam(t.aggregation);n.length>0&&(e.data=n),t.aggregation.size>1&&t.aggregation.unit===u.Intraday&&(e.interval=t.aggregation.size.toString());const[r,s]=t.range;if(null!==r)e.start=this.toHistoricalFeedDate(r,t.aggregation);else{let i=t.barsToFetch||te.DEFAULT_MAX_RECORDS;t.aggregation.unit===u.Tick&&t.aggregation.spec!==h.None&&(i*=te.TICK_CUSTOM_AGG_MULTIPLIER),e.maxrecords=i.toString()}null!==s&&(e.end=this.toHistoricalFeedDate(s,t.aggregation)),e.volume=t.aggregation.isContractVolume?\"contract\":\"total\",e.order=\"asc\",e.dividends=t.aggregation.dividendsAdjust.toString(),e.backadjust=t.aggregation.backAdjust.toString(),e.daystoexpiration=t.aggregation.daysToExpiration.toString(),e.contractroll=t.aggregation.contractRoll,t.aggregation.isTick&&(e.type=\"T\",e.skipOldEmulation=\"true\"),this.addExtraParams(e);let o=at(e),a=this.getPageNameFor(t.aggregation);return\"/\".concat(a,\"?\").concat(o)}toHistoricalFeedDate(t,e){return $r(t,e.isTick||e.isIntraday?te.FMT_HIST_FEED_PARAM_DATE_TIME:te.FMT_HIST_FEED_PARAM_DATE_ONLY)}getDataParam(t){let e=\"\";const i=this.getSpecPart(t);switch(t.unit){case u.Tick:case u.Intraday:break;case u.Day:e=\"daily\".concat(i);break;case u.Week:e=\"weekly\".concat(i);break;case u.Month:e=\"monthly\".concat(i);break;case u.Quarter:e=\"quarterly\".concat(i);break;case u.Year:e=\"yearly\".concat(i)}return e}getSpecPart(t){return t.isMultiContract?t.spec===h.Continue?\"continue\":\"nearest\":\"\"}getParser(t){const e=ae(t.symbol);return new vo(e,t.aggregation,t.offset)}async retrieve(t){const e=this.makeUrl(t),i=t.aggregation.unit===u.Tick?\"timeseriesNew\":\"timeseries\",n=await Wp(i,e);return this.getParser(t).parse(n)}}class bo{async retrieve(t){const e=ae(t.symbol),i=()=>new Qr(os(e,t.aggregation));if(t.aggregation.unit!==u.Day)return i();const n=\"/getEquityOptionsHistory.json?\".concat(at({symbol:e})),r=await Wp(\"ondemand\",n);try{const t=JSON.parse(r);if(200===t.status.code){const e=t.results,n=i();let r=null;return e.forEach(t=>{n.addDataPoint(on.DateTime,po(t.date,te.FMT_ISO_DATE_ONLY,0)),n.addDataPoint(on.Open,t.open),n.addDataPoint(on.High,t.high),n.addDataPoint(on.Low,t.low),n.addDataPoint(on.Close,t.close),n.addDataPoint(on.Volume,t.volume),n.addDataPoint(on.OpenInterest,t.openInterest);const e=null===r?null:Z(t.close-r,2);n.addDataPoint(on.Change,e),r=t.close}),n}}catch(t){Bp(\"Failed parsing the equity option JSON historical data result, error is \".concat(t.message))}return i()}}var So=i(1),Po=i.n(So);function Ao(t,e){return function(i){if(\"function\"!=typeof t)throw new TypeError(\"argument is not a function. Are you looking for `mapTo()`?\");return i.lift(new wo(t,e))}}var wo=function(){function t(t,e){this.project=t,this.thisArg=e}return t.prototype.call=function(t,e){return e.subscribe(new Co(t,this.project,this.thisArg))},t}(),Co=function(t){function e(e,i,n){var r=t.call(this,e)||this;return r.project=i,r.count=0,r.thisArg=n||r,r}return yn(e,t),e.prototype._next=function(t){var e;try{e=this.project.call(this.thisArg,t,this.count++)}catch(t){return void this.destination.error(t)}this.destination.next(e)},e}(On);var xo=cs((function(t,e){yt(2,arguments);var i=At(e);return ds(t,-i)}),2);class Mo{constructor(t){this.query=t,this.container=null,this.canLoadMoreData=!0,this.alignToQuote=!1,this.record=Yp().getRecordSource().getRecord(t.symbol)}refresh(){this.query.aggregation.isEndOfDay?this.alignToQuote=!0:this.loadMoreData(!1)}makeBuilder(t){const e=this.query.aggregation;if(this.query.curveStyle===c.Renko)return new Ss(t,this.query.symbol);if(!e.isTick)return new Ps(t,e,this.query.symbol);switch(e.spec){case h.None:return new bs(t);case h.PerSeconds:return new Ps(t,e,this.query.symbol);case h.PerCount:case h.PerVolume:case h.PerRange:default:throw new Error(\"Custom tick aggregation \".concat(e.describe(),\" has not been implemented yet\"))}}onStreamingUpdates(t){if(this.isLoading)return;t.map(t=>{if(t.isTrade)return this.builder.process(t);if(t.isQuote&&this.alignToQuote){const e=this.builder.alignToQuote(t);return this.alignToQuote=!1,e}return null}).filter(t=>K(t)).filter((t,e,i)=>{if(0===e)return!0;const n=i[e-1];return n.isUpdate!==t.isUpdate||n.time!==t.time}).forEach(t=>{const e={series:this,index:t.index};Po.a.publish(t.isUpdate?an.TS_DATAPOINTCHANGED:an.TS_DATAPOINTADDED,e)})}get hasData(){return null!==this.container}getRetriever(){return It(this.query.symbol)?new bo:new To}getStreamingSubscription(){return Yp().getRecordSource().subject.pipe(Ao(t=>{const e=this.query.aggregation.isEndOfDay,i=mn(an.RT_TRADE,this.query.symbol),n=t.filter(i).filter(t=>e||\"T\"!==t.data.session).map(t=>{const i={isTrade:!0,tradePrice:t.data.tradePrice,tradeSize:t.data.tradeSize,time:t.data.time};return(t=>e&&\"T\"===t.data.session)(t)&&delete i.tradePrice,i}).reduce((t,e)=>{const i=V(t);var n;return K(i)&&K(i.tradePrice)&&K(e.tradePrice)&&i.tradePrice===e.tradePrice&&i.time.getTime()===e.time.getTime()?i.tradeSize+=e.tradeSize:t.push((n=e,Object.assign({},n))),t},[]),r=mn(an.RT_QUOTE,this.query.symbol);return n.concat(t.filter(r).map(t=>({isQuote:!0,openPrice:t.data.openPrice,highPrice:t.data.highPrice,lowPrice:t.data.lowPrice,lastPrice:t.data.lastPrice,time:t.data.tradeTime})))}),Qn(t=>t.length>0)).subscribe(this.onStreamingUpdates.bind(this))}async loadMoreData(t=!0){if(this.isLoading)return Promise.resolve();this.isLoading=!0,t?await this.loadHeadChunk():await this.loadTailChunk(),this.isLoading=!1}async loadTailChunk(){this.query.range=[this.container.getLastDataPoint(on.DateTime),null];const t=await this.retriver.retrieve(this.query),e=this.container.size,i=this.container.append(t);Po.a.publish(an.TS_MANYCHANGED,{series:this,part:x.Tail,count:i,index:e})}async loadHeadChunk(){this.query.range=[null,this.container.getData(on.DateTime)[0]];const t=await this.retriver.retrieve(this.query);this.canLoadMoreData=t.size===this.query.barsToFetch,t.size>0&&(this.container.prepend(t),Po.a.publish(an.TS_MANYCHANGED,{series:this,part:x.Head}))}async ready(){return Jt.call(this,async()=>{this.retriver=this.getRetriever();const t=await this.retriver.retrieve(this.query);return this.canLoadMoreData=t.size===this.query.barsToFetch,this.builder=this.makeBuilder(t),this.container=this.builder.container,this.query.disableStreamingUpdates||(this.streamingSubscription=this.getStreamingSubscription()),!0})}getCacheableEntities(t){t.add(this)}shutdown(){K(this.streamingSubscription)&&this.streamingSubscription.unsubscribe()}}class Eo{constructor(t){this.query=t,this.container=new ts}get hasData(){return!1}async ready(){return!1}getCacheableEntities(t){}shutdown(){}}class Oo{constructor(t){this.query=t,this.container=null}get hasData(){return null!==this.container}shutdown(){}parseEvents(t){var e=new Qr([on.DateTime,on.Dividends,on.Earnings,on.Splits]);let i=t.split(\"\\n\");const n=(t,i,n,r)=>{const s=i===n?r:null;e.addDataPoint(t,s)};return i.forEach(t=>{if(\"\"===t.trim())return;let i=t.split(\",\");if(4===i.length){var r=po(i[1],te.FMT_ISO_DATE_ONLY,new Date);e.addDataPoint(on.DateTime,r),n(on.Dividends,\"Dividend\",i[2],i[3]),n(on.Earnings,\"Earnings\",i[2],i[3]),n(on.Splits,\"Split\",i[2],i[3])}}),e}makeUrl(){let t={};t.symbols=this.query.symbol,t.start=\"19700102\",t.end=\"20501230\",te.EVENTS_BUILT_IN.forEach(e=>t[e]=this.query[e]);let e=at(t);return\"/queryevents.ashx?\".concat(e)}async retrieve(){const t=this.makeUrl(),e=await Wp(\"timeseries\",t);return this.parseEvents(e)}async ready(){return Jt.call(this,async()=>(this.container=await this.retrieve(),!0))}getCacheableEntities(t){t.add(this)}}class Do{constructor(t){this.query=t,this.container=null}get hasData(){return null!==this.container}parseFundamental(t){let e=JSON.parse(t);if(200!==e.status.code)return null;let i=new Qr(this.query.fields.concat(on.DateTime)),n=this.query.fields[0],r=n.id.substring(0,1).toLowerCase()+n.id.substring(1);return e.results.reverse().forEach(t=>{i.addDataPoint(on.DateTime,po(t.date,te.FMT_ISO_DATE_ONLY,new Date)),i.addDataPoint(n,parseInt(t[r]))}),i}makeUrl(){let t={count:0,rawData:1};t.symbols=this.query.symbol,t.frequency=this.query.aggregation.unit===u.Quarter?\"Quarter\":\"Annual\";let e=at(t),i=this.query.seriesKind===T.BalanceSheet?\"getBalanceSheets\":\"getIncomeStatements\";return\"/\".concat(i,\".json?\").concat(e)}async retrieve(){const t=this.makeUrl(),e=await Wp(\"ondemand\",t);return this.parseFundamental(e)}async ready(){return Jt.call(this,async()=>(this.container=await this.retrieve(),!0))}getCacheableEntities(t){t.add(this)}}function Lo(t,e){const i=t.findIndex(t=>t>e);return Math.max(i<0?t.length-1:i,0)}class _o{constructor(t){this.query=t;const e=Yp().getRecordSource();this.records=t.symbols.reduce((t,i)=>{const n=e.getRecord(i);return n.addFields(on.DateTime,on.Symbol),n.update(on.DateTime,Vt(i)),n.update(on.Symbol,i),t[i]=n,t},{}),this.dataPoints=t.symbols.length,this.container=null,this.fields=[on.DateTime,on.Close,on.Symbol]}get hasData(){return null!==this.container&&this.container.size===this.dataPoints}getStreamingSubscription(){return Yp().getRecordSource().subject.pipe(Qn(t=>t.length>0)).subscribe(this.onStreamingUpdates.bind(this))}onStreamingUpdates(t){t.map(t=>{const e=t.data,i=this.records[e.symbol];return K(i)?this.setDataFor(i):null}).filter(t=>K(t)).reduce((t,e)=>(t.add(e),t),new Set);Po.a.publish(an.TS_MANYCHANGED,{series:this,part:x.Unspecified})}findOrAddIndex(t){let e=this.container.getData(on.Symbol).indexOf(t.symbol);if(e<0){const i=this.container.getData(on.DateTime),n=Vt(t.symbol);e=Lo(i,n),this.fields.forEach(t=>this.container.getData(t).splice(e,0,null))}return e}setDataFor(t,e=!0){if(!this.fields.every(e=>K(t.getValue(e))))return;const i=this.findOrAddIndex(t);return this.fields.forEach(e=>this.container.getData(e)[i]=t.getValue(e)),e?i:null}async retrieve(){const t=Object.values(this.records);return(await Promise.all(t.map(t=>t.ready()))).every(_)&&(this.container=new Qr(this.fields),t.forEach(t=>this.setDataFor(t,!1)),this.streamingSubscription=this.getStreamingSubscription()),this.hasData}async ready(){return Jt.call(this,async()=>await this.retrieve())}getCacheableEntities(t){t.add(this)}shutdown(){K(this.streamingSubscription)&&this.streamingSubscription.unsubscribe()}}class Io{constructor(t){this.query=t,this.fields=[on.DateTime,on.Close,on.Symbol],this.container=null}get hasData(){return null!==this.container}insertValues(t,e,i){const n=(e,i,n)=>t.getData(i).splice(e,0,n),r=t.getData(on.DateTime),s=Vt(e),o=Lo(r,s);n(o,on.DateTime,s),n(o,on.Close,i),n(o,on.Symbol,e)}parseHistoricalForward(t){const e=new Qr(this.fields);return t.split(\"\\n\").filter(t=>t.trim().length>0).forEach(t=>{const i=t.split(\",\"),n=i[0];this.insertValues(e,n,parseFloat(i[5]))}),e}makeUrl(){let t={};t.symbols=this.query.symbols.join(\",\"),t.maxrecords=1,t.data=\"daily\",t.end=L(xo(this.query.offset),vs(te.FMT_HIST_FEED_PARAM_DATE_ONLY))(new Date);let e=at(t);return\"/querylatesteod.ashx?\".concat(e)}async retrieve(){const t=this.makeUrl(),e=await Wp(\"timeseries\",t);return this.parseHistoricalForward(e)}async ready(){return Jt.call(this,async()=>(this.container=await this.retrieve(),!0))}getCacheableEntities(t){t.add(this)}}class No{constructor(t=!1){this.cacheSeries=t,this.seriesCache=new Map}getTimeSeries(t){return K(t.symbol)&&t.symbol===te.PLACEHOLDER_SYMBOL_NAME?new Eo(t):this.getSeries(t)}evictUnused(t){for(const[e,i]of this.seriesCache)t.has(i)||(i.isCached=!1,i.shutdown(),this.seriesCache.delete(e))}refresh(){for(const t of this.seriesCache.values())\"function\"==typeof t.refresh&&t.refresh()}getSeries(t){const e=t.cacheMe||this.cacheSeries,i=t.getHashKey();if(e&&this.seriesCache.has(i))return this.seriesCache.get(i);var n=this.makeSeries(t);return n.isCached=!0,e&&this.seriesCache.set(i,n),n}makeSeries(t){switch(t.seriesKind){case T.Normal:return new Mo(t);case T.BalanceSheet:case T.IncomeStatement:return new Do(t);case T.Events:return new Oo(t);case T.Forward:return new _o(t);case T.HistoricalForward:return new Io(t);default:case T.Study:throw new Error(\"The series kind '\".concat(T[t.seriesKind],\"' is not supported yet.\"))}}}var Ro=i(3),Ho=i.n(Ro),ko={lessThanXSeconds:{one:\"moins d’une seconde\",other:\"moins de {{count}} secondes\"},xSeconds:{one:\"1 seconde\",other:\"{{count}} secondes\"},halfAMinute:\"30 secondes\",lessThanXMinutes:{one:\"moins d’une minute\",other:\"moins de {{count}} minutes\"},xMinutes:{one:\"1 minute\",other:\"{{count}} minutes\"},aboutXHours:{one:\"environ 1 heure\",other:\"environ {{count}} heures\"},xHours:{one:\"1 heure\",other:\"{{count}} heures\"},xDays:{one:\"1 jour\",other:\"{{count}} jours\"},aboutXWeeks:{one:\"environ 1 semaine\",other:\"environ {{count}} semaines\"},xWeeks:{one:\"1 semaine\",other:\"{{count}} semaines\"},aboutXMonths:{one:\"environ 1 mois\",other:\"environ {{count}} mois\"},xMonths:{one:\"1 mois\",other:\"{{count}} mois\"},aboutXYears:{one:\"environ 1 an\",other:\"environ {{count}} ans\"},xYears:{one:\"1 an\",other:\"{{count}} ans\"},overXYears:{one:\"plus d’un an\",other:\"plus de {{count}} ans\"},almostXYears:{one:\"presqu’un an\",other:\"presque {{count}} ans\"}};var Fo={date:rr({formats:{full:\"EEEE d MMMM y\",long:\"d MMMM y\",medium:\"d MMM y\",short:\"dd/MM/y\"},defaultWidth:\"full\"}),time:rr({formats:{full:\"HH:mm:ss zzzz\",long:\"HH:mm:ss z\",medium:\"HH:mm:ss\",short:\"HH:mm\"},defaultWidth:\"full\"}),dateTime:rr({formats:{full:\"{{date}} 'à' {{time}}\",long:\"{{date}} 'à' {{time}}\",medium:\"{{date}}, {{time}}\",short:\"{{date}}, {{time}}\"},defaultWidth:\"full\"})},Uo={lastWeek:\"eeee 'dernier à' p\",yesterday:\"'hier à' p\",today:\"'aujourd’hui à' p\",tomorrow:\"'demain à' p'\",nextWeek:\"eeee 'prochain à' p\",other:\"P\"};var Bo={code:\"fr\",formatDistance:function(t,e,i){var n;return i=i||{},n=\"string\"==typeof ko[t]?ko[t]:1===e?ko[t].one:ko[t].other.replace(\"{{count}}\",e),i.addSuffix?i.comparison>0?\"dans \"+n:\"il y a \"+n:n},formatLong:Fo,formatRelative:function(t,e,i,n){return Uo[t]},localize:{ordinalNumber:function(t,e){var i=Number(t),n=String((e||{}).unit);return 0===i?i:i+(\"year\"===n||\"hour\"===n||\"week\"===n?1===i?\"ère\":\"ème\":1===i?\"er\":\"ème\")},era:ar({values:{narrow:[\"av. J.-C\",\"ap. J.-C\"],abbreviated:[\"av. J.-C\",\"ap. J.-C\"],wide:[\"avant Jésus-Christ\",\"après Jésus-Christ\"]},defaultWidth:\"wide\"}),quarter:ar({values:{narrow:[\"T1\",\"T2\",\"T3\",\"T4\"],abbreviated:[\"1er trim.\",\"2ème trim.\",\"3ème trim.\",\"4ème trim.\"],wide:[\"1er trimestre\",\"2ème trimestre\",\"3ème trimestre\",\"4ème trimestre\"]},defaultWidth:\"wide\",argumentCallback:function(t){return Number(t)-1}}),month:ar({values:{narrow:[\"J\",\"F\",\"M\",\"A\",\"M\",\"J\",\"J\",\"A\",\"S\",\"O\",\"N\",\"D\"],abbreviated:[\"janv.\",\"févr.\",\"mars\",\"avr.\",\"mai\",\"juin\",\"juil.\",\"août\",\"sept.\",\"oct.\",\"nov.\",\"déc.\"],wide:[\"janvier\",\"février\",\"mars\",\"avril\",\"mai\",\"juin\",\"juillet\",\"août\",\"septembre\",\"octobre\",\"novembre\",\"décembre\"]},defaultWidth:\"wide\"}),day:ar({values:{narrow:[\"D\",\"L\",\"M\",\"M\",\"J\",\"V\",\"S\"],short:[\"di\",\"lu\",\"ma\",\"me\",\"je\",\"ve\",\"sa\"],abbreviated:[\"dim.\",\"lun.\",\"mar.\",\"mer.\",\"jeu.\",\"ven.\",\"sam.\"],wide:[\"dimanche\",\"lundi\",\"mardi\",\"mercredi\",\"jeudi\",\"vendredi\",\"samedi\"]},defaultWidth:\"wide\"}),dayPeriod:ar({values:{narrow:{am:\"AM\",pm:\"PM\",midnight:\"minuit\",noon:\"midi\",morning:\"mat.\",afternoon:\"ap.m.\",evening:\"soir\",night:\"mat.\"},abbreviated:{am:\"AM\",pm:\"PM\",midnight:\"minuit\",noon:\"midi\",morning:\"matin\",afternoon:\"après-midi\",evening:\"soir\",night:\"matin\"},wide:{am:\"AM\",pm:\"PM\",midnight:\"minuit\",noon:\"midi\",morning:\"du matin\",afternoon:\"de l’après-midi\",evening:\"du soir\",night:\"du matin\"}},defaultWidth:\"wide\"})},match:{ordinalNumber:lr({matchPattern:/^(\\d+)(ième|ère|ème|er|e)?/i,parsePattern:/\\d+/i,valueCallback:function(t){return parseInt(t,10)}}),era:cr({matchPatterns:{narrow:/^(av\\.J\\.C|ap\\.J\\.C|ap\\.J\\.-C)/i,abbreviated:/^(av\\.J\\.-C|av\\.J-C|apr\\.J\\.-C|apr\\.J-C|ap\\.J-C)/i,wide:/^(avant Jésus-Christ|après Jésus-Christ)/i},defaultMatchWidth:\"wide\",parsePatterns:{any:[/^av/i,/^ap/i]},defaultParseWidth:\"any\"}),quarter:cr({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^t[1234]/i,wide:/^[1234](er|ème|e)? trimestre/i},defaultMatchWidth:\"wide\",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:\"any\",valueCallback:function(t){return t+1}}),month:cr({matchPatterns:{narrow:/^[jfmasond]/i,abbreviated:/^(janv|févr|mars|avr|mai|juin|juill|juil|août|sept|oct|nov|déc)\\.?/i,wide:/^(janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i},defaultMatchWidth:\"wide\",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^av/i,/^ma/i,/^juin/i,/^juil/i,/^ao/i,/^s/i,/^o/i,/^n/i,/^d/i]},defaultParseWidth:\"any\"}),day:cr({matchPatterns:{narrow:/^[lmjvsd]/i,short:/^(di|lu|ma|me|je|ve|sa)/i,abbreviated:/^(dim|lun|mar|mer|jeu|ven|sam)\\.?/i,wide:/^(dimanche|lundi|mardi|mercredi|jeudi|vendredi|samedi)/i},defaultMatchWidth:\"wide\",parsePatterns:{narrow:[/^d/i,/^l/i,/^m/i,/^m/i,/^j/i,/^v/i,/^s/i],any:[/^di/i,/^lu/i,/^ma/i,/^me/i,/^je/i,/^ve/i,/^sa/i]},defaultParseWidth:\"any\"}),dayPeriod:cr({matchPatterns:{narrow:/^(a|p|minuit|midi|mat\\.?|ap\\.?m\\.?|soir|nuit)/i,any:/^([ap]\\.?\\s?m\\.?|du matin|de l'après[-\\s]midi|du soir|de la nuit)/i},defaultMatchWidth:\"any\",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^min/i,noon:/^mid/i,morning:/mat/i,afternoon:/ap/i,evening:/soir/i,night:/nuit/i}},defaultParseWidth:\"any\"})},options:{weekStartsOn:1,firstWeekContainsDate:1}};function Vo(t){yt(1,arguments);var e=vt(t);return e.setMinutes(0,0,0),e}function Wo(t,e){yt(2,arguments);var i=Vo(t),n=Vo(e);return i.getTime()===n.getTime()}function jo(t){yt(1,arguments);var e=vt(t);return e.setSeconds(0,0),e}function Go(t,e){yt(2,arguments);var i=vt(t),n=vt(e);return i.getTime()-n.getTime()}function zo(t){yt(1,arguments);var e=vt(t),i=e.getDay();return i}const Yo=/{value:([^}]+)}/,qo=/%([aAdewbBmyYHkIlMpPSL])+/g,$o={Second:{Period:\"PT1S\",Multipliers:[.01,.02,.05,.1,.2,.5,1,2,5,10,15,30]},Minute:{Period:\"PT1M\",Multipliers:[1,2,5,10,15,30]},Hour:{Period:\"PT1H\",Multipliers:[1,2,3,4,6,8,12]},Day:{Period:\"P1D\",Multipliers:[1,2]},Week:{Period:\"P1W\",Multipliers:[1,2]},Month:{Period:\"P1M\",Multipliers:[1,2,3,4,6]},Year:{Period:\"P1Y\",Multipliers:[1,2,5,10,25,50,100,250]}};const Xo=new Map;function Ko(t){if(!K(t))return null;if(!Xo.has(t)){const i=K(e=t)?e.replace(Yo,(t,e)=>e.replace(qo,(t,e)=>te.PHP_TO_UNICODE_TS_35_MAP[e])):e;Xo.set(t,i)}var e;return Xo.get(t)}class Zo{constructor({barWidth:t,unitWidth:e,formatString:i,minTickInterval:n,duration:r},s){this.size=s,this.barWidth=t,this.unitWidth=e,this.minTickInterval=n,this.duration=r,this.format=Ko(i),this.prevDate=null}get noPrevDate(){return!K(this.prevDate)}formatDate(t,e){return ua(t,this.format||e)}asTick(t,e,i){return this.prevDate=t,{date:t,priority:e,text:this.formatDate(t,i)}}checkPrev(t){return!!this.noPrevDate&&(this.prevDate=t,!0)}}const Jo=()=>function(){switch(ca()){case\"fr\":return!0;default:return!1}}()?\"d LLL\":\"LLL d\";class Qo extends Zo{constructor(t){super(t),this.repeatEach=te.TIME_SCALE_MAX_SPACE_NO_TICKS/this.barWidth,this.repeatCounter=0}asTick(t,e,i){return this.repeatCounter=0,super.asTick(t,e,i)}getTick(t){if(!bt(this.prevDate,t))return this.asTick(t,1,\"EEE\");if(!Wo(this.prevDate,t))return this.asTick(t,2,\"HH:mm\");this.repeatCounter++;const e=this.repeatCounter===this.repeatEach;return!function(t,e){yt(2,arguments);var i=jo(t),n=jo(e);return i.getTime()===n.getTime()}(this.prevDate,t)||e?this.asTick(t,e?4:3,\"HH:mm\"):null}}const ta=t=>function(t,e){yt(2,arguments);var i=Go(t,e)/1e3;return i>0?Math.floor(i):Math.ceil(i)}(t,Tt(t));class ea extends Zo{getTick(t){const e=this.checkPrev(t),i=0===this.minTickInterval||0==ta(t)%(this.minTickInterval/1e3),n=!bt(this.prevDate,t),r=function(t){yt(1,arguments);var e=vt(t),i=e.getMinutes();return i}(t),s=!Wo(this.prevDate,t)||e&&0===r;if(i){if(n)return this.asTick(t,1,Jo());if(s)return this.asTick(t,2,\"HH:mm\");if(0==r%30&&this.size<15)return this.asTick(t,3,\"HH:mm\");if(0==r%15&&this.size<=5)return this.asTick(t,4,\"HH:mm\")}return null}}class ia extends Zo{constructor(t){super(t),this.monthDay=this.duration<22*$o.Day.One,this.monthYear=this.duration>22*$o.Day.One&&this.duration<7*$o.Month.One,this.year=this.duration>7*$o.Month.One}useTuesday(t){return!!this.noPrevDate||2===zo(t)&&Go(t,this.prevDate)>1728e5}getTick(t){this.checkPrev(t);const e=!Ri(t,this.prevDate),i=!_i(t,this.prevDate);return this.monthDay?1===zo(t)||this.useTuesday(t)?this.asTick(t,1,Jo()):null:this.monthYear?e?this.asTick(t,1,\"LLL ''yy\"):null:this.year&&i?this.asTick(t,1,\"yyyy\"):null}}class na extends Zo{constructor(t){super(t),this.monthDay=this.duration<4*$o.Week.One,this.monthYear=this.duration>4*$o.Week.One&&this.duration<6*$o.Month.One,this.year=this.duration>6*$o.Month.One}getTick(t){this.checkPrev(t);const e=!Ri(t,this.prevDate),i=!_i(t,this.prevDate);return this.monthDay?this.asTick(t,1,Jo()):this.monthYear?e?this.asTick(t,1,\"LLL ''yy\"):null:this.year&&i?this.asTick(t,1,\"yyyy\"):null}}class ra extends Zo{constructor(t){super(t),this.showMonths=this.duration<7*$o.Month.One}getTick(t){this.checkPrev(t);const e=!_i(t,this.prevDate);return this.showMonths?this.asTick(t,1,\"LLL ''yy\"):e?this.asTick(t,1,\"yyyy\"):null}}class sa extends Zo{constructor(t){super(t)}getTick(t){this.checkPrev(t);return!_i(t,this.prevDate)?this.asTick(t,1,\"yyyy\"):null}}function oa(t){return K(t)?\"\".concat(t.toFixed(2),\" %\"):\"\"}function aa(t,e,i=!1){if(t.comparison===g.Percent)return oa(e);const n=t.plots[0],r=n.curves[0],s=K(r)&&r.fields.length>0?r.fields[0]:null;if(!K(s))return\"\";const o={range:t.fullDomain,allDigits:!1,forceTrailingZeros:i};return n.metaData.format(e,s,o)}function la(t,e){const i=t.display.xAxis.format;if(K(i)){return ua(e,Ko(i))}const n=t.data.aggregation;return n.isEndOfDay?ha(n,e):da(n,e)}function ca(){const t=tt(Yp().config,null,\"overrides\",\"xAxis\",\"getLocaleName\");if(K(t)&&\"function\"==typeof t)try{return t()}catch(t){Bp(\"Failed retrieving the locale name, error is \".concat(t.message),\"warn\")}}function ua(t,e){return $r(t,e,function(){switch(ca()){case\"fr\":return{locale:Bo};default:return}}())}function ha(t,e){if(!ir(e))return\"\";switch(t.unit){case u.Tick:case u.Intraday:case u.Day:case u.Week:default:return ua(e,\"P\");case u.Month:return ua(e,\"LLL yyyy\");case u.Quarter:return ua(e,\"qqq yyyy\");case u.Year:return ua(e,\"yyyy\")}}function da(t,e){if(!ir(e))return\"\";return ua(e,t.isTick?\"pp\":\"p\")}const pa=(t,e)=>t.at(e);class fa{constructor(t){this.presenter=t,this._dates=[],this.invalidate()}checkRebuild(){this.pendingRebuild&&this.rebuild()}get withPrologLength(){return this.checkRebuild(),this._dates.length+te.TIMELINE_PROLOG_PADDING_BARS}get withPrologEpilogLength(){return this.withPrologLength+te.TIMELINE_EPILOG_PADDING_BARS}get firstSeriesIndex(){return te.TIMELINE_PROLOG_PADDING_BARS}get lastSeriesIndex(){return this.checkRebuild(),0===this._dates.length?0:this.withPrologLength-1}get withoutPrologEpilogLength(){return this.checkRebuild(),this._dates.length}at(t){if(this.checkRebuild(),t<0||t>=this.withPrologEpilogLength)return null;if(t<te.TIMELINE_PROLOG_PADDING_BARS){const e=W(this._dates),i=t-te.TIMELINE_PROLOG_PADDING_BARS;return this.getDateShift(i)(e)}if(t>=this.withPrologLength){const e=V(this._dates),i=t-this.withPrologLength+1;return this.getDateShift(i)(e)}return this._dates[t-te.TIMELINE_PROLOG_PADDING_BARS]}get length(){return this.checkRebuild(),this._dates.length>0?this.withPrologEpilogLength:0}slice(t,e){this.checkRebuild();const i=[];for(let n=t;n<e;++n)i.push(this.at(n));return i}mergeDateIntoTimeline(t,e=!0){e&&this.checkRebuild();const i=+t,n=G(this._dates,i,Number),r=+this._dates[n];if(r!==i){const e=n+(i>r?1:0);return this._dates.splice(e,0,t),e+this.firstSeriesIndex}return-1}invalidate(){this._dates.length=0,this.pendingRebuild=!0}rebuild(){if(this.presenter.isEmpty)return;const t=this.presenter.mainPlot.timeSeries;t.hasData&&(this._dates.push(...t.container.getTimeData().slice(0)),this.presenter.allPlots.forEach(e=>{if(e.timeSeries===t)return;if(!e.timeSeries.hasData)return;e.timeSeries.container.getTimeData().forEach(t=>this.mergeDateIntoTimeline(t,!1))}),this.pendingRebuild=!1)}getDateShift(t){const{unit:e,size:i}=this.presenter.data.aggregation;switch(e){case u.Year:return ys(t);case u.Quarter:return gs(t);case u.Month:return ms(t);case u.Week:return fs(t);case u.Day:return ps(t);case u.Intraday:return hs(i*t);case u.Tick:return us(t)}}}function ma(t,e,i,n,r){const s=function(t,e){const i=t.data.aggregation;return{date:ha(i,e),time:i.isEndOfDay?null:da(i,e),isMultiSymbol:va(t),isMultiContract:i.isMultiContract}}(t,e);s.offset=i,s.lastBarRefresh=!!n||!1,s.chartId=t.renderTo;const o=i=>i.axes.map(t=>t.plots).flat().filter(e=>!r||e===t.mainPlot).map(t=>function(t,e,{isMultiContract:i},n){const r=n.type===v.Study;if(!n.timeSeries.hasData)return null;const s=n.timeSeries.container,o=(t,i)=>ya(t,i,e),a={isMain:n.main,type:n.type,typeName:v[n.type],name:n.title,description:r?yi(n.model.study).meta.title:null,error:n.errorText,id:n.id},l=n.curves[0];i&&n.type===v.Symbol&&s.hasField(on.Symbol)&&(a.name=o(l,on.Symbol)[0]);const u=n.type===v.Expression,h=(n.axis.comparison,g.None,n.axis.comparison===g.Percent),d={},p={range:n.axis.yScale.domain(),allDigits:!0},f=(t,e)=>h?oa(t):n.metaData.format(t,e,p);return a.values=n.curves.map(t=>t.fields.map(e=>{const[i,s]=o(t,e),l=n.axis.yScale.priceToY(i);d[e.id]=!0;const h=t.getColor(s,t.style!==c.HollowCandles);return{abbreviation:Ta(e),shortName:e.shortName,id:e.id,name:e.name,longName:u&&!a.isMain?n.title:\"\".concat(e.shortName,\" \").concat(r?n.params:\"\").trim(),color:Le(h),val:i,y:l,value:\"\".concat(f(i,e)).trim()}})).flat().filter(t=>null!==t),a.events=n.findEvents(o(l,on.DateTime)[0]),a}(0,e,s,t)).filter(t=>null!==t);return s.panes=t.panes.map(t=>({bounds:ga(t),id:t.id,plots:o(t)})),s}function ga(t){const{x:e,y:i,width:n,height:r}=t.getBounds(),{leftOffset:s,rightOffset:o}=t.presenter.view;return{top:i,left:e+s,right:o,bottom:i+r,width:n,height:r}}function ya(t,e,i){const n=t.plot,r=n.timeSeries.container,s=n.axis.pane.presenter.timeline,o=G(s,+i,Number,pa),a=s.at(o-t.shift),l=r.getTimeData(),c=G(l,+a,Number);return[!l[c]||l[c].getTime()!==a.getTime()?null:t.dataAt(e,c,!1),c]}function va(t){const e=t.mainPlot.symbol;return 0<t.allPlots.filter(t=>t.type===v.Symbol&&t.symbol!==e).length}function Ta(t){return t.id===on.Change.id?\"Δ\":t.id.substring(0,1)}class ba{constructor(){this.id=Ho()(),this.plot=null}get shift(){return this._shift}set shift(t){this._shift=K(t)?t:0}get isOhlc(){return(this.isOhlcStyle||this.isCandle||this.isHlcStyle||this.isElderImpulseSystemStyle)&&this.fields.includes(on.Close)}get name(){return this.isOhlc?\"\":this.fields[0].name}get isHeikinAshiStyle(){return this.style===c.HeikinAshi}get isCandle(){return this.style===c.Candlestick||this.style===c.HollowCandles||this.style===c.HeikinAshi}get isHollowCandles(){return this.style===c.HollowCandles}get isElderImpulseSystemStyle(){return this.style===c.ElderImpulseSystem}get isOhlcStyle(){return this.style===c.OHLC}get isHlcStyle(){return this.style===c.HLC}get isRenko(){return this.style===c.Renko}get isLineLike(){return this.style===c.Line||this.style===c.Area}fromModel(t){t.attributes&&(this.attributes=t.attributes.map(t=>l[t])),this.colors=t.colors,this.fields=t.fields.map(t=>on[t]),this.style=c[t.style],this.lineWidth=t.lineWidth,this.varyColorPerBar=t.varyColorPerBar,this.visible=t.visible,t.zones&&(this.zones=t.zones),this.shift=t.shift}get axis(){return this.plot.axis}get pane(){return this.axis.pane}get timeSeries(){return this.plot.timeSeries}get presenter(){return this.pane.presenter}get view(){return this.presenter.view}timeToX(t){return this.view.xAxis.xScale.timeToX(t)}priceToY(t){return this.plot.priceToY(t)}dataAt(t,e,i=!0){const n=!i&&t===on.Change,r=n?on.Close:t,s=(t,e)=>{const i=this.timeSeries.container.getData(t)[e];return this.plot.priceMapper?this.plot.priceMapper(i):i},o=s(r,e);if(!n)return o;if(e<=1)return 0;return o-s(r,e-1)}timeSeriesAt(t){const e=this.timeSeries.container.getTimeData().length;return t<0||t>e-1?null:this.timeSeries.container.getTimeData()[t]}timelineAt(t){return this.presenter.timeline.at(t)}get shiftedTimeDomain(){const t=this.view.xAxis.xScale;if(!K(t.extent()))return null;return 0!==this.shift?t.extent().map(e=>t.timeline.at(e-this.shift)):t.domain()}getCore(){const t=this.timeSeries;if(!t.hasData||!this.visible)return te.NULL_OBJECT;const e=this.view.xAxis.xScale.extent();if(!K(e))return te.NULL_OBJECT;const i=this.axis.yScale,n=i.priceDomain();return K(n)?{ts:t,extent:e,yScale:i,priceDomain:n}:te.NULL_OBJECT}drawHover(t,e,i){if(!this.isLineLike)return;if(this.getCore()===te.NULL_OBJECT)return;t.save();const[n,r]=ya(this,this.pickMainField(),e);if(!K(n))return;t.fillStyle=Le(this.getColor(r));const s=2*te.CURVE_STYLE_DOTS_RADIUS,o=2*Math.PI;t.beginPath();const a=this.priceToY(n);t.moveTo(i+s,a),t.arc(i,a,s,0,o),t.fill(),t.restore()}draw(t){const e=this.getCore();if(e===te.NULL_OBJECT)return;const{ts:i,extent:n,yScale:r,priceDomain:s}=e;t.save(),t.setLineDash([]);const o=i.container.getTimeData(),a=this.shiftedTimeDomain[0],l={bar:this.view.xAxis.xScale.bar,priceDomain:s,domain:r.domain(),range:r.range(),slice:n,start:G(o,+a,Number)||0},u=K(this.zones);this.isOhlc?Da.call(this,t,l):this.isRenko?xa.call(this,t,l):this.style===c.Ribbon?this.varyColorPerBar?Ra.call(this,t,l):Na.call(this,t,l,this.colors[0]):this.style===c.Area?u?Ca.call(this,t,l,Pa,!0):Pa.call(this,t,l,this.colors,!0):this.style===c.Column?Ma.call(this,t,l):this.style===c.Step?u?Ca.call(this,t,l,Oa):Oa.call(this,t,l,this.colors[0]):this.style===c.Dots?Ea.call(this,t,l):this.style===c.Line?u?Ca.call(this,t,l,_a):this.varyColorPerBar?Ia.call(this,t,l):_a.call(this,t,l):Bp(\"Drawing of the curve style '\".concat(this.style,\"' is not implemented yet\"),\"error\"),t.restore()}pickMainField(){return 1===this.fields.length?this.fields[0]:this.fields.includes(on.Last)?on.Last:this.fields.includes(on.Close)?on.Close:this.fields[0]}get zoneColors(){if(!K(this._zoneColors)){const t=this.colors.slice();this._zoneColors=this.zones.map(e=>t.splice(0,e.colors))}return this._zoneColors}getColorsFromZone(t){let e=this.zones.findIndex(e=>t<e.value);return-1===e&&(e=this.zones.length-1),this.zoneColors[e]}pickAreaStroke(t){return t.length<2?Le(t[0]):t[1]}getColor(t,e=!0){if(this.varyColorPerBar){const i={};if(this.isOhlc){const e=this.dataAt(on.Open,t),n=this.dataAt(on.High,t),r=this.dataAt(on.Low,t),s=this.dataAt(on.Close,t),o=this.dataAt(on.Change,t);i.open=e,i.high=n,i.low=r,i.close=s,i.change=o}else if(this.plot.isStudy&&\"VOL\"!==this.plot.model.study){const e=this.pickMainField(),n=this.dataAt(e,t-1),r=this.dataAt(e,t),s=K(n),o=K(r);i.change=s?o?r-n:-1:o?1:0}else i.change=this.dataAt(on.Change,t);let n;const r=function({open:t,close:e,change:i},n){const r=n.length>2,s=K(t,e),o=s&&e>t,a=s&&e===t,l=i>0,c=0===i;return{useSame:r,isUp:o,isSame:a,isUpPrev:l,isSamePrev:c,isDown:!o&&!a,isDownPrev:!l&&!c}}(i,this.colors);switch(this.style){case c.Candlestick:case c.HeikinAshi:case c.OHLC:case c.HLC:case c.Column:{let t=r.useSame?r.isUp:r.isUp||r.isSame,e=r.isSame;((this.attributes||[]).includes(l.ChangeBased)||this.plot.isStudy)&&(t=r.useSame?r.isUpPrev:r.isUpPrev||r.isSamePrev,e=r.isSamePrev),n=this.colors[t?1:0],r.useSame&&e&&(n=this.colors[2]);break}case c.Renko:n=this.dataAt(on.Open,t)-this.dataAt(on.Close,t)>0?this.colors[0]:this.colors[1];break;case c.ElderImpulseSystem:n=this.colors[this.dataAt(on.BREL,t)];break;case c.HollowCandles:{const t=this.colors[r.isUpPrev||r.isSamePrev?1:0];n=e&&(r.isUp||r.isSame)?te.COLOR_TRANSPARENT:t;break}case c.Line:case c.Ribbon:if(this.timeSeries.container.hasField(on.BARCOLIX)){const e=this.dataAt(on.BARCOLIX,t);if(e>=0&&e<this.colors.length){n=this.colors[e];break}}n=this.colors[0];break;default:throw new Error(\"Unexpected style \".concat(c[this.style],\" for a curve with varying colors\"))}return K(n)||(n=this.colors[0]),n}if(this.zones){const e=this.pickMainField(),i=this.dataAt(e,t),n=this.getColorsFromZone(i);return this.style===c.Area?this.pickAreaStroke(n):n.length>0?n[0]:this.colors[0]}return this.colors[0]}}function Sa([t,e],i,n){let r=i;const s=this.timeSeries.container.size;for(let i=t;i<=e;i++){for(;this.timeSeriesAt(r)<this.timelineAt(i-this.shift)&&r<s;)++r;if(r===s)break;const t=this.timeSeriesAt(r)>this.timelineAt(i-this.shift);n.call(this,r,t)}}function Pa(t,e,i,n=!1){_a.call(this,t,e,this.pickAreaStroke(i)),Ha.call(this,t,e,i[0],n)}function Aa(t,e){const i=K(t),n=K(e);let r=null,s=null;const o=this.pane.getBounds();if(i)if(n){const i=this.priceToY(t),n=this.priceToY(e);r=(i+n)/2,s=new ke(o.x,n,o.width,i-n)}else r=this.priceToY(t),s=new ke(o.x,o.y,o.width,r-o.y);else r=this.priceToY(e),s=new ke(o.x,r,o.width,o.y+o.height-r);return[r,s]}const wa=(t,e)=>{const i=((t,e=!1)=>L(Ne,i=>_e(i,Ae,t,e),Re))(.6)(t),n=Ie(.6)(t),r=\"linLighten\"===e;return[r?n:i,t,r?i:n]};function Ca(t,e,i,n=!1){let r=null;this.zones.forEach((s,o)=>{const a=s.value,[l,c]=Aa.call(this,r,a);t.save(),He(t,c),n&&(e.range=[null,l]);let u=this.zoneColors[o];if(s.gradient){const e=wa(u,s.gradient),i=t.createLinearGradient(0,c.y,0,c.y+c.height);i.addColorStop(0,e[0]),i.addColorStop(.5,e[1]),i.addColorStop(1,e[2]),u=i}i.call(this,t,e,u),t.restore(),r=a})}function xa(t,{bar:e,slice:i,start:n}){let r=this.view.xAxis.xScale.range()[0]+e.offset+e.width/2;Sa.call(this,i,n,(i,n)=>{if(!n){const[n,s]=[on.Open,on.Close].map(t=>this.dataAt(t,i)).map(this.priceToY,this),o=Math.floor(e.totalWidth/2);t.fillStyle=this.getColor(i),t.beginPath(),t.rect(r-o,n,e.totalWidth,s-n),t.fill()}r+=e.totalWidth})}function Ma(t,{bar:e,slice:i,start:n}){let r=this.view.xAxis.xScale.range()[0]+e.offset+e.width/2;const s=e.width,o=Ke();o.prolog(t),Sa.call(this,i,n,(i,n)=>{if(!n){const e=this.pickMainField(),n=this.dataAt(e,i);if(K(n)){const e=this.priceToY(0),a=this.priceToY(n);t.fillStyle=this.getColor(i),t.beginPath(),t.rect(o.adjust(r-s/2),o.adjust(a),o.adjust(s),o.adjust(e-a)),t.fill()}}r+=e.totalWidth}),o.epilog(t)}function Ea(t,{bar:e,slice:i,start:n}){let r=this.view.xAxis.xScale.range()[0]+e.offset+e.width/2;t.fillStyle=this.getColor(0);const s=te.CURVE_STYLE_DOTS_RADIUS,o=2*Math.PI;t.beginPath(),Sa.call(this,i,n,(i,n)=>{if(!n){const e=this.pickMainField(),n=this.dataAt(e,i);if(K(n)){const e=this.priceToY(n);t.moveTo(r+s,e),t.arc(r,e,s,0,o)}}r+=e.totalWidth}),t.fill()}function Oa(t,{bar:e,slice:i,start:n},r){let s=this.view.xAxis.xScale.range()[0]+e.offset+e.width/2;const o=Ke();o.prolog(t),t.strokeStyle=r,t.lineWidth=this.lineWidth,t.beginPath();let a=!1,l=null;Sa.call(this,i,n,(i,n)=>{if(!n){const e=this.pickMainField(),n=this.dataAt(e,i);if(K(n)){const r=this.priceToY(n);if(a)t.lineTo(s,l),t.lineTo(s,r);else{const n=this.dataAt(e,i-1);if(K(n)){const e=this.priceToY(n);t.moveTo(-1,e),t.lineTo(s,e),t.lineTo(s,r)}else t.moveTo(s,r);a=!0}l=r}}s+=e.totalWidth}),t.stroke(),o.epilog(t)}function Da(t,{bar:e,slice:i,start:n}){const r=this.presenter.display.chart.showMinMaxArc;let s=this.view.xAxis.xScale.range()[0]+e.offset+e.width/2;const o=Ke();o.prolog(t);let a=null,l=null,c=null,u=null;const h=e=>{this.isCandle?(this.isHollowCandles?e.outlineColor=this.getColor(e.ix,!1):(this.colors.length>3&&(e.outlineColor=this.colors[3]),this.colors.length>4&&(e.wickColor=this.colors[4])),function(t,{x:e,adjust:i,width:n,y:[r,s,o,a],color:l,outlineColor:c,wickColor:u,isMin:h,isMax:d},p){const f=n/2;t.lineWidth=p,t.fillStyle=l,t.strokeStyle=c||l,t.beginPath(),t.rect(i(e-f),r,n,i(a-r)),t.fill(),t.stroke(),t.strokeStyle=u||c||l,t.beginPath(),t.moveTo(e,Math.min(a,r)),t.lineTo(e,s),t.moveTo(e,Math.max(a,r)),t.lineTo(e,o),t.stroke();const m=0===Ne(l).a;t.strokeStyle=m?c:l,La(t,h,d,e,o,s,f)}(t,e,this.lineWidth)):(this.isOhlcStyle||this.isHlcStyle||this.isElderImpulseSystemStyle)&&function(t,{x:e,adjust:i,width:n,y:[r,s,o,a],color:l,isMin:c,isMax:u},h,d){const p=n/2;t.lineWidth=h,t.strokeStyle=l,t.beginPath(),t.moveTo(e,o),t.lineTo(e,s),d&&(t.moveTo(i(e-p),r),t.lineTo(e,r));t.moveTo(i(e+p),a),t.lineTo(e,a),t.stroke(),La(t,c,u,e,o,s,p)}(t,e,this.lineWidth,!this.isHlcStyle)};Sa.call(this,i,n,(t,i)=>{if(!i){const i=[on.Open,on.High,on.Low,on.Close].map(e=>this.dataAt(e,t)),[n,r,d,p]=i,f={x:o.adjust(s),adjust:o.adjust,width:e.width,y:[n,r,d,p].map(this.priceToY,this).map(o.adjust),isMin:!1,isMax:!1,ix:t,color:this.getColor(t)},m=Math.min(...i),g=Math.max(...i);(!K(a)||m<a)&&(a=m,c=f),(!K(l)||g>l)&&(l=g,u=f),h(f)}s+=e.totalWidth}),r&&(K(c)&&(c.isMin=!0,h(c)),K(u)&&(u.isMax=!0,h(u))),o.epilog(t)}function La(t,e,i,n,r,s,o,a=3){e&&We(t,{x:n,y:r+a},o,0,Math.PI),i&&We(t,{x:n,y:s-a},o,0,Math.PI,!0)}function _a(t,{bar:e,slice:i,start:n},r=null){t.strokeStyle=r||this.getColor(0),t.lineWidth=this.lineWidth,t.beginPath();let s=this.view.xAxis.xScale.range()[0]+e.offset+e.width/2,o=!1;Sa.call(this,i,n,(i,n)=>{if(!n){const e=this.pickMainField(),n=this.dataAt(e,i);if(K(n)){const e=this.priceToY(n);o?t.lineTo(s,e):(t.moveTo(s,e),o=!0)}}s+=e.totalWidth}),t.stroke()}function Ia(t,{bar:e,slice:i,start:n}){t.lineWidth=this.lineWidth;let r=this.view.xAxis.xScale.range()[0]+e.offset+e.width/2,s=null,o=null,a=[];const l=e=>{if(a.length>1){t.beginPath(),t.strokeStyle=e;const i=a[0];t.moveTo(i.x,i.y);for(let e=1;e<a.length;e++){const i=a[e];t.lineTo(i.x,i.y)}t.stroke()}};Sa.call(this,i,n,(t,i)=>{if(!i){const e=this.pickMainField(),i=this.dataAt(e,t);if(K(i)){const e=this.priceToY(i);o=this.getColor(t),s!==o?(l(s),a.length>0&&(a=[a.pop()]),s=o):a.push({x:r,y:e})}}r+=e.totalWidth}),l(o)}function Na(t,{bar:e,slice:i,start:n},r){t.fillStyle=r;const[s,o]=this.fields;let a=this.view.xAxis.xScale.range()[0]+e.offset+e.width/2;const l=[];if(Sa.call(this,i,n,(t,i)=>{if(!i){const e=this.dataAt(s,t),i=this.dataAt(o,t);K(e,i)&&l.push({x:a,upY:this.priceToY(e),downY:this.priceToY(i)})}a+=e.totalWidth}),l.length>0){t.beginPath(),t.moveTo(l[0].x,l[0].upY);for(let e=1;e<l.length;++e)t.lineTo(l[e].x,l[e].upY);const e=l.length-1;t.lineTo(l[e].x,l[e].downY);for(let i=e-1;i>=0;--i)t.lineTo(l[i].x,l[i].downY);t.closePath(),t.fill()}}function Ra(t,{bar:e,slice:i,start:n}){const[r,s]=this.fields;let o=this.view.xAxis.xScale.range()[0]+e.offset+e.width/2,a=[];const l=e=>{if(a.length>1){t.beginPath(),t.fillStyle=e,t.moveTo(a[0].x,a[0].upY);for(let e=1;e<a.length;++e)t.lineTo(a[e].x,a[e].upY);const i=a.length-1;t.lineTo(a[i].x,a[i].downY);for(let e=i-1;e>=0;--e)t.lineTo(a[e].x,a[e].downY);t.closePath(),t.fill()}};let c=null,u=null;Sa.call(this,i,n,(t,i)=>{if(!i){const e=this.dataAt(r,t),i=this.dataAt(s,t);if(K(e,i)){const n=this.priceToY(e),r=this.priceToY(i);u=this.getColor(t),c!==u&&(l(c),a.length>0&&(a=[a.pop()]),c=u),a.push({x:o,upY:n,downY:r})}}o+=e.totalWidth}),l(u)}function Ha(t,{bar:e,slice:i,start:n,range:[r,s]},o,a){if(a){const e=t.createLinearGradient(0,r,0,s);e.addColorStop(0,o);const i=Ne(o);i.a=0,e.addColorStop(1,Re(i)),t.fillStyle=e}else t.fillStyle=o;t.beginPath();let l=null;const c=this.pickMainField();let u=this.view.xAxis.xScale.range()[0]+e.offset+e.width/2,h=!1,d=null,p=null,f=null;Sa.call(this,i,n,(i,n)=>{if(!n){const e=this.dataAt(c,i);if(!K(d)&&e>=0&&(d=!0),!K(p)&&e<0&&(p=!0),K(e)){const i=this.priceToY(e);h?t.lineTo(u,i):(t.moveTo(l=u,i),h=!0),f=u}}u+=e.totalWidth});const m=d&&p?this.priceToY(0):s;t.lineTo(f,m),t.lineTo(l,m),t.closePath(),t.fill()}class ka{constructor(t,e,i=T.Normal,n=[null,null]){this.symbol=t,this.aggregation=e,this.range=n,this.seriesKind=i,this.cacheMe=!1,this.barsToFetch=0,this.offset=0,this.chartId=null,this.curveStyle=null,this.fields=null,this.needsExtraKey=[T.BalanceSheet,T.IncomeStatement].includes(i)}getBuilderKey(){return K(this.curveStyle)&&te.SPECIAL_BUILDER_REQUIRED.includes(this.curveStyle)?c[this.curveStyle]:\"Standard\"}getExtraKey(){return this.needsExtraKey&&K(this.fields)?\"\".concat(this.fields.map(t=>t.id).join(\";\")):\"\"}getHashKey(){const t=this.aggregation.getHashKey(),e=this.getBuilderKey(),i=this.getExtraKey();return\"\".concat(this.symbol,\"|\").concat(t,\"}|\").concat(this.range,\"|\").concat(this.seriesKind,\"|\").concat(this.offset,\"|\").concat(e,\"|\").concat(i)}}function Fa(t,e){const i=(t.forStudies||t).query;return K(i)&&i.symbol!==te.PLACEHOLDER_SYMBOL_NAME?e(i):new Eo}function Ua(t){return new rn(t,d.Number,f.Study,t)}class Ba{constructor(t,...e){this.calcCtx=this.container=this._source=this.target=this.inputs=this.outFields=null,this.setOptions(t),this.innerSeries=e,this.calculable=!0,this.useNotifications=this.initialNotification=this.computedServerSide=!1,this.id=Ho()()}setOptions(t){rt(this,t);const e=t.outFields||[t.target];this.studyFields=this.helpers.concat(e).reduce((t,e)=>(t[e.id]=e,t),{})}get helpers(){return te.EMPTY_ARRAY}get hasData(){return null!==this.container}get source(){if(K(this._source))return this._source;const t=K(this.inputs)?this.inputs[te.INPUT_SOURCE]:null;return K(t)?on[t]:null}set source(t){this._source=t}async ready(){return Jt.call(this,async()=>{this.basisChangedToken=this.useNotifications?Po.a.subscribe(an.TS_ALL,this.onBasisChanged.bind(this)):null;const t={tag:Ho()(),src:null},e=(await Promise.all(this.innerSeries.map(t=>t.ready()))).every(_);return e&&this.calculate(t),e})}shouldTriggerOurRecalc(t){return t===this.innerSeries[0]}onBasisChanged(t,e){if(t===an.TS_EVENTSCHANGED||t===an.TS_LOADING)return;if(!this.shouldTriggerOurRecalc(e.series)||null===this.base||this===e.series)return;const i={tag:Ho()(),src:e.series};switch(t){case an.TS_MANYCHANGED:this.calculate(i);break;case an.TS_DATAPOINTCHANGED:case an.TS_DATAPOINTADDED:this.recalculateAt(i,e.index,t===an.TS_DATAPOINTADDED);break;default:throw new Error(\"Unknown time series message, likely forgot to handle it\")}}shutdown(){this.useNotifications&&this.basisChangedToken&&Po.a.unsubscribe(this.basisChangedToken)}get base(){return this.innCont(0)}get period(){return this.inputs[te.INPUT_PERIOD]}calculateDataPoint(t,e){const i=this.calculateAt(t);if(null!==i){Object.keys(i).forEach(t=>{const n=i[t],r=this.studyFields[t];e?this.container.addDataPoint(r,n):this.container.setLastDataPoint(r,n)})}}notify(t,e){Po.a.publish(t,{series:this,index:e})}calculateCommon(t,e=null,i=-1,n=!0){const r=-1===i,s=r?e=>{!K(t.src)&&K(e.calcCtx)||e.calculate(t)}:e=>e.recalculateAt(t,i,n);if(null!==this.base&&!(this.calcCtx&&this.calcCtx.tag===t.tag||this===t.src)){if(this.calcCtx=t,this.innerSeries.filter(t=>t.calculable).forEach(s),r&&(this.container=this.makeContainer()),void 0!==this.calculateAt)if(r){const t=this.base.size;for(let e=0;e<t;++e)this.calculateDataPoint(e,!0)}else this.calculateDataPoint(i,n);e&&(K(t.src)||this.initialNotification)&&this.notify(e,i)}}calculate(t){this.calculateCommon(t,an.TS_MANYCHANGED,-1,!0)}recalculateAt(t,e,i){this.computedServerSide||this.calculateCommon(t,i?an.TS_DATAPOINTADDED:an.TS_DATAPOINTCHANGED,e,i)}baseVal(t,e){return this.base.getData(t)[e]}innCont(t){const e=this.innerSeries[t];return(e.forStudies||e).container}innVal(t,e,i){const n=this.innCont(t),r=n.size;return i<0||i>r-1?null:n.getData(e)[i]}wrap(...t){return t.reduce((t,e)=>(t[e.f.id]=e.g,t),{})}wrapBaseFields(...t){return t.map(this.wrapBaseField,this)}wrapInner(t,e){return{f:t,g:()=>this.innCont(e).getData(t)}}wrapBaseField(t){return this.wrapInner(t,0)}get defaultWrappers(){return this.wrapBaseFields(on.DateTime,on.Symbol)}makeContainer(){const t=this.defaultWrappers.concat(this.getWrappers()),e=Object.keys(this.studyFields).map(t=>this.studyFields[t],this);return new es(e,this.wrap(...t))}getWrappers(){return[]}atLeast(t,e){return t>=e-1}exactly(t,e){return t==e-1}past(t,e,i,n=this.base){return n.getData(i).slice(t-e+1,t+1)}getCacheableEntities(t){this.innerSeries.forEach(e=>{e.getCacheableEntities(t)})}}class Va extends Ba{constructor(t,...e){super(t,...e)}get _actual(){return this.innerSeries[0]}get canLoadMoreData(){return this._actual.canLoadMoreData}async loadMoreData(t=!0){this._actual.loadMoreData(t)}}class Wa extends Va{constructor(t,e){super(t,e),this.query=e.query,this.useNotifications=!0,this.forStudies=e}calculateAt(t){const[e,i,n,r]=[on.Open,on.High,on.Low,on.Close].map(e=>this.baseVal(e,t),this);let s=null,o=null,a=null,l=null;const c=N([e,i,n,r]);if(t<1)s=N([e,r]),o=i,a=n,l=0;else{const[e,r]=[on.Open,on.Close].map(e=>this.container.getData(e)[t-1],this);s=N([e,r]),o=Math.max(i,s,c),a=Math.min(n,s,c),l=c-r}return{[on.Open.id]:s,[on.High.id]:o,[on.Low.id]:a,[on.Close.id]:c,[on.Change.id]:l}}getWrappers(){return this.wrapBaseFields(on.Volume,on.OpenInterest)}}class ja extends Ba{constructor(t,e){super(t,e)}calculateAt(t){let e=null;if(this.atLeast(t,this.period)&&this.innCont(0).hasField(this.source)){let i=this.past(t,this.period,this.source);R(i)&&(e=N(i))}return{[this.target.id]:e}}getWrappers(){return this.source===on.Volume?this.wrapBaseFields(on.Volume,on.Change):[]}}class Ga extends Ba{constructor(t,e,i){super(t,e),this.multiplier=i(this.period)}calculateAt(t){let e=null;if(this.atLeast(t,2)&&this.innCont(0).hasField(this.source)){let i=this.container.getData(this.target)[t-1];if(null!==i){e=(this.baseVal(this.source,t)-i)*this.multiplier+i}else if(this.atLeast(t,this.period)){let i=this.past(t,this.period,this.source);R(i)&&(e=N(i))}}return{[this.target.id]:e}}}const za={ma:{inField:on.MA,outFields:[on.ENVU,on.ENVD],func:du},maexp:{inField:on.EMA,outFields:[on.ENVEXPU,on.ENVEXPD],func:pu},masmo:{inField:on.SMA,outFields:[on.ENVSMOU,on.ENVSMOD],func:fu}};class Ya extends Ba{constructor(t,e,i){const n=za[e];super(t,i,n.func(i,t.inputs.Period,t.source)),this.variant=n,this.perc=t.inputs.Percent/100}calculateAt(t){let e=null,i=null,n=this.innVal(1,this.variant.inField,t);if(null!==n){let t=n*this.perc;e=n+t,i=n-t}return{[this.variant.outFields[0].id]:e,[this.variant.outFields[1].id]:i}}}class qa extends Ba{constructor(t,e){let i=du(e,t.inputs.Period1,t.source),n=du(e,t.inputs.Period2,t.source);super(t,e,Cu(t.target,(t,e,i)=>e-i,i,n))}getWrappers(){return[this.wrapInner(this.target,1)]}}const $a={macd:{fields:[on.MACD,on.MACDS,on.MACDH],func:Xa},ctm:{fields:[on.MACD,on.CTLTM,on.CTM],func:Xa},gpmi:{fields:[on.MACD,on.CTLTMF,on.GPMI],func:Xa},ppo:{fields:[on.PPO,on.PPOS,on.PPOH],func:Ka},pvo:{fields:[on.PVO,on.PVOS,on.PVOH],func:Ka}};function Xa(t,e,i){return e-i}function Ka(t,e,i){return(e-i)/i*100}class Za extends Ba{constructor(t,e,i,n){const r=e?pu:du,{fields:s,func:o}=$a[i];let a=r(n,t.inputs.Period1,t.source),l=r(n,t.inputs.Period2,t.source),c=Cu(s[0],o,a,l),u=r(c,t.inputs.Period3,c.target,s[1]);super(t,n,c,u,Cu(s[2],Xa,c,u)),this.fields=s}getWrappers(){return[this.wrapInner(this.fields[0],1),this.wrapInner(this.fields[1],2),this.wrapInner(this.fields[2],3)]}}const Ja=Ua(\"_AVG_GAIN\"),Qa=Ua(\"_AVG_LOSS\");class tl extends Ba{constructor(t,e,i){super(t,i),this.isModified=e}get helpers(){return[Ja,Qa]}gain(t,e){return e[t]>e[t-1]?e[t]-e[t-1]:0}loss(t,e){return e[t]<e[t-1]?e[t-1]-e[t]:0}calculateAt(t){let e=null,i=null,n=null;if(this.atLeast(t,this.period+1)){if(null===this.container.getData(this.target)[t-1]||this.isModified){let e=this.past(t,this.period+1,this.source);if(R(e)){const t=H(1,this.period),r=t.map(t=>this.gain(t,e),this),s=t.map(t=>this.loss(t,e),this);i=N(r),n=N(s)}}else{const e=this.container.getData(Ja)[t-1],r=this.container.getData(Qa)[t-1],s=this.past(t,2,this.source),o=this.gain(1,s),a=this.loss(1,s);i=(e*(this.period-1)+o)/this.period,n=(r*(this.period-1)+a)/this.period}null!==i&&null!==n&&(e=100-100/(1+i/n))}return{[Ja.id]:i,[Qa.id]:n,[this.target.id]:e}}}class el extends Ba{constructor(t,e,i,n){super(t,n),this.highest=e,this.index=i}calculateAt(t){let e=null;if(this.atLeast(t,this.inputs.Period)){const i=this.past(t,this.inputs.Period,this.source);if(R(i)){e=(this.highest?Math.max:Math.min)(...i),this.index&&(e=this.inputs.Period-i.indexOf(e)-1)}}return{[this.target.id]:e}}}class il extends Ba{constructor(t,e,i){super(t,i,gu(i,t.inputs.Period,on.High,on.HH,!0),gu(i,t.inputs.Period,on.Low,on.LL,!1)),this.toHighest=e}calculateAt(t){let e=null;const i=this.baseVal(on.Close,t),n=this.innVal(1,on.HH,t),r=this.innVal(2,on.LL,t);if(R([i,n,r])){const t=this.toHighest?n:r,s=n-r;0!==s&&(e=(i-t)/s*100)}return{[this.target.id]:e}}}const nl=Ua(\"_ABS_CHG\"),rl=Ua(\"_CHG\"),sl={sma:fu,ma:du,ema:pu,wma:mu};function ol(t,e){const i=(t.inputs.Smoothing||e).toLowerCase();return sl[i]}const al=new rn(\"RawPercK\",d.Number,f.Study);class ll extends Ba{constructor(t,e,i,n){let r=(s=n,o=t.inputs.Period1,a=!1,new il({target:e?al:i,inputs:uu(o)},a,s));var s,o,a;const l=ol(t,\"MA\");let c=l(r,t.inputs.Period2,r.target,e?i:on.PercD),u=e?l(c,t.inputs.Period3,c.target,on.PercD):c;super(t,n,e?c:r,e?u:c),this.kField=i}getWrappers(){return[this.wrapInner(this.kField,1),this.wrapInner(on.PercD,2)]}}const cl=0,ul=1,hl=2;class dl extends Ba{constructor(t,e,i){super(t,i,Au(i,t.inputs.Period,t.source)),this.kind=e}calculateAt(t){let e=null,i=null,n=null,r=null,s=null;const o=this.innVal(1,on.MSD,t);if(null!==o){s=this.innVal(1,on.MA,t);let a=this.inputs.Width*o;e=s+a,i=s-a,n=2*a,r=(this.baseVal(this.source,t)-i)/(e-i)}switch(this.kind){case cl:return{[on.BOLLBU.id]:e,[on.BOLLBL.id]:i,[on.BOLLBM.id]:s};case ul:return{[on.BOLLBW.id]:n};case hl:return{[on.BOLLBP.id]:r};default:return null}}}const pl=Ua(\"_PDM\"),fl=Ua(\"_MDM\"),ml=Ua(\"_TRS\"),gl=Ua(\"_PDS\"),yl=Ua(\"_MDS\"),vl=Ua(\"_DX\");class Tl extends Ba{constructor(t,e,i,n){super(t,n,yu(n,on.TR)),this.useEma=e,this.adxField=i,this.multiplier=2/(t.inputs.AdxSmoothing+1)}get helpers(){return[pl,fl,ml,gl,yl,vl]}sum(t,e,i,n){let r=null;if(this.atLeast(t-1,n-1)){let s=this.past(t-1,n-1,e,this.container);s.push(i),R(s)&&(r=s.reduce((t,e)=>t+e,0))}return r}smooth1(t,e,i,n){let r=null;const s=this.inputs.DiLength,o=this.container.getData(i)[t-1];return r=null!==o?o-o/s+n:this.sum(t,e,n,s),r}smooth2(t,e,i,n){const r=this.container.getData(i)[t-1],s=this.inputs.AdxSmoothing;if(null!==r)return this.useEma?(n-r)*this.multiplier+r:(r*(s-1)+n)/s;{const i=this.sum(t,e,n,s);if(null!==i)return i/s}return null}calculateAt(t){let e=null,i=null,n=null,r=null,s=null,o=null,a=null,l=null,c=null;if(t>0){const u=this.past(t,2,on.High),h=this.past(t,2,on.Low),d=Math.max(u[1]-u[0],0),p=Math.max(h[0]-h[1],0);e=d>p?d:0,i=p>d?p:0;const f=this.container.getData(on.TR)[t];r=this.smooth1(t,pl,gl,e),s=this.smooth1(t,fl,yl,i),n=this.smooth1(t,on.TR,ml,f),null!==r&&(o=r/n*100,a=s/n*100,l=100*Math.abs(o-a)/(o+a),c=this.smooth2(t,vl,this.adxField,l))}return{[pl.id]:e,[fl.id]:i,[ml.id]:n,[gl.id]:r,[yl.id]:s,[on.PDI.id]:o,[on.MDI.id]:a,[vl.id]:l,[this.adxField.id]:c}}getWrappers(){return[this.wrapInner(on.TR,1)]}}function bl(t){let e=null,i=null;if(t>0){const n=this.baseVal(on.Close,t-1),r=Math.max(n,this.baseVal(on.High,t)),s=Math.min(n,this.baseVal(on.Low,t)),o=this.baseVal(on.Close,t);if(e=o>n?o-s:o<n?o-r:0,t>1){i=this.container.getData(on.ADWM)[t-1]+e}}return{[on.ADWM.id]:i}}function Sl(t){const e=[on.Close,on.High,on.Low].map(e=>this.baseVal(e,t),this).reduce((t,e)=>t+e)/3;return{[this.target.id]:e}}class Pl extends Ba{constructor(t,e,...i){super(t,...i),this.calculateAtFunc=e}calculateAt(t){let e=this.innerSeries.map((e,i)=>this.innVal(i,e.target,t)),i=null;return R(e)&&(i=this.calculateAtFunc(t,...e)),{[this.target.id]:i}}}function Al(t,e){return{[t.id]:(this.baseVal(on.High,e)+this.baseVal(on.Low,e))/2}}function wl(t,e){return{[t.id]:this.baseVal(on.High,e)-this.baseVal(on.Low,e)}}class Cl extends Ba{constructor(t,e,i){super(t,i),this.calculateAtFunc=e}calculateAt(t){return this.calculateAtFunc.call(this,t)}}const xl=Ua(\"_RANGE\"),Ml=Ua(\"_MOV_RANGE\"),El={mid:{series:t=>bu(t,on.TP),target:on.TP},range:{series:t=>wu(xl,D(wl,xl),t),target:xl}},Ol={original:{fields:[on.KCUP,on.KCLOW,on.KCMID],mid:El.mid,range:El.range,func:du},barchart:{fields:[on.KCEUP,on.KCELOW,on.KCEMID],mid:El.mid,range:El.range,func:pu},bands:{fields:[on.KBUP,on.KBLOW,on.KBMID],mid:{series:t=>t,target:on.Close},range:{series:t=>yu(t,on.TR),target:on.TR},func:pu}};class Dl extends Ba{constructor(t,e,i){const{fields:n,mid:r,range:s,func:o}=Ol[e];super(t,i,o(r.series(i),t.inputs.Period,r.target,n[2]),o(s.series(i),t.inputs.Period,s.target,Ml)),this.fields=n}calculateAt(t){const e=this.innVal(1,this.fields[2],t),i=this.innVal(2,Ml,t),n=null!==e&&null!==i,r=this.inputs.Multiplier||1;return{[this.fields[0].id]:n?e+i*r:null,[this.fields[1].id]:n?e-i*r:null}}getWrappers(){return[this.wrapInner(this.fields[2],1)]}}class Ll extends Ba{constructor(t,e,i){super(t,i,gu(i,t.inputs.Period,on.High,on.DONUP,!0),gu(i,t.inputs.Period,on.Low,on.DONLOW,!1)),this.isWidth=e}calculateAt(t){const e=this.innVal(1,on.DONUP,t),i=this.innVal(2,on.DONLOW,t),n=null===e&&null===i;return this.isWidth?{[on.DONW.id]:n?null:e-i}:{[on.DONMID.id]:n?null:(e+i)/2}}getWrappers(){return[this.wrapInner(on.DONUP,1),this.wrapInner(on.DONLOW,2)]}}const _l=Ua(\"_HIND\"),Il=Ua(\"_LIND\");class Nl extends Ba{constructor(t,e,i){super(t,i,gu(i,t.inputs.Period,on.High,_l,!0,!0),gu(i,t.inputs.Period,on.Low,Il,!1,!0)),this.justWidth=e}calculateAt(t){let e=null,i=null,n=null;const r=this.innVal(1,_l,t),s=this.innVal(2,Il,t);return null!==r&&null!==s&&(e=(this.period-r)/this.period*100,i=(this.period-s)/this.period*100,n=e-i),this.justWidth?{[on.ARNOSC.id]:n}:{[on.ARNUP.id]:e,[on.ARNLOW.id]:i}}}var Rl=i(172);let Hl=new Map;function kl(t,e=!1){const i=t.trim();if(e&&Hl.has(i))return et(Hl.get(i));try{const n=Rl.parse(i),r=Bl(n),s={text:t,model:n,clean:r,symbols:Vl(n)};return e&&Hl.set(i,s),s}catch(e){const i=e.location.start;return{text:t,error:\"\".concat(e.message,\" \\nLocation: line \").concat(i.line,\", column \").concat(i.column,\".\")}}}function Fl(t,e){return Ul(t,function(t){return(e,i,n)=>{if(jl(e))switch(e.op){case\"-\":return-i;case\"grp\":return i;case\"sym\":return t(i);case\"num\":return i;default:throw new Error(\"Unrecognized unary operator \".concat(e.op))}else switch(e.op){case\"+\":return i+n;case\"-\":return i-n;case\"*\":return i*n;case\"/\":return i/n;case\"^\":return Math.pow(i,n);default:throw new Error(\"Unrecognized binary operator \".concat(e.op))}}}(e))}function Ul(t,e){if(!K(t))return null;const i=typeof t;if(\"number\"===i||\"string\"===i)return t;return e(t,Ul(t.left,e),Ul(t.right,e))}function Bl(t){return Ul(t,Gl)}function Vl(t){let e=new Set;return Ul(t,(t,i,n)=>{\"sym\"===t.op&&e.add(i)}),Array.from(e)}function Wl(t,e){const i=et(t);return Ul(i,(t,i,n)=>{\"sym\"===t.op&&(t.left=e(i))}),i}function jl(t){return!K(t.right)}function Gl(t,e,i){if(jl(t))switch(t.op){case\"-\":return\"\".concat(t.op).concat(e);case\"grp\":return\"(\".concat(e,\")\");case\"sym\":return\"{\".concat(e,\"}\");case\"num\":return e.toString();default:throw new Error(\"Unrecognized unary operator \".concat(t.op))}else switch(t.op){case\"+\":case\"-\":case\"*\":case\"/\":case\"^\":return\"\".concat(e,\" \").concat(t.op,\" \").concat(i);default:throw new Error(\"Unrecognized binary operator \".concat(t.op))}}const zl=[on.Open,on.High,on.Low,on.Close],Yl={mapper:t=>t.query.symbol,recompute:o.Minimum,missing:s.UseNext,stretch:t=>!1,fieldMap:new Map(zl.map(t=>[t,t]))};class ql{constructor(t,e,i=Yl){this.exprModel=t,this.isExprInError=!K(t),this.container=null,this.innerSeries=e,this.innerLookup=e.reduce((t,e)=>(t[i.mapper(e)]=e,t),{}),this.policy=i,this.exprSymbols=Vl(t),this.onlyForTimeline=U(this.symbols,this.exprSymbols)}get hasData(){return null!==this.container}get sourceFields(){return this._sourceFields||(this._sourceFields=Array.from(this.policy.fieldMap.keys())),this._sourceFields}get targetFields(){return this._targetFields||(this._targetFields=Array.from(this.policy.fieldMap.values())),this._targetFields}async ready(){return Jt.call(this,async()=>{this.basisChangedToken=Po.a.subscribe(an.TS_ALL,this.onBasisChanged.bind(this));const t=(await Promise.all(this.innerSeries.map(t=>t.ready()))).every(_);return t&&this.calculate(),t})}onBasisChanged(t,e){if(t===an.TS_EVENTSCHANGED||t===an.TS_LOADING)return;if(!this.innerSeries.includes(e.series)||this.innerSeries.some(t=>!K(t.container)))return;const i=this.policy.mapper(e.series);if(t===an.TS_DATAPOINTCHANGED&&this.onlyForTimeline.includes(i))return;switch(this.policy.recompute===o.Everything?an.TS_MANYCHANGED:t){case an.TS_MANYCHANGED:this.calculate();break;case an.TS_DATAPOINTCHANGED:case an.TS_DATAPOINTADDED:this.recalculate(t===an.TS_DATAPOINTADDED);break;default:throw new Error(\"Unknown time series message, likely forgot to handle it\")}}shutdown(){this.basisChangedToken&&Po.a.unsubscribe(this.basisChangedToken)}calculateAt(t){return t.isNull?null:this.sourceFields.map((e,i)=>Fl(this.exprModel,e=>t.inn[e].values[i]))}pickMainField(){let t=null;for(const e of this.policy.fieldMap.values())if(null==t)t=e;else if(e===on.Close){t=e;break}return t}calculateLastChange(){const t=this.container.size;if(t<=1)return;const e=this.pickMainField(),i=this.container,n=i.getData(e)[t-2],r=i.getData(e)[t-1];K(n,r)&&i.setLastDataPoint(on.Change,r-n)}calculateDataPoint(t,e){const i=this.calculateAt(t);e?(this.targetFields.forEach((t,e)=>this.container.addDataPoint(t,i[e])),this.container.addDataPoint(on.Change,null),this.container.addDataPoint(on.DateTime,new Date(t.timeStamp))):this.targetFields.forEach((t,e)=>this.container.setLastDataPoint(t,i[e])),this.calculateLastChange()}notify(t){Po.a.publish(t,{series:this,index:this.container.size-1})}fieldValueAt(t,e,i){const n=this.innerLookup[t].container.getData(i);return e<0||e>=n.length?null:n[e]}timeStampAt(t,e){return this.fieldValueAt(t,e,on.DateTime)}timeline(t){return t.container.getData(on.DateTime)}getRangeHelper(){switch(this.policy.missing){case s.UseNext:return Math.min;case s.UsePrevious:return Math.max;default:throw new Error(\"Unknow missing bar policy, likely forgot to implement it.\")}}getRange(){const t=this.getRangeHelper();return{begin:t(...this.innerSeries.map(t=>W(this.timeline(t)))),end:t(...this.innerSeries.map(t=>V(this.timeline(t))))}}getFirstPos(){return this.getPos(this.getRange().begin)}getLastPos(){return this.getPos(this.getRange().end)}findIndex(t,e){const i=this.timeline(this.innerLookup[t]);switch(this.policy.missing){case s.UseNext:return i.findIndex(t=>t>=e);case s.UsePrevious:return function(t,e){if(t.length<1)return-1;for(let i=t.length-1;i>=0;--i)if(e(t[i]))return i;return-1}(i,t=>t<=e);default:throw new Error(\"Unknow missing bar policy, likely forgot to implement it.\")}}checkPos(t){t.isNull=Object.values(t.inn).some(t=>!K(t.timeStamp)&&!this.policy.stretch(t.symbol))}fillPosSymbolAt(t,e){return t.index=e,t.timeStamp=this.timeStampAt(t.symbol,e),t.values=this.sourceFields.map(i=>this.fieldValueAt(t.symbol,e,i)),t}get symbols(){return Object.keys(this.innerLookup)}getPos(t){let e={inn:{},timeStamp:t};return this.symbols.forEach(i=>{const n=this.findIndex(i,t);let r={symbol:i};e.inn[i]=this.fillPosSymbolAt(r,n)}),this.checkPos(e),e}getInner(t){return Object.values(t.inn)}moveNext(t){t.isNull||(this.getInner(t).forEach(e=>{for(;K(e.timeStamp)&&e.timeStamp<=t.timeStamp;)this.fillPosSymbolAt(e,e.index+1)}),this.checkPos(t),t.isNull||(t.timeStamp=Math.min(...this.getInner(t).map(t=>t.timeStamp).filter(t=>K(t))),this.policy.missing===s.UsePrevious&&this.getInner(t).forEach(e=>{(e.timeStamp>t.timeStamp||!K(e.timeStamp)&&this.policy.stretch(e.symbol))&&this.fillPosSymbolAt(e,e.index-1)})))}shouldAdd(t){return this.container.getLastDataPoint(on.DateTime)<t.timeStamp}calculateCommon(t=null,e=null,i=!0){if(e)this.calculateDataPoint(e,i);else if(this.container=this.makeContainer(),!this.isExprInError){let t=this.getFirstPos();for(;!t.isNull;)this.calculateDataPoint(t,!0),this.moveNext(t)}t&&this.notify(t)}calculate(){this.calculateCommon(an.TS_MANYCHANGED)}recalculate(t){if(this.isExprInError)return;let e=this.getLastPos();const i=this.shouldAdd(e);this.calculateCommon(i?an.TS_DATAPOINTADDED:an.TS_DATAPOINTCHANGED,e,i)}makeContainer(){const t=[on.DateTime,on.Change].concat(this.targetFields);return new Qr(t)}getCacheableEntities(t){this.innerSeries.forEach(e=>{e.getCacheableEntities(t)})}}const $l=Ua(\"_MIDPOINT\");const Xl=Ua(\"_MIDPOINT\");class Kl extends Ba{constructor(t,e,i){super(t,i),this.multiplyVol=e}calculateAt(t){const[e,i,n,r]=[on.High,on.Low,on.Close,on.Volume].map(e=>this.baseVal(e,t),this);let s=e===i?0:(n-i-(e-n))/(e-i);return this.multiplyVol&&(s*=r),{[this.target.id]:s}}}const Zl=Ua(\"_RANGE\");const Jl=Ua(\"_MATP\");function Ql(t){let e=null;if(t>0){const[i,n,r]=[on.High,on.Low,on.Volume].map(e=>this.baseVal(e,t)),[s,o]=[on.High,on.Low].map(e=>this.baseVal(e,t-1));e=((i+n)/2-(s+o)/2)/(r/1e6/(i-n))}return{[this.target.id]:e}}class tc extends Ba{constructor(t,e,i){super(t,i,pu(i,t.inputs.Period,t.source)),this.isBull=e}calculateAt(t){let e=null;const i=this.innVal(1,on.EMA,t);return null!==i&&(e=this.isBull?this.baseVal(on.High,t)-i:this.baseVal(on.Low,t)-i),{[this.isBull?on.ERBLPOW.id:on.ERBRPOW.id]:e}}}const ec=Ua(\"_FORCE\");function ic(t){let e=null;if(t>0){const[i,n]=[on.Close,on.Volume].map(e=>this.baseVal(e,t));e=(i-this.baseVal(on.Close,t-1))*n}return{[this.target.id]:e}}const nc=Ua(\"_RANGE\"),rc=Ua(\"_EMA1\"),sc=Ua(\"_EMA2\"),oc=Ua(\"_RATIO\");function ac(t,e){let i=null;if(this.atLeast(e,t+1)){const n=this.baseVal(on.Close,e-t);if(null!==n){i=this.baseVal(on.Close,e)-n}}return{[this.target.id]:i}}function lc(t,e){let i=1e3;if(e>0){const n=[on.Close,on.Volume],[r,s]=n.map(t=>this.baseVal(t,e),this),[o,a]=n.map(t=>this.baseVal(t,e-1),this),l=this.container.getData(this.target)[e-1];if(t?s<a:s>a){i=l*((r-o)/o+1)}else i=l}return{[this.target.id]:i}}class cc extends Ba{constructor(t,e,i,n){const r=wu(i[0],D(lc,e),n);super(t,n,r,pu(r,t.inputs.Period,i[0],i[1])),this.fields=i}getWrappers(){return[this.wrapInner(this.fields[0],1),this.wrapInner(this.fields[1],2)]}}const uc=Ua(\"_LOGPC\");function hc(t,e){let i=null;if(e>0){const n=this.baseVal(t,e),r=this.baseVal(t,e-1);null!==n&&null!==r&&(i=Math.log(n/r))}return{[uc.id]:i}}function dc(t,e){let i=null;const n=this.baseVal(on.MSD,e);return null!==n&&(i=100*n*t),{[on.HV.id]:i}}const pc=Ua(\"_SWING_INDEX\");const fc=Ua(\"_MIN_CLOSE\"),mc=Ua(\"_MAX_CLOSE\");const gc=Ua(\"_EP\"),yc=Ua(\"_AF\"),vc=Ua(\"_POS\");class Tc extends Mo{constructor(t){super(t)}getRetriever(){return new bc}onStreamingUpdates(t){}}class bc extends To{addExtraParams(t){t.trend=\"y\"}getPageNameFor(t){return t.unit===u.Intraday?te.BARCHART_HIST_SRV_INTRADAY_PAGE_NAME:super.getPageNameFor(t)}getParser(t){return new Sc(t.symbol,t.aggregation)}}class Sc extends vo{constructor(t,e){super(t,e)}makeContainer(){return new Qr([on.DateTime,on.TRSP1,on.TRSP2])}getParseFunc(){return this.parseTrendSpotter}parseTrend(t){return\"N/A\"===t?null:parseFloat(t)}parseTrendSpotter(t){const e=this.aggregation.isEndOfDay?1:0;t.length===3+e&&(this.container.addDataPoint(on.DateTime,this.parseDate(t[e])),this.container.addDataPoint(on.TRSP1,this.parseTrend(t[e+1])),this.container.addDataPoint(on.TRSP2,this.parseTrend(t[e+2])))}}const Pc={1:{param:\"cot\",func:\"parseCotLineChart\",fields:[on.DateTime,on.COTLCCMSP,on.COTLCLGSP,on.COTLCSMSP]},2:{param:\"cotadv\",func:\"parseDisaggregated\",fields:[on.DateTime,on.COTDAGPRO,on.COTDAGSPD,on.COTDAGMNM,on.COTDAGOTH]},3:{param:\"cotfin\",func:\"parseFinancialTradersReport\",fields:[on.DateTime,on.COTFTRDLI,on.COTFTRASM,on.COTFTRLVF,on.COTFTROTH]}};class Ac extends Ba{constructor(t,e,i){super(t,Fa(i,t=>new wc(e,t))),this.initialNotification=!0,this.wrappers=Pc[e].fields.slice(1).map(t=>this.wrapInner(t,0))}getWrappers(){return this.wrappers}}class wc extends Mo{constructor(t,e){super(e),this.kind=t}getRetriever(){return new Cc(this.kind)}onStreamingUpdates(t){}}class Cc extends To{constructor(t){super(),this.kind=t}addExtraParams(t){t[Pc[this.kind].param]=\"y\"}getParser(t){return new xc(t.symbol,t.aggregation,this.kind)}}class xc extends vo{constructor(t,e,i){super(t,e),this.kind=i}makeContainer(){return new Qr(Pc[this.kind].fields)}getParseFunc(){return this.aggregation.isEndOfDay?this[Pc[this.kind].func]:null}parseCotLineChart(t){this.container.addDataPoint(on.DateTime,this.parseDate(t[1])),this.container.addDataPoint(on.COTLCCMSP,parseInt(t[2])),this.container.addDataPoint(on.COTLCLGSP,parseInt(t[3])),this.container.addDataPoint(on.COTLCSMSP,parseInt(t[4]))}parseDisaggregated(t){this.container.addDataPoint(on.DateTime,this.parseDate(t[1])),this.container.addDataPoint(on.COTDAGPRO,parseInt(t[2])),this.container.addDataPoint(on.COTDAGSPD,parseInt(t[3])),this.container.addDataPoint(on.COTDAGMNM,parseInt(t[4])),this.container.addDataPoint(on.COTDAGOTH,parseInt(t[5]))}parseFinancialTradersReport(t){this.container.addDataPoint(on.DateTime,this.parseDate(t[1])),this.container.addDataPoint(on.COTFTRDLI,parseInt(t[2])),this.container.addDataPoint(on.COTFTRASM,parseInt(t[3])),this.container.addDataPoint(on.COTFTRLVF,parseInt(t[4])),this.container.addDataPoint(on.COTFTROTH,parseInt(t[5]))}}const Mc={Day:[on.PreviousHigh,on.PreviousLow,on.PreviousClose],Week:[on.WeekPreviousHigh,on.WeekPreviousLow,on.WeekPreviousClose],Month:[on.MonthPreviousHigh,on.MonthPreviousLow,on.MonthPreviousClose]};class Ec extends Ba{constructor(t,e,i){super(t,i),this.record=Yp().getRecordSource().getRecord(i.query.symbol),this.record.addFields(...e),this.streamingSubscription=this.getStreamingSubscription(),this.initialNotification=!0}getStreamingSubscription(){return Yp().getRecordSource().subject.pipe(Ao(t=>{const e=mn(an.RT_QUOTE,this.record.symbol);return t.filter(e)}),Qn(t=>t.length>0)).subscribe(this.onStreamingUpdates.bind(this))}async ready(){return Jt.call(this,async()=>K(this.record)?await this.record.ready()&&await super.ready():await super.ready(),\"asyncReadyWork2\")}onStreamingUpdates(t){if(this.record){const t={tag:Ho()()};this.calculate(t)}}shutdown(){super.shutdown(),this.streamingSubscription.unsubscribe()}getValues(t){return Mc[t].map(t=>this.record.getValue(t))}}class Oc extends Mo{constructor(t){super(t)}getRetriever(){return new Dc}onStreamingUpdates(t){}}class Dc extends To{addExtraParams(t){t.impl=\"y\"}getParser(t){return new Lc(t.symbol,t.aggregation)}}class Lc extends vo{constructor(t,e){super(t,e)}makeContainer(){return new Qr([on.DateTime,on.IMPVOL])}getParseFunc(){return this.parseImpVol}parseImpVol(t){!this.aggregation.isEndOfDay||t.length<9||(this.container.addDataPoint(on.DateTime,this.parseDate(t[1])),this.container.addDataPoint(on.IMPVOL,parseFloat(t[8])))}}const _c=Ua(\"_ABS_CHG\"),Ic=Ua(\"_DS1_EMA1\"),Nc=Ua(\"_DS1_EMA2\"),Rc=Ua(\"_DS2_EMA1\"),Hc=Ua(\"_DS2_EMA2\");function kc(){return H(1,12)}const Fc=Ua(\"_DIFF\");const Uc=Ua(\"_SUM\");const Bc=Ua(\"_ABS_CHG\"),Vc=Ua(\"_HH_LL\"),Wc=Ua(\"_MULMA\");class jc extends Ba{constructor(t,e,i){const n=\"Close\"===t.inputs.TurtleChnField,r=[on.High,on.Low],s=i instanceof ql&&2!==B(i.targetFields,r).length;if(!n&&s){const e=wu(t.target,()=>null,i);super(t,i,e)}else{const r=du(wu(Bc,D((e,i)=>({[e.id]:i>0?t.inputs.FactorATR*Math.abs(this.baseVal(on.Change,i)):null}),Bc),i),t.inputs.PeriodAdjATR,Bc,on.MA),s=gu(i,t.inputs.PeriodTurtleChn,n?on.Close:e?on.High:on.Low,Vc,e),o=Cu(Wc,(e,i)=>t.inputs.FactorAdjATR*i,r),a=e?-1:1,l=Cu(t.target,(t,e,i)=>e+a*i,s,o);super(t,i,l)}}getWrappers(){return[this.wrapInner(this.target,1)]}}const Gc=Ua(\"_DIFF\");const[zc,Yc,qc,$c,Xc,Kc]=[\"_DIST\",\"_EMA_DIST1\",\"_EMA_DIST2\",\"_DIFF\",\"_EMA_DIFF1\",\"_EMA_DIFF2\"].map(Ua);const[Zc,Jc,Qc]=[\"_CHG\",\"_M1\",\"_M2\"].map(Ua);const[tu,eu,iu]=[\"_MAX\",\"_MIN\",\"_ISUPTREND\"].map(Ua);const[nu,ru,su]=[\"_TRENDUP\",\"_TRENDDOWN\",\"_TREND\"].map(Ua);const ou=Ua(\"CUM_TP\"),au=Ua(\"_CUM_VOL\"),lu=new Date(0);const cu={_TR:class extends Ba{constructor(t,e){super(t,e)}calculateAt(t){let e=null;const[i,n]=[on.High,on.Low].map(e=>this.baseVal(e,t));if(t>0){const r=this.baseVal(on.Close,t-1);e=Math.max(i-n,Math.abs(i-r),Math.abs(n-r))}else e=i-n;return{[this.target.id]:e}}},MA:ja,MAEXP:class extends Ga{constructor(t,e){super(t,e,t=>2/(t+1))}},MAHLC:class extends Ba{constructor(t,e){super(t,e,du(e,t.inputs.Period1,on.High,on.MAHI),du(e,t.inputs.Period2,on.Low,on.MALO))}getWrappers(){return[this.wrapInner(on.MAHI,1),this.wrapInner(on.MALO,2)]}},VOL:class extends Ba{constructor(t,e){super(t,e)}getWrappers(){return this.wrapBaseFields(on.Volume,on.TradeSize,on.Change,on.OpenInterest)}},MAENV:class extends Ya{constructor(t,e){super(t,\"ma\",e)}},MAENVEXP:class extends Ya{constructor(t,e){super(t,\"maexp\",e)}},MAENVSMO:class extends Ya{constructor(t,e){super(t,\"masmo\",e)}},MATRI:class extends Ba{constructor(t,e){let i=du(e,t.inputs.Period,t.source);super(t,e,i,du(i,t.inputs.Period,on.MA,on.TMA))}getWrappers(){return[this.wrapInner(on.TMA,2)]}},MAWEI:class extends Ba{constructor(t,e){super(t,e);const i=this.period;this.triangle=i*(i+1)/2}weightedAverage(t){return t.reduce((t,e,i)=>t+e*(i+1),0)/this.triangle}calculateAt(t){let e=null;if(this.atLeast(t,this.period)){let i=this.past(t,this.period,this.source);R(i)&&(e=this.weightedAverage(i))}return{[this.target.id]:e}}},MAVOL:ja,MASMO:class extends Ga{constructor(t,e){super(t,e,t=>1/t)}},MACD:class extends Za{constructor(t,e){super(t,!1,\"macd\",e)}},MACDEXP:class extends Za{constructor(t,e){super(t,!0,\"macd\",e)}},GMMA:class extends Ba{constructor(t,e){const i=t.inputs,n=kc().map(n=>pu(e,i[\"Period\".concat(n)],on.Close,t.outFields[n-1]));super(t,e,...n)}getWrappers(){return kc().map(t=>this.wrapInner(this.outFields[t-1],t))}},OSCI:qa,OSCIVOL:qa,RSI:class extends tl{constructor(t,e){super(t,!1,e)}},RSIMOD:class extends tl{constructor(t,e){super(t,!0,e)}},RSISTO:class extends Ba{constructor(t,e){super(t,e,function(t,e,i,n=on.RSI){return hu(\"RSI\",{source:i,target:n,inputs:uu(e)},t)}(e,t.inputs.Period,t.source))}calculateAt(t){let e=null;if(this.atLeast(t,this.inputs.Range)){const i=this.past(t,this.inputs.Range,on.RSI,this.innCont(1)),n=Math.min(...i),r=Math.max(...i);e=(i[i.length-1]-n)/(r-n)}return{[this.target.id]:e}}},WPERCR:class extends il{constructor(t,e){super(t,!0,e)}},HHLL:class extends Ba{constructor(t,e){super(t,e,gu(e,t.inputs.Period1,on.High,on.HH,!0),gu(e,t.inputs.Period2,on.Low,on.LL,!1))}getWrappers(){return[this.wrapInner(on.HH,1),this.wrapInner(on.LL,2)]}},WGCL:class extends Ba{constructor(t,e){super(t,e)}calculateAt(t){let e=null;const[i,n,r]=[on.Close,on.High,on.Low].map(e=>this.baseVal(e,t),this);return e=(2*i+n+r)/4,{[this.target.id]:e}}},STOCHF:class extends ll{constructor(t,e){super(t,!1,on.PercK,e)}},STOCHS:class extends ll{constructor(t,e){super(t,!0,on.PercK,e)}},BBANDS:class extends dl{constructor(t,e){super(t,cl,e)}},BWIDTH:class extends dl{constructor(t,e){super(t,ul,e)}},BPERC:class extends dl{constructor(t,e){super(t,hl,e)}},OBVOL:class extends Ba{constructor(t,e){super(t,e)}calculateAt(t){let e=null;if(t>0){const i=this.baseVal(on.Close,t),n=this.baseVal(on.Volume,t),r=this.baseVal(on.Close,t-1),s=this.container.getData(this.target)[t-1]||0;e=i>r?s+n:i<r?s-n:s}return{[this.target.id]:e}}},ATR:class extends Ba{constructor(t,e){let i=yu(e,on.TR);const n=ol(t,\"SMA\")(i,t.inputs.Period,on.TR,t.target);super(t,e,n,du(n,t.inputs.Period2,on.ATR,on.ATRMA))}getWrappers(){return[this.wrapInner(this.target,1),this.wrapInner(on.ATRMA,2)]}},ADX:class extends Tl{constructor(t,e){super(t,!1,on.ADX,e)}},ADXMOD:class extends Tl{constructor(t,e){super(t,!0,on.ADXM,e)}},ADL:class extends Ba{constructor(t,e){super(t,e,Pu(e))}calculateAt(t){let e=null;return e=(this.container.getData(this.target)[t-1]||0)+this.innVal(1,on.MFMUL,t),{[this.target.id]:e}}},ADWM:class extends Ba{constructor(t,e){const i=wu(on.ADWM,bl,e);super(t,e,i,du(i,t.inputs.Period,on.ADWM,on.ADWMMA))}getWrappers(){return[this.wrapInner(on.ADWM,1),this.wrapInner(on.ADWMMA,2)]}},CHAOSC:class extends Ba{constructor(t,e){const i=on.ADL;let n=function(t,e=on.ADL){return hu(\"ADL\",{target:e},t)}(e,i),r=pu(n,3,i),s=pu(n,10,i);super(t,e,Cu(t.target,(t,e,i)=>e-i,r,s))}getWrappers(){return[this.wrapInner(this.target,1)]}},TP:class extends Ba{constructor(t,e){super(t,e,wu(t.target,Sl,e))}getWrappers(){return[this.wrapInner(this.target,1)]}},KELCHN:class extends Dl{constructor(t,e){super(t,\"original\",e)}},KELEXP:class extends Dl{constructor(t,e){super(t,\"barchart\",e)}},KELBND:class extends Dl{constructor(t,e){super(t,\"bands\",e)}},DONCHN:class extends Ll{constructor(t,e){super(t,!1,e)}},DONWIDTH:class extends Ll{constructor(t,e){super(t,!0,e)}},PVT:class extends Ba{constructor(t,e){super(t,e)}calculateAt(t){let e=null;if(t>0){const[i,n]=[on.Close,on.Volume].map(e=>this.baseVal(e,t),this),r=this.baseVal(on.Close,t-1);e=(this.container.getData(this.target)[t-1]||0)+(i-r)/r*n}return{[this.target.id]:e}}},ROC:class extends Ba{constructor(t,e){super(t,e)}calculateAt(t){let e=null;if(this.atLeast(t,this.period+1)){const i=this.baseVal(this.source,t-this.period);if(null!==i&&0!==i){e=(this.baseVal(this.source,t)-i)/i*100}}return{[this.target.id]:e}}},TRIX:class extends Ba{constructor(t,e){let i=pu(e,t.inputs.Period,t.source),n=pu(i,t.inputs.Period,i.target),r=pu(n,t.inputs.Period,n.target);super(t,e,Su(r,1,r.target,t.target))}getWrappers(){return[this.wrapInner(this.target,1)]}},PPMOV:class extends Ba{constructor(t,e){super(t,e,bu(e,on.PVPT))}calculateAt(t){const e=this.innVal(1,on.PVPT,t),i=this.baseVal(on.High,t),n=this.baseVal(on.Low,t);return{[on.PVPTR.id]:e+i-n,[on.PVPTS.id]:e-i+n}}getWrappers(){return[this.wrapInner(on.PVPT,1)]}},PIVPTS:class extends Ec{constructor(t,e){super(t,[].concat(...Object.values(Mc)),e)}calculateAt(t){let e=null,i=null,n=null,r=null,s=null,o=null,a=null;const l=this.getValues(this.inputs.Previous);if(R(l)){const[t,c,u]=l;e=(t+c+u)/3;const h=2*e;i=h-c,n=h-t;const d=t-c;r=e+d,s=e-d,o=t+2*(e-c),a=c-2*(t-e)}return{[on.PPTPIV.id]:e,[on.PPTR1.id]:i,[on.PPTR2.id]:r,[on.PPTR3.id]:o,[on.PPTS1.id]:n,[on.PPTS2.id]:s,[on.PPTS3.id]:a}}},CPP:class extends Ec{constructor(t,e){super(t,Mc.Day,e)}calculateAt(t){let e=null,i=null,n=null,r=null,s=null,o=null,a=null,l=null;const c=this.getValues(\"Day\");if(R(c)){const[t,u,h]=c,d=t-u,[p,f,m,g]=[2,4,6,12].map(t=>1.1/t*d);a=h+p,s=h+f,n=h+m,e=h+g,i=h-g,r=h-m,o=h-f,l=h-p}return{[on.CPPH4.id]:a,[on.CPPH3.id]:s,[on.CPPH2.id]:n,[on.CPPH1.id]:e,[on.CPPL1.id]:i,[on.CPPL2.id]:r,[on.CPPL3.id]:o,[on.CPPL4.id]:l}}},ARNUPDW:class extends Nl{constructor(t,e){super(t,!1,e)}},ARNOSC:class extends Nl{constructor(t,e){super(t,!0,e)}},TCHN:class extends Ba{constructor(t,e){const i=\"Close\"===t.inputs.Range,n=[on.High,on.Low],r=e instanceof ql&&2!==B(e.targetFields,n).length;if(!i&&r){super(t,e,wu(on.TCHNUP,()=>null,e),wu(on.TCHNLOW,()=>null,e))}else{super(t,e,gu(e,t.inputs.PeriodUpper,i?on.Close:on.High,on.TCHNUP,!0),gu(e,t.inputs.PeriodLower,i?on.Close:on.Low,on.TCHNLOW,!1))}}getWrappers(){return[this.wrapInner(on.TCHNUP,1),this.wrapInner(on.TCHNLOW,2)]}},TCHRE:class extends Ba{constructor(t,e){var i,n,r;super(t,e,(i=e,n=t.inputs.Period,r=t.inputs.Range,hu(\"TCHN\",{inputs:{PeriodUpper:n,PeriodLower:n,Range:r},outFields:[on.TCHNUP,on.TCHNLOW]},i)))}calculateAt(t){let e=null;const i=this.innVal(1,on.TCHNUP,t),n=this.innVal(1,on.TCHNLOW,t),r=this.inputs.Adjustment,s=this.inputs.Retracement;return\"Long\"===s?e=K(i)?i-r:null:\"Short\"===s&&(e=K(n)?n+r:null),{[this.target.id]:e}}},ALLG:class extends Ba{constructor(t,e){const i=wu($l,D(Al,$l),e),n=[on.ALJAW,on.ALTEETH,on.ALLIPS].map((e,n)=>fu(i,t.inputs[\"Period\".concat(n+1)],$l,e));super(t,e,...n)}calculateAt(t){return{[on.ALJAW.id]:this.innVal(1,on.ALJAW,t),[on.ALTEETH.id]:this.innVal(2,on.ALTEETH,t),[on.ALLIPS.id]:this.innVal(3,on.ALLIPS,t)}}},PLTLN:class extends Ba{constructor(t,e){super(t,e)}calculateAt(t){return{[on.PLTLN.id]:this.inputs.Position}}},AWEOSC:class extends Ba{constructor(t,e){const i=wu(Xl,D(Al,Xl),e),n=du(i,t.inputs.Period1,Xl),r=du(i,t.inputs.Period2,Xl),s=Cu(on.AWOS,(t,e,i)=>e-i,n,r);super(t,e,s,du(s,t.inputs.Period3,s.target,on.AWOSMA))}getWrappers(){return[this.wrapInner(on.AWOS,1),this.wrapInner(on.AWOSMA,2)]}},MFV:class extends Kl{constructor(t,e){super(t,!0,e)}},CLV:class extends Kl{constructor(t,e){super(t,!1,e)}},CHAMF:class extends Ba{constructor(t,e){super(t,e,Pu(e))}calculateAt(t){let e=null;if(this.atLeast(t,this.period)){let i=this.past(t,this.period,on.Volume),n=this.past(t,this.period,on.MFMUL,this.innCont(1));R(i)&&R(n)&&(e=I(n)/I(i))}return{[this.target.id]:e}}},CHAVOL:class extends Ba{constructor(t,e){super(t,e,Su(pu(wu(Zl,D(wl,Zl),e),t.inputs.Period1,Zl),t.inputs.Period2,on.EMA,t.target))}getWrappers(){return[this.wrapInner(this.target,1)]}},DPO:class extends Ba{constructor(t,e){super(t,e,du(e,t.inputs.Period,t.source)),this.shift=Math.floor(t.inputs.Period/2)+1}calculateAt(t){let e=null;const i=this.innVal(1,on.MA,t-this.shift);return null!==i&&(e=this.baseVal(this.source,t)-i),{[this.target.id]:e}}},CCI:class extends Ba{constructor(t,e){const i=bu(e);super(t,e,i,du(i,t.inputs.Period,i.target,Jl))}calculateAt(t){let e=null;if(this.atLeast(t,this.period)){let i=this.past(t,this.period,on.TP,this.innCont(1));if(R(i)){const n=this.innVal(2,Jl,t);if(null!==n){const r=i.reduce((t,e)=>t+Math.abs(n-e),0)/this.period;e=(this.innVal(1,on.TP,t)-n)/(.015*r)}}}return{[this.target.id]:e}}},EMV:class extends Ba{constructor(t,e){const i=wu(on.EMV,Ql,e);super(t,e,i,du(i,t.inputs.Period,on.EMV,on.EMVMA))}getWrappers(){return[this.wrapInner(on.EMV,1),this.wrapInner(on.EMVMA,2)]}},ERBRPOW:class extends tc{constructor(t,e){super(t,!1,e)}},ERBLPOW:class extends tc{constructor(t,e){super(t,!0,e)}},FI:class extends Ba{constructor(t,e){super(t,e,pu(wu(ec,ic,e),t.inputs.Period,ec,on.FI))}getWrappers(){return[this.wrapInner(on.FI,1)]}},MI:class extends Ba{constructor(t,e){const i=pu(wu(nc,D(wl,nc),e),9,nc,rc),n=pu(i,9,rc,sc);super(t,e,Cu(oc,(t,e,i)=>e/i,i,n))}calculateAt(t){let e=null;if(this.atLeast(t,25)){let i=this.past(t,25,oc,this.innCont(1));R(i)&&(e=I(i))}return{[this.target.id]:e}}},MOM:class extends Ba{constructor(t,e){const i=wu(on.MOM,D(ac,t.inputs.Period),e);super(t,e,i,du(i,t.inputs.Movement,on.MOM,on.MOMMA))}getWrappers(){return[this.wrapInner(on.MOM,1),this.wrapInner(on.MOMMA,2)]}},MFI:class extends Ba{constructor(t,e){super(t,e,bu(e))}calculateAt(t){let e=null;const i=this.period+1;if(this.atLeast(t,i)){const n=this.past(t,i,on.TP,this.innCont(1)),r=this.past(t,i,on.Volume);if(R(n)&&R(r)){let t=0,i=0;for(let e=1;e<n.length;++e){const s=n[e]*r[e];n[e]>n[e-1]?t+=s:i+=s}e=100-100/(1+t/i)}}return{[this.target.id]:e}}},MSD:class extends Ba{constructor(t,e){super(t,e,du(e,t.inputs.Period,t.source))}calculateAt(t){let e=null;const i=this.innVal(1,on.MA,t);if(null!==i){let n=this.past(t,this.inputs.Period,this.source);n=n.map(t=>(t-i)*(t-i)),e=Math.sqrt(N(n))}return{[this.target.id]:e}}getWrappers(){return[this.wrapInner(on.MA,1)]}},NVI:class extends cc{constructor(t,e){super(t,!0,[on.NVI,on.NVIEMA],e)}},PVI:class extends cc{constructor(t,e){super(t,!1,[on.PVI,on.PVIEMA],e)}},PPO:class extends Za{constructor(t,e){super(t,!0,\"ppo\",e)}},PVO:class extends Za{constructor(t,e){super(t,!0,\"pvo\",e)}},HV:class extends Ba{constructor(t,e){const i=Math.sqrt(function(t){switch(t){case u.Day:return 252;case u.Week:return 52;case u.Month:return 12;default:return 0}}(t.aggregation.unit));if(0===i){super(t,e,wu(t.target,()=>null,e))}else{const n=Au(wu(uc,D(hc,on.Close),e),t.inputs.Period,uc,on.MSD);super(t,e,wu(on.HV,D(dc,i),n))}}getWrappers(){return[this.wrapInner(this.target,1)]}},PERF:class extends Ba{constructor(t,e){super(t,e)}calculateAt(t){let e=null;const i=this.baseVal(this.source,0),n=this.baseVal(this.source,t);return null!==i&&null!==n&&(e=(n-i)/i*100),{[this.target.id]:e}}},WASI:class extends Ba{constructor(t,e){super(t,e)}get helpers(){return[pc]}ohlcVals(t){return[on.Open,on.High,on.Low,on.Close].map(e=>this.baseVal(e,t))}obtainR(t,e,i,n){const r=Math.abs(t-n),s=Math.abs(e-n),o=Math.abs(t-e),a=Math.max(r,s,o),l=.25*Math.abs(n-i);return a===r?r-.5*s+l:a===s?s-.5*r+l:o+l}calculateAt(t){let e=null,i=null;if(t>0){const n=this.container.getData(pc)[t-1]||0,[r,s,o,a]=this.ohlcVals(t),[l,,,c]=this.ohlcVals(t-1);if(R([r,s,o,a,l,c])){const t=Math.max(Math.abs(s-c),Math.abs(o-c)),u=this.inputs.Limit;e=(a-c+.5*(a-r)+.25*(c-l))/this.obtainR(s,o,l,c)*50*(t/u),i=n+e}}return{[pc.id]:e,[this.target.id]:i}}},WWVOL:class extends Ba{constructor(t,e){super(t,e,vu(e,t.inputs.Period))}get helpers(){return[mc,fc]}calculateAt(t){let e=null,i=null,n=null,r=null,s=this.innVal(1,on.ATR,t);if(null!==s){const o=this.baseVal(on.Close,t),a=this.baseVal(on.Close,t-1);n=Math.max(...this.past(t,this.period,on.Close)),r=Math.min(...this.past(t,this.period,on.Close));const l=s*this.inputs.Constant;if(null===this.innVal(1,on.ATR,t-1)){o>a?e=n-l:i=r+l}else{const[s,a,c,u]=[on.WWVSARU,on.WWVSARD,mc,fc].map(e=>this.container.getData(e)[t-1]);[n,r]=[c,u];null!==s?o<s?(r=o,i=o+l):(n=Math.max(o,n),e=n-l):o>a?(n=o,e=o-l):(r=Math.min(o,r),i=r+l)}}return{[mc.id]:n,[fc.id]:r,[on.WWVSARU.id]:e,[on.WWVSARD.id]:i}}},PARTP:class extends Ba{constructor(t,e){super(t,e)}get helpers(){return[gc,yc,vc]}hlcVals(t){return[on.High,on.Low,on.Close].map(e=>this.baseVal(e,t))}me(t,e){return this.container.getData(t)[e]}reciprocal(t){return 1/t}calculateAt(t){let e=null,i=null,n=null,r=null,s=null,o=null;if(t>0){const[a,l,c]=this.hlcVals(t),[u,h,d]=this.hlcVals(t-1),p=this.reciprocal(this.inputs.Acceleration),f=this.reciprocal(this.inputs.Limit);if(1===t){s=c>d?1:-1;const t=1===s;o=t?h:u,n=t?Math.max(a,u):Math.min(l,h),r=p,t?e=o:i=o}else{const[c,d,m,g,y]=[vc,on.PARSARS,on.PARSARL,gc,yc].map(e=>this.me(e,t-1)),v=1===c,T=v?m:d,b=y*Math.abs(g-T);s=v?T+b>l?-1:1:T-b<a?1:-1;const S=c===s;if(o=S?v?Math.min(T+b,h,this.baseVal(on.Low,t-2)):Math.max(T-b,u,this.baseVal(on.High,t-2)):g,n=S?v?Math.max(a,g):Math.min(l,g):1===s?a:l,r=y,S){(v?n>g:n<g)&&y<f&&(r=y+p)}else r=p;1===s?e=o:i=o}}return{[gc.id]:n,[yc.id]:r,[vc.id]:s,[on.PARSARS.id]:i,[on.PARSARL.id]:e}}},MOVLR:class extends Ba{constructor(t,e){super(t,e),this.xSum=this.period*(this.period+1)/2,this.xSum2=this.xSum*this.xSum,this.x2Sum=this.period*(this.period+1)*(2*this.period+1)/6}calculateAt(t){let e=null;if(this.atLeast(t,this.period)){let i=this.past(t,this.period,this.source);if(R(i)){const t=I(i),n=I(i.map((t,e)=>t*(e+1))),r=(this.period*n-this.xSum*t)/(this.period*this.x2Sum-this.xSum2);e=(t-r*this.xSum)/this.period+r*this.period}}return{[this.target.id]:e}}},TRSP:class extends Ba{constructor(t,e){super(t,Fa(e,t=>new Tc(t))),this.initialNotification=!0}getWrappers(){return[this.wrapInner(on.TRSP1,0),this.wrapInner(on.TRSP2,0)]}},COTLC:class extends Ac{constructor(t,e){super(t,1,e)}},COTDAG:class extends Ac{constructor(t,e){super(t,2,e)}},COTFTR:class extends Ac{constructor(t,e){super(t,3,e)}},IMPVOL:class extends Ba{constructor(t,e){super(t,Fa(e,t=>new Oc(t))),this.initialNotification=!0}getWrappers(){return[this.wrapInner(on.IMPVOL,0)]}},CTM:class extends Za{constructor(t,e){t.inputs={Period1:5,Period2:21,Period3:34},super(t,!0,\"ctm\",e)}},GPMI:class extends Za{constructor(t,e){t.inputs={Period1:3,Period2:5,Period3:8},super(t,!0,\"gpmi\",e)}},DEMA:class extends Ba{constructor(t,e){const i=pu(e,t.inputs.Period,t.source),n=pu(i,t.inputs.Period,i.target);super(t,e,Cu(on.DEMA,(t,e,i)=>2*e-i,i,n))}getWrappers(){return[this.wrapInner(on.DEMA,1)]}},TEMA:class extends Ba{constructor(t,e){const i=pu(e,t.inputs.Period,t.source),n=pu(i,t.inputs.Period,i.target),r=pu(n,t.inputs.Period,n.target);super(t,e,Cu(on.TEMA,(t,e,i,n)=>3*(e-i)+n,i,n,r))}getWrappers(){return[this.wrapInner(on.TEMA,1)]}},TSI:class extends Ba{constructor(t,e){const i=(t,e,i,n,r,s)=>{const o=pu(t,e,i,n);return pu(o,r,n,s)},n=wu(_c,D((t,e)=>({[t.id]:Math.abs(this.baseVal(on.Change,e))}),_c),e),r=i(e,t.inputs.Period1,on.Change,Ic,t.inputs.Period2,Nc),s=i(n,t.inputs.Period1,_c,Rc,t.inputs.Period2,Hc),o=Cu(on.TSI,(t,e,i)=>100*e/i,r,s);super(t,e,o,pu(o,t.inputs.Period3,on.TSI,on.TSISIG))}getWrappers(){return[this.wrapInner(on.TSI,1),this.wrapInner(on.TSISIG,2)]}},ADJATR:class extends Ba{constructor(t,e){const i=t.source,n=wu(nl,D((t,e)=>{let n=0;return e>0&&(n=this.baseVal(i,e)-this.baseVal(i,e-1)),{[t.id]:Math.abs(n)}},nl),e),r=ol(t,\"MA\")(n,t.inputs.Period,nl);super(t,e,Cu(on.ADJATR,(t,e)=>2*e,r))}getWrappers(){return[this.wrapInner(on.ADJATR,1)]}},COTR:class extends Ba{constructor(t,e){const i=wu(rl,t=>{let e=0;return t>0&&(e=this.baseVal(on.Close,t)-this.baseVal(on.Close,t-1)),{[rl.id]:e}},e),n=(\"ATR\"===t.inputs.TypeOfATR?vu:Tu)(e,t.inputs.Period,t.inputs.Smoothing);super(t,e,Cu(t.target,(t,e,i)=>K(e)&&K(i)?e/i:null,i,n))}getWrappers(){return[this.wrapInner(this.target,1)]}},MCGD:class extends Ba{constructor(t,e){super(t,e,pu(e,t.inputs.Period,on.Close))}calculateAt(t){let e=null;const i=this.container.getData(this.target)[t-1];if(K(i)){const n=this.baseVal(this.source,t);e=i+(n-i)/(.6*this.period*Math.pow(n/i,4)),Number.isFinite(e)||(e=null)}else e=this.innVal(1,on.EMA,t);return{[this.target.id]:e}}},HMA:class extends Ba{constructor(t,e){const i=t.inputs.Period,n=mu(e,Math.floor(i/2),t.source),r=mu(e,i,t.source);super(t,e,mu(Cu(Fc,(t,e,i)=>2*e-i,n,r),Math.floor(Math.sqrt(i)),Fc,t.target))}getWrappers(){return[this.wrapInner(this.target,1)]}},COPP:class extends Ba{constructor(t,e){const i=Su(e,t.inputs.PeriodRocLong),n=Su(e,t.inputs.PeriodRocShort);super(t,e,mu(Cu(Uc,(t,e,i)=>e+i,i,n),t.inputs.PeriodWma,Uc,t.target))}getWrappers(){return[this.wrapInner(this.target,1)]}},REATRHI:class extends jc{constructor(t,e){super(t,!0,e)}},REATRLO:class extends jc{constructor(t,e){super(t,!1,e)}},LINRCHN:class extends Ba{constructor(t,e){const i=t.inputs.Period,n=t.source,r=i*(i+1)/2,s=r*r,o=i*(i+1)*(2*i+1)/6;function a(){const t=this.base.getLastDataPoint(on.DateTime).getTime();if(!K(this.regression)||this.regression.lastDate!==t){let e=0,a=0;for(let t=i-1,r=1;t>=0;--t,++r){const i=this.baseVal(n,this.base.size-1-t);e+=i,a+=r*i}const l=(i*a-r*e)/(i*o-s),c=e/i-l*r/i;this.regression={slope:l,intercept:c,lastDate:t}}}const l=wu(on.LINRMID,(function(t){let e=null;if(t>=this.base.size-i){const n=t-this.base.size+i+1;a.call(this);const{intercept:r,slope:s}=this.regression;e=r+s*n}return{[on.LINRMID.id]:e}}),e);const c=wu(n,(function(t){return{[this.target.id]:this.baseVal(this.target,t)}}),e);super(t,e,l,Au(Cu(Gc,(t,e,i)=>e-i,c,l),i,Gc))}calculateAt(t){const e=this.innVal(1,on.LINRMID,t),i=this.innCont(2).getLastDataPoint(on.MSD);let n=null,r=null;return K(e,i)&&(n=e+this.inputs.Width*i,r=e-this.inputs.Width*i),{[on.LINRUP.id]:n,[on.LINRLOW.id]:r}}getWrappers(){return[this.wrapInner(on.LINRMID,1)]}},CSHO:class extends Ba{constructor(t,e){super(t,e,Fa(e,t=>{const e=et(t);var i;return e.symbol=Dt(i=t.symbol)?\"\".concat(Bt(i),\"Y00\"):null,K(e.symbol)?new Mo(e):new Eo(e)})),this.computedServerSide=!0,this.computeDone=!1}alignCashTimelineWithUnderlying(){const t=this.innCont(0);if(!K(t)||0===t.size)return;const e=this.innCont(1),i=t.getData(on.DateTime),n=e.getData(on.DateTime),r=e.getData(on.Close),s=Array(i.length).fill(null);let o=0;const a=t.size,l=e.size;for(let t=0;t<a;++t){for(;o<l&&n[o].getTime()<i[t].getTime();)o++;o<l&&n[o].getTime()===i[t].getTime()&&(s[t]=r[o])}this.container.setData(this.target,s)}calculate(t){this.computeDone||(this.container=this.makeContainer(),this.alignCashTimelineWithUnderlying(),this.computeDone=!0,this.notify(an.TS_MANYCHANGED,-1))}},CSHB:class extends Ba{constructor(t,e){super(t,e,function(t,e=on.CSHO){return hu(\"CSHO\",{target:e},t)}(e))}shouldTriggerOurRecalc(t){const e=t=>K(t)&&t.size>0;return(super.shouldTriggerOurRecalc(t)||t===this.innerSeries[1])&&e(this.innCont(0))&&e(this.innCont(1))}calculateAt(t){const e=(e,i)=>K(this.innCont(e))?this.innVal(e,i,t):null,i=e(0,on.Close),n=e(1,on.CSHO);return{[this.target.id]:K(n)&&K(i)?n-i:null}}},GTPI:class extends ll{constructor(t,e){t.inputs={Period1:5,Period2:3,Period3:3},super(t,!0,on.GTPI,e)}},PCTCHG:class extends Ba{constructor(t,e){super(t,e)}calculateAt(t){let e=null;if(t>0){const i=this.baseVal(this.source,t-1);if(null!==i){e=100*(this.baseVal(this.source,t)-i)/i}}return{[this.target.id]:e}}},OPINT:class extends Ba{constructor(t,e){super(t,e)}getWrappers(){return this.wrapBaseFields(on.TradeSize,on.Change,on.OpenInterest)}},STOMOMIX:class extends Ba{constructor(t,e){const i=gu(e,t.inputs.Period1,on.High,on.HH,!0),n=gu(e,t.inputs.Period1,on.Low,on.LL,!1),r=pu(Cu(zc,(t,e,i)=>this.baseVal(on.Close,t)-(e+i)/2,i,n),t.inputs.Period2,zc,Yc),s=pu(r,t.inputs.Period2,Yc,qc),o=pu(Cu($c,(t,e,i)=>e-i,i,n),t.inputs.Period2,$c,Xc),a=pu(o,t.inputs.Period2,Xc,Kc);super(t,e,Cu(on.STOMOMIX,(t,e,i)=>100*e/i,s,a))}getWrappers(){return[this.wrapInner(this.target,1)]}},CHDMOMOSC:class extends Ba{constructor(t,e){const i=wu(Zc,t=>{const e=on.Close,i=t>0?this.baseVal(e,t)-this.baseVal(e,t-1):0;return{[Zc.id]:i}},e);super(t,e,Cu(Jc,(t,e)=>e>=0?e:0,i),Cu(Qc,(t,e)=>e>=0?0:-e,i))}calculateAt(t){let e=null;if(this.atLeast(t,this.period+1)){const i=this.past(t,this.period,Jc,this.innCont(1)),n=this.past(t,this.period,Qc,this.innCont(2));if(R(i)&&R(n)){const t=I(i),r=I(n);e=((t,e)=>100*t/e)(t-r,t+r)}}return{[this.target.id]:e}}},VSTOP:class extends Ba{constructor(t,e){super(t,e,vu(e,t.inputs.Period))}get helpers(){return[tu,eu,iu]}calculateAt(t){let e=null,i=null,n=null,r=null,s=null,o=null,a=!0;const l=this.baseVal(on.Close,t),c=t=>((t,e)=>K(t)?t:e)(t,0),u=(t,e)=>this.container.getData(t)[e];t>0&&(n=Math.max(c(u(tu,t-1)),l),s=Math.min(c(u(eu,t-1)),l),a=u(iu,t-1));const h=this.inputs.Multiplier,d=this.innVal(1,on.ATR,t);if(K(d)){const c=a?n-h*d:s+h*d,p=u(a?on.VSTOPUP:on.VSTOPLOW,t-1),f=a?Math.max(p,c):Math.min(p,c);o=l-f>=0;const m=o!=a;i=m?l:n,r=m?l:s,e=m?o?i-h*d:r+h*d:f}return{[on.VSTOPUP.id]:o?e:null,[on.VSTOPLOW.id]:o?null:e,[tu.id]:i,[eu.id]:r,[iu.id]:o}}},SUPTR:class extends Ba{constructor(t,e){super(t,e,vu(e,t.inputs.Period))}get helpers(){return[nu,ru,su,on.BARCOLIX]}calculateAt(t){let e=0,i=0,n=0,r=null,s=0;const o=this.innVal(1,on.ATR,t);if(K(o)){const a=(t,e)=>K(t)?t:e,l=(t,e)=>this.container.getData(t)[e],[c,u,h]=[on.Close,on.High,on.Low].map(e=>this.baseVal(e,t)),d=(u+h)/2,p=this.baseVal(on.Close,t-1),f=this.inputs.Multiplier,m=d-f*o,g=d+f*o,[y,v,T]=[nu,ru,su].map(e=>l(e,t-1));e=p>y?Math.max(m,y):m,i=p<v?Math.min(g,v):g,n=c>v?1:c<y?-1:a(T,1);const b=1===n;r=b?e:i,s=b?1:0}return{[nu.id]:e,[ru.id]:i,[su.id]:n,[on.SUPTR.id]:r,[on.BARCOLIX.id]:s}}},ICHCLD:class extends Ba{constructor(t,e){const i=(t,e,i)=>Cu(i,(t,e,i)=>(e+i)/2,t,e),n=(t,n)=>i((t=>gu(e,t,on.Low,on.LL,!1))(t),(t=>gu(e,t,on.High,on.HH,!0))(t),n),r=n(t.inputs.PeriodConversionLine,on.CONVLN),s=n(t.inputs.PeriodBaseLine,on.BASELN),o=i(r,s,on.LEADSP1),a=n(t.inputs.PeriodLaggingSpan2,on.LEADSP2);super(t,e,r,s,o,a)}get helpers(){return[on.BARCOLIX]}calculateAt(t){const e=this.innVal(3,on.LEADSP1,t)>this.innVal(4,on.LEADSP2,t)?1:0;return{[on.LAGGSP.id]:this.baseVal(on.Close,t),[on.BARCOLIX.id]:e}}getWrappers(){return[this.wrapInner(on.CONVLN,1),this.wrapInner(on.BASELN,2),this.wrapInner(on.LEADSP1,3),this.wrapInner(on.LEADSP2,4)]}},VWAP:class extends Ba{constructor(t,e){super(t,e,bu(e))}get helpers(){return[ou,au]}calculateAt(t){let e=null;const i=t=>this.container.getData(t),n=(e,n=-1)=>i(e)[t+n],r=t>0,s=r?n(on.DateTime):lu,o=n(on.DateTime,0),a=r&&bt(s,o),l=a?n(ou):0,c=a?n(au):0,u=this.innVal(0,on.Volume,t),h=l+this.innVal(1,on.TP,t)*u,d=c+u;return e=h/d,{[ou.id]:h,[au.id]:d,[this.target.id]:e}}}};function uu(t){return{[te.INPUT_PERIOD]:t}}function hu(t,e,i){if(cu.hasOwnProperty(t))return new cu[t](e,i);throw new Error(\"Study \".concat(t,\" has not been implemented yet.\"))}function du(t,e,i,n=on.MA){return hu(\"MA\",{source:i,target:n,inputs:uu(e)},t)}function pu(t,e,i,n=on.EMA){return hu(\"MAEXP\",{source:i,target:n,inputs:uu(e)},t)}function fu(t,e,i,n=on.SMA){return hu(\"MASMO\",{source:i,target:n,inputs:uu(e)},t)}function mu(t,e,i,n=on.WMA){return hu(\"MAWEI\",{source:i,target:n,inputs:uu(e)},t)}function gu(t,e,i,n,r,s=!1){return new el({source:i,target:n,inputs:uu(e)},r,s,t)}function yu(t,e=on.TR){return hu(\"_TR\",{target:e},t)}function vu(t,e,i=\"SMA\",n=on.ATR){return hu(\"ATR\",{target:n,inputs:{[te.INPUT_PERIOD]:e,[te.INPUT_SMOOTHING]:i}},t)}function Tu(t,e,i=\"MA\",n=on.Close,r=on.ADJATR){return hu(\"ADJATR\",{source:n,target:r,inputs:{[te.INPUT_PERIOD]:e,[te.INPUT_SMOOTHING]:i}},t)}function bu(t,e=on.TP){return hu(\"TP\",{target:e},t)}function Su(t,e,i=on.Close,n=on.ROC){return hu(\"ROC\",{source:i,target:n,inputs:uu(e)},t)}function Pu(t,e=on.MFMUL){return hu(\"MFV\",{target:e},t)}function Au(t,e,i,n=on.MSD){return hu(\"MSD\",{source:i,target:n,inputs:uu(e)},t)}function wu(t,e,i){return new Cl({target:t},e,i)}function Cu(t,e,...i){return new Pl({target:t},e,...i)}class xu extends Va{constructor(t,e){super(t,e,pu(e,13,on.Close),function(t,e,i,n,r=on.Close){return hu(\"MACDEXP\",{source:r,inputs:{Period1:e,Period2:i,Period3:n},outFields:[on.MACD,on.MACDS,on.MACDH]},t)}(e,12,26,9,on.Close)),this.query=e.query,this.useNotifications=!0}calculateAt(t){let e=a.Same;const i=this.innVal(1,on.EMA,t),n=this.innVal(1,on.EMA,t-1),r=this.innVal(2,on.MACDH,t),s=this.innVal(2,on.MACDH,t-1);return K(i,n,r,s)&&(i>n&&r>s?e=a.Up:i<n&&r<s&&(e=a.Down)),{[on.BREL.id]:e}}getWrappers(){return this.wrapBaseFields(on.Open,on.High,on.Low,on.Close,on.Change,on.Volume,on.OpenInterest)}}function Mu(t,e){if(!K(e))return this[t];this[t]=e}class Eu{constructor(){this._domain=this._range=null}domain(){return Mu.call(this,\"_domain\",arguments[0])}range(){return Mu.call(this,\"_range\",arguments[0])}get ready(){return K(this._domain,this._range)}}class Ou extends Eu{constructor(t){super(),this.scaleType=t,this._priceDomain=null}priceDomain(){return Mu.call(this,\"_priceDomain\",arguments[0])}yToPrice(t){return this.mapValue(t)}get ready(){return K(this._domain||this._priceDomain,this._range)}mapValue(t,e=!0){if(!this.ready)return null;const i=this._domain||this._priceDomain,n=t=>t[1]-t[0],r=n(this._range),s=n(i),o=t=>(t-this._range[0])/r,a=()=>Math.log10(i[1]/i[0]);switch(this.scaleType){case y.Linear:return e?i[1]-s*o(t):this._range[1]-(t-i[0])/s*r;case y.Logarithmic:return e?Math.pow(10,Math.log10(i[1])-a()*o(t)):this._range[1]-Math.log10(t/i[0])/a()*r;default:throw new Error(\"Unexpected scale type (neither linear nor log)\")}}priceToY(t){return this.mapValue(t,!1)}getTicks(t){if(!this.ready)return[];let[e,i]=this._domain;return e===i&&t>0?[e]:function(t,e,i){let n,r,s,o,a=-1;if(i=+i,(t=+t)===(e=+e)&&i>0)return[t];(n=e<t)&&(r=t,t=e,e=r);if(0===(o=function(t,e,i){const n=Math.sqrt(50),r=Math.sqrt(10),s=Math.sqrt(2);var o=(e-t)/Math.max(0,i),a=Math.floor(Math.log(o)/Math.LN10),l=o/Math.pow(10,a);return a>=0?(l>=n?10:l>=r?5:l>=s?2:1)*Math.pow(10,a):-Math.pow(10,-a)/(l>=n?10:l>=r?5:l>=s?2:1)}(t,e,i))||!isFinite(o))return[];if(o>0)for(t=Math.ceil(t/o),e=Math.floor(e/o),s=new Array(r=Math.ceil(e-t+1));++a<r;)s[a]=(t+a)*o;else for(t=Math.floor(t*o),e=Math.ceil(e*o),s=new Array(r=Math.ceil(t-e+1));++a<r;)s[a]=(t-a)/o;n&&s.reverse();return s}(e,i,t)}}const Du={color:te.COLOR_TRANSPARENT},Lu={color:te.COLOR_TRANSPARENT,width:0,dashStyle:\"Solid\"};class _u{constructor(){this.axis=null,this.id=Ho()(),this.record=new cn,this.metaData=new fe,this.timeSeries=new Eo}get title(){return\"\"}get showPrevious(){return!1}getPreviousValue(){return null}get mainCurve(){return this.curves[0]}get hasEvents(){return!!K(this.events)&&te.EVENTS.some(t=>tt(this.events,!1,t,\"show\"))}findEvents(){return[]}get isSymbol(){return this.is(v.Symbol)}get isExpression(){return this.is(v.Expression)}get isStudy(){return this.is(v.Study)}get isForward(){return this.is(v.Forward)}get isSeasonal(){return this.is(v.Seasonal)}wrapIfAdvancedStyle(t){let e=t;return this.mainCurve.isHeikinAshiStyle?e=new Wa({outFields:et(this.mainCurve.fields)},t):this.mainCurve.isElderImpulseSystemStyle&&(e=new xu({outFields:et(this.mainCurve.fields).concat(on.BREL)},t)),e}is(t){return this.type===t}getCacheableEntities(t){this.metaData.getCacheableEntities(t.metaData),this.timeSeries.getCacheableEntities(t.timeSeries)}fromModel(t){this.type=v[t.type],this.main=t.main,t.levels&&(this.levels=t.levels),t.bands&&(this.bands=t.bands),this.curves=t.curves.map(t=>{const e=new ba;return e.plot=this,e.fromModel(t),e}),t.detachedScale&&(this.detachedScale=t.detachedScale,this.yScale=new Ou(y.Linear))}initialize(){}shutdown(){K(this.timeSeries)&&K(this.timeSeries.shutdown)&&!this.timeSeries.isCached&&this.timeSeries.shutdown(),this.isShutDown=!0}makeQuery(){const t=this.axis.pane.presenter,e=new ka(null,t.data.aggregation,T.Normal,[ot(tt(t.data,null,\"range\",\"from\")),ot(tt(t.data,null,\"range\",\"to\"))]);return e.barsToFetch=t.data.maxDataPoints||te.DEFAULT_MAX_RECORDS,e.chartId=t.renderTo,e.curveStyle=this.curves[0].style,e}priceToY(t){return(this.hasDetachedScale?this.yScale:this.axis.yScale).priceToY(t)}get hasDetachedScale(){return K(this.detachedScale,this.yScale)}setViewBox(t){if(!this.hasDetachedScale)return;const{y:e,height:i}=t,{marginTop:n,marginBottom:r}=this.detachedScale;this.yScale.range([Math.floor(e+n*i),Math.floor(e+i-r*i)])}drawLevels(t){t.save();const e=te.OUT_OF_SCREEN;for(let i of this.levels){const n=this.priceToY(i.value);ii(t,ni({line:i.line,fill:Du})),je(t,{x:-1,y:n},{x:e,y:n})}t.restore()}drawBands(t){t.save();const e=te.OUT_OF_SCREEN;for(let i of this.bands){const n=this.priceToY(i.range.to),r=this.priceToY(i.range.from);ii(t,ni({fill:i.fill,line:Lu}));Ve(t,new ke(-1,n,e,r-n),!1)}t.restore()}draw(t){K(this.levels)&&this.drawLevels(t),K(this.bands)&&this.drawBands(t);for(let e of this.curves)e.draw(t)}}function Iu(t){yt(1,arguments);var e=vt(t),i=new Date(0);return i.setFullYear(e.getFullYear(),0,1),i.setHours(0,0,0,0),i}function Nu(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,n)}return i}function Ru(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?Nu(Object(i),!0).forEach((function(e){Hu(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):Nu(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}function Hu(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}class ku extends _u{get symbol(){return this._symbol}set symbol(t){this._symbol!==t&&(this._symbol=t,this.getTimeSeries(),this.getMetaData())}get title(){return this.symbol}get showPrevious(){return this._showPrevious}getPreviousValue(){return K(this.timeSeries)&&K(this.timeSeries.record)?this.timeSeries.record.getValue(on.PreviousClose):null}getTimeSeries(){const t=Yp().getTimeSeriesDataSource();let e=this.makeQuery();e.symbol=this.symbol,this.mainCurve.isRenko&&(e.barsToFetch=9e3);let i=t.getTimeSeries(e);this.timeSeries=this.wrapIfAdvancedStyle(i),this.timeSeries.ready().then(t=>{t&&(Po.a.publish(an.TS_MANYCHANGED,{series:this.timeSeries,part:x.Unspecified}),this.getEvents())})}getMetaData(){const t=Yp().getMetaDataSource();this.metaData=t.getMetaData(this.symbol),this.metaData.ready().then(t=>{t&&Po.a.publish(an.MD_CHANGED,{plot:this})})}getEvents(){if(!this.hasEvents)return;const t=Yp().getTimeSeriesDataSource(),e={symbol:this.symbol,seriesKind:T.Events,getHashKey:function(){return Object.values(this).filter(t=>\"function\"!=typeof t).join(\"|\")}};te.EVENTS.forEach(t=>{e[t]=tt(this.events,!1,t,\"show\")}),this.eventsSeries=t.getTimeSeries(e),this.eventsSeries.ready().then(t=>{t&&Po.a.publish(an.TS_EVENTSCHANGED,{series:this.eventsSeries})})}get hasEventsData(){return this.hasEvents&&K(this.eventsSeries)&&this.eventsSeries.hasData&&this.eventsSeries.container.size>0}findEvents(t){return this.hasEventsData?this.eventsSeries.container.getTimeData().map((e,i)=>this.compare(e,t)?this.getEventsAt(i):[]).flat():[]}fromModel(t){super.fromModel(t),this._showPrevious=t.showPrevious,this.events=t.events,this.symbol=t.symbol,this.compare=function(t){switch(t.unit){case u.Tick:case u.Intraday:return ji;case u.Day:return Ui;case u.Week:return Bi;case u.Month:return Vi;case u.Quarter:return Wi;case u.Year:return _i;default:return ji}}(this.axis.pane.presenter.data.aggregation)}draw(t){super.draw(t),this.hasEventsData&&this.drawEvents(t)}getEventsAt(t){const e=this.eventsSeries.container,i=i=>e.getData(i)[t];return e.fields.filter(t=>t!==on.DateTime).map(t=>{const e=i(t);if(!K(e))return null;const n=this.events[t.id.toLowerCase()];return K(n)&&n.show?{field:t,value:e,date:i(on.DateTime),text:n.title,color:n.color}:null}).filter(t=>t)}drawEvents(t){const e=this.axis.pane.presenter,i=e.view.xAxis.xScale,n=i.domain();if(!K(n)||!K(n[0],n[1]))return;const r=(t,e=on.DateTime)=>t.container.getData(e),s=r(this.eventsSeries),o=this.timeSeries,a=r(o),l=e.data.aggregation,c=r(o,this.curves[0].isOhlc?on.High:l.isTick?on.Last:on.Close);let h=-1,d=0;const{chart:{fontFamily:p}}=this.axis.pane.presenter.display,f=s.map((t,r)=>{if(!(t=>+t>=+n[0]&&+t<=+n[1])(t))return[];return this.getEventsAt(r).map(t=>{const n=function(t,e){const{unit:i}=t;return i===u.Year?Iu(e):i===u.Quarter?Hi(e):i===u.Month?St(e):i===u.Week?Ii(e):i===u.Day?Tt(e):e}(l,t.date),r=G(a,+n,Number),s=c[r];r===h?d++:d=0;const o=i.timeToX(n),p=Fu(e.view),f=this.axis.yScale.priceToY(s)-d*(p+p+p);return h=r,Ru(Ru({visible:!0},t),{},{x:o,y:f,r:p})})}).flat();t.save(),f.forEach(e=>function(t,{x:e,y:i,r:n,color:r,text:s},o){const a=n;t.fillStyle=r,t.beginPath();const l=n+n,c=l;t.fillRect(e-n,i-a-c,l,c);const u=(1.6*n).toFixed(0);t.font=\"700 \".concat(u,'px \"').concat(o,'\"'),t.fillStyle=\"#fff\",t.textAlign=\"center\",t.textBaseline=\"middle\",t.beginPath(),t.fillText(s,e,i-.9*c)}(t,e,p)),t.restore()}}function Fu(t){const e=t.xAxis.xScale.bar.width/2;return Math.max(e,te.MIN_EVENT_RADIUS)}class Uu extends ku{constructor(t){super(),this.seriesKind=t}get showPrevious(){return!1}get title(){return\"\".concat(this.curves[0].fields[0].name,\"(\").concat(u[this.fundamental].substring(0,1),\")\")}fromModel(t){this.fundamental=u[t.fundamental],super.fromModel(t)}makeQuery(){let t=new ka(this.symbol,new Gi(this.fundamental),this.seriesKind);return t.fields=this.curves[0].fields,t}}class Bu extends _u{get params(){if(!K(this._params)){let t=this.model.inputs||[];const e=t.length;if(0===e)return\"\";let i=\"\";e>3&&(t=t.slice(0,3),i=\", ...\"),this._params=0===t.length?\"\":\"(\".concat(t.map(t=>t.value).join(\", \")).concat(i,\")\")}return this._params}get shiftFmt(){if(!K(this._shiftFmt)){const t=this.curves.map(t=>Number(t.shift)).filter(t=>0!==t);this._shiftFmt=0===t.length?\"\":\"[\".concat(t.join(\", \"),\"]\")}return this._shiftFmt}get title(){if(!K(this._title)){const t=this.params,e=this.shiftFmt;this._title=\"\".concat(this.model.study,\" \").concat(t,\" \").concat(e).trim()}return this._title}fromModel(t){this.model=t,super.fromModel(this.model)}getOptions(){let t={};t.source=on[this.model.source],t.inputs=st(this.model.inputs);const e=void 0!==this.model.target;return t.outFields=e?[on[this.model.target]]:this.curves.reduce((t,e)=>t.concat(e.fields),[]),t.target=e?on[this.model.target]:t.outFields[0],t.aggregation=this.axis.pane.presenter.data.aggregation,t}getMetaData(){const t=yi(this.model.study),e=t.meta.decimals;this.metaData=void 0!==e?new pe(e):this.basePlot.metaData,K(t.meta.range)&&(this.range=t.meta.range)}applyShift(t){if(\"ICHCLD\"===this.model.study){const e=t.inputs.Displacement;this.curves[2].shift=-e,this.curves[3].shift=e,this.curves[4].shift=e,this.curves[5].shift=e}}initialize(){if(this.model.basis===te.BASIS_MAIN){this.removeNotApplicableCurves(),this.basePlot=this.axis.pane.presenter.mainPlot,this.getMetaData();const t=this.getOptions();this.applyShift(t),this.timeSeries=hu(this.model.study,t,this.basePlot.timeSeries),this.timeSeries.useNotifications=!0;const e=this.title,i=this.basePlot.timeSeries instanceof Eo;this.timeSeries.ready().then(t=>{t||i||console.error(\"Unable to calculate study values for \".concat(e))})}}removeNotApplicableCurves(){const t=this.axis.pane.presenter.mainPlot,e=t.type===v.Symbol&&kt(t.symbol);this.curves=this.curves.filter(t=>!t.fields.includes(on.OpenInterest)||!!e&&this.axis.pane.presenter.data.aggregation.isEndOfDay)}}class Vu{constructor(t,e,i){this.id=Ho()(),this.axis=t,this.passive=!1,void 0!==e&&void 0!==i&&(this.price=e,this.time=i,this.toPoint()),this.moveDirection=w.Both}get movable(){return this.moveDirection!==w.None}get presenter(){return this.pane.presenter}get pane(){return this.axis.pane}toPoint(){const t=this.axis.toPoint(this);K(t)&&J(t.x)&&J(t.y)&&(this.point=t)}update(t,e){this.price=t,this.time=e,this.toPoint()}updateFromPoint(t){const e=this.axis.toAnnotationPoint(t);this.price=e.price,this.time=e.time,this.point=t}hitTest(t){return this.distance(t)<=te.HIT_TEST_TOLERANCE}distance(t){const e=t.x-this.point.x,i=t.y-this.point.y;return Math.abs(Math.sqrt(e*e+i*i)-te.HALF_ANN_POINT_DIMENSION)}draw(t){if(K(this.point)){const e=te.HALF_ANN_POINT_DIMENSION;t.beginPath(),t.ellipse(this.point.x,this.point.y,e,e,0,0,2*Math.PI),t.stroke()}}}class Wu extends _u{get title(){return this.expression}get expression(){return this._expression}set expression(t){this.parseExpression(t),this.getMetaData(),this.getTimeSeries()}parseExpression(t){const{model:e,error:i,clean:n,text:r,symbols:s}=kl(t);i?(this.errorText=i,this.exprModel=null):this.exprModel=e,this._expression=this.isValid?n:r,this.symbols=this.isValid?s:null}get isValid(){return!K(this.errorText)}getTimeSeries(){const t=this.getInnerSeries();let e=new ql(this.exprModel,t);this.timeSeries=this.wrapIfAdvancedStyle(e);const i=this.title;this.timeSeries.ready().then(t=>{t||console.error(\"Unable to calculate expression: \".concat(i))})}getInnerSeries(){const t=Vl(this.exprModel),e=Yp().getTimeSeriesDataSource();return t.map(t=>{let i=this.makeQuery();return i.symbol=t,e.getTimeSeries(i)})}getMetaData(){this.isValid&&(this.metaData=new me(this.symbols),this.metaData.ready().then(t=>{t&&Po.a.publish(an.MD_CHANGED,{plot:this})}))}fromModel(t){super.fromModel(t),this.expression=t.expression}}class ju{constructor(){this.longPressTimeout=null}startLongPress(t,e,i){$()&&(this.longPressTimeout=setTimeout(()=>this.longPressTriggered(t,e,i),te.LONG_PRESS_TIMEOUT_MILLIS))}longPressTriggered(t,e,i){this.cancelLongPress(),this.performLongPress(t,e,i)}cancelLongPress(){$()&&K(this.longPressTimeout)&&(clearTimeout(this.longPressTimeout),this.longPressTimeout=null)}performLongPress(t,e,i){}}class Gu extends ju{constructor(t,e,i){super(),this.annotation=t,this.previous=e,this.cursorSet=!1,this.moved=!1,this.snapToSupported=!1,this.startLongPress(null,i)}performLongPress(t,e){_h(this.annotation,e)}onMouseMove(t){this.cancelLongPress(),this.annotation.axis.pane.presenter.enableTooltip(!1);const{point:e,view:i,offset:n}=t;i.drawCrosshair({ap:e,offset:n}),this.cursorSet||(this.previous.axis.pane.presenter.view.setCursor(S.Move),this.cursorSet=!0);const r=xe(e.point,this.previous.point);this.annotation.offset(r),this.annotation.wasModifiedByTool(),this.annotation.requestRedraw(),this.previous=e,this.moved=!0}onMouseUp(t){this.cancelLongPress(),yd(this.annotation,this.moved)}}class zu{constructor(t,e){this.annotation=t,this.pointIndex=t.points.indexOf(e),this.snapToSupported=!0}onMouseMove(t){this.alignPointsMode=t.getModifier(A.Shift),this.annotation.axis.pane.presenter.enableTooltip(!1);const{point:e,view:i,offset:n}=t;if(i.drawCrosshair({ap:e,offset:n}),K(e)){const t=this.annotation.points[this.pointIndex],i=xe(e.point,t.point);switch(t.moveDirection){case w.Both:t.update(e.price,e.time);break;case w.Horizontal:t.update(t.price,e.time);break;case w.Vertical:t.update(e.price,t.time)}t.moveDirection!==w.None&&this.annotation.wasPointMovedByTool(t,i)}this.annotation.requestRedraw()}onMouseUp(t){yd(this.annotation)}}class Yu{constructor(t,e,i){this.anchor=t,this.isVertical=e,this.axis=i}hitTest(t){return!!K(this.anchor)&&(this.isVertical?Math.abs(t.x-this.anchor.x)<=te.HIT_TEST_TOLERANCE:Math.abs(t.y-this.anchor.y)<=te.HIT_TEST_TOLERANCE)}draw(t){const e=te.OUT_OF_SCREEN;this.isVertical?Ge(t,this.anchor.x,-e,e):ze(t,this.anchor.y,-e,e)}}function qu(t){return 0===Ne(t.fill.color).a?t.line.color:t.fill.color}class $u{constructor(t,e){this.points=[],this.isSelected=!1,this.drawn=!0,this.axis=t,this.name=e,this.id=Ho()(),this.alignPointsSupported=!1,this.visible=!0}requestRedraw(){this.axis.pane.presenter.view.redraw()}prepareDraw(t,e){return this.drawPoints(t,e),this.readyToDraw()}readyToDraw(){return this.activePoints.every(t=>void 0!==t.point)}getPriceScaleAdornments(){return te.EMPTY_ARRAY}getTimeScaleAdornments(){return te.EMPTY_ARRAY}extractTraits(t=!0){let e=et(this.traits);const i=li(this.name);return Object.keys(e).forEach(n=>{const r=i.includes(n);(t&&!r||!t&&r)&&delete e[n]}),t||[\"line\",\"fill\",\"zIndex\"].forEach(t=>delete e[t]),e}extractPoints(){return this.activePoints.map(t=>({price:t.price,time:Z(t.time,4)}))}offset(t){this.points.filter(t=>t.movable).forEach(e=>{e.updateFromPoint(Me(e.point,t))})}get traits(){return this._traits||(this._traits=et(this.defaultTraits)),this.adjustFill&&(this._traits.fill.color=qu(this._traits),this.adjustFill=!1),this._traits}set traits(t){void 0!==t&&lt(this.traits,t)}get activePoints(){return this.points.filter(t=>!t.passive)}get style(){return ni(this.traits)}get defaultTraits(){return ei(this.axis.pane.presenter.display,this.name)}get defaultStyle(){return ni(this.defaultTraits)}get adornStyle(){const t=et(this.defaultTraits);return t.fill.color=this.traits.line.color,t.line.width=0,t.line.color=te.COLOR_TRANSPARENT,ni(t)}get pointsStyle(){const t=et(this.defaultTraits);return t.line.dashStyle=\"Solid\",ni(t)}wasModifiedByTool(){}wasPointMovedByTool(t,e){}drawPoints(t,e){this.points.forEach(i=>{void 0!==i.price&&(e&&i.toPoint(),K(t)&&(this.isSelected||this.drawn)&&(ii(t,this.pointsStyle),i.draw(t)))})}addPoints(t){for(let e=0;e<t;e++)this.points.push(new Vu(this.axis))}toModel(){const t=this.extractPoints();return{id:this.name,visible:this.visible,points:t,traits:this.traits}}canMove(t){return!0}updatePoints(t){}updateFrom(t,e,i,n){\"boolean\"==typeof n&&(this.visible=n);let r=K(t)?et(t):{};K(e)&&lt(r,e),this.traits=r,K(i)&&this.updatePoints(i)}}function Xu(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,n)}return i}function Ku(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}class Zu extends $u{constructor(t,e){super(t,e)}draw(t,e){if(this.prepareDraw(t,e)&&!this.drawn){const e=this.getElements();ii(t,this.style),e.forEach((e,i)=>{ii(t,this.getStyleForElement(e,i)),e.draw(t)}),ii(t,this.adornStyle),this.adornElements(e,t);const i=this.getMarkers();ii(t,this.style),i.forEach(e=>{e.draw(t)})}}getStyleForElement(t,e){return this.style}getAdornOffset(t,e=!1){const i=function(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?Xu(Object(i),!0).forEach((function(e){Ku(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):Xu(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}({},te.DEFAULT_ADORN_OFFSET);return e&&(i.y=-(Ue(t,1)+i.y)),i}adornElements(t,e){}hitTest(t){if(!this.drawn&&this.visible){const e=this.getElements(),i=this.getMarkers();return e.some(e=>e.hitTest(t))||i.some(e=>e.hitTest(t))}return!1}updatePointsFrom(t,e=0){t.forEach((t,i)=>this.points[e+i].update(t.price,t.time))}updatePoints(t){this.allowPricesChangeUI&&this.updatePointsFrom(t)}getMarkers(){return[]}get marker(){return this.traits[te.AT_MARKER]}get showPrices(){return this.traits[te.AT_SHOW_PRICES]}get showTimestamps(){return this.traits[te.AT_SHOW_TIMESTAMPS]}get showBarCount(){return this.traits[te.AT_SHOW_BARCOUNT]}get allowPricesChangeUI(){return li(this.name).includes(te.AT_ALLOW_PRICES_CHANGE_UI)}}class Ju extends Vu{constructor(t,e,i){super(t),this.passive=!0,this.priceRef=e,this.timeRef=i}get price(){return this.priceRef.price}get time(){return this.timeRef.time}set price(t){this.priceRef.price=t}set time(t){this.timeRef.time=t}}class Qu{constructor(t){this.points=t}get left(){return Math.min(this.points[0].point.x,this.points[1].point.x)}get top(){return Math.min(this.points[0].point.y,this.points[1].point.y)}get width(){return Math.abs(this.points[1].point.x-this.points[0].point.x)}get height(){return Math.abs(this.points[1].point.y-this.points[0].point.y)}getRect(){return K(this.points[0].point,this.points[1].point)?new ke(this.left,this.top,this.width,this.height):null}}function th(t){const e=new Vu(t),i=new Vu(t);return[e,i,new Ju(t,e,i),new Ju(t,i,e)]}class eh extends $u{constructor(t,e){super(t,e),this.points=th(t),this.helper=new Qu(this.points)}get left(){return this.helper.left}get top(){return this.helper.top}get width(){return this.helper.width}get height(){return this.helper.height}getRect(){return this.helper.getRect()}draw(t,e){return!!this.prepareDraw(t,e)&&(ii(t,this.style),!0)}}class ih{constructor(t,e,i,n){this.points=t,this.lines=e,this.axis=n,this.fixupBottomRight=i,this.helper=new Qu(this.points)}hitTest(t){const e=this.getRect();return!!K(e)&&e.contains(t)}getRect(){return this.helper.getRect()}get fontSize(){if(0===this.lines.length)return 0;const{height:t}=this.getRect();return Math.floor(t/this.lines.length)}draw(t){if(0===this.lines.length)return;t.save();const{x:e,y:i}=this.helper.getRect();if(this.fixupBottomRight){const n=Math.max(...this.lines.map(e=>t.measureText(e).width));this.points[1].updateFromPoint({x:e+n,y:i+13*this.lines.length}),this.fixupBottomRight=!1}const n=this.fontSize;t.textAlign=\"left\",t.textBaseline=\"top\";const{chart:{fontFamily:r}}=this.axis.pane.presenter.display;t.font=\"\".concat(n,\"px \").concat(r),this.lines.forEach((r,s)=>{const o=i+n*s;t.fillText(r,e,o)}),t.restore()}}class nh extends Zu{constructor(t,e){super(t,e),this.textEditable=!0,this.points=th(t),this.adjustFill=!0,this.fixupBottomRight=!1}get textLines(){return this.traits[te.AT_TEXT_LINES]}set textLines(t){this.traits[te.AT_TEXT_LINES]=t,this._textAnnElement=null}get textElement(){return K(this._textAnnElement)||(this._textAnnElement=new ih(this.points,this.textLines,this.fixupBottomRight,this.axis)),this._textAnnElement}getElements(){return[this.textElement]}}class rh extends nh{constructor(t,e,i){super(t,e),this.textEditable=!1,K(i)&&(this.handleExtraPoints(i.points,!0),lt(this.traits,i),delete this.traits.points,this.fixupBottomRight=!0)}prepareDraw(t,e){return this.points.slice(4).forEach(t=>t.moveDirection=w.None),super.prepareDraw(t,e)}canMove(t){return!!this.visible&&this.textElement.hitTest(t)}updatePoints(t){this.handleExtraPoints(t.slice(2),!1)}handleExtraPoints(t,e){K(t)&&(e&&this.addPoints(t.length),this.updatePointsFrom(t,4))}get drawLines(){return this.traits[te.AT_DRAW_LINES]}updateFrom(t,e,i,n){if(super.updateFrom(t,e,i,n),K(e)&&K(e.textLines)){const t=this.textElement.scale;this.textLines=e.textLines,K(t)&&(this.textElement.scale=t)}}getElements(){const t=super.getElements();if(!this.drawLines)return t;const e=this.points.slice(4).map(t=>new Yu(t.point,!1,this.axis));return t.concat(e)}}class sh{constructor(t,e){this.factory=t,this.existing=e,this.isNew=!K(e),this.isNew||(this.anchor=this.existing.points[0]),this.clicks=0,this.snapToSupported=!1,this.isDrawingAnnotation=this.isNew}getChartParent(){return this.anchor.axis.pane.presenter.view.canvasContainer}styleProps(){if(this.isNew){return{height:100,fontSize:\"100%\",color:qu(ei(this.anchor.axis.pane.presenter.display,\"Text\"))}}{const t=this.existing.textElement;return{height:1.05*t.getRect().height,fontSize:\"\".concat(Math.round(t.fontSize),\"px\"),color:this.existing.traits[te.AT_FILL].color}}}onMouseDown(t){const{point:e}=t;if(this.isNew)if(0===this.clicks){if(void 0===e)return void Td(t);e.axis.pane.presenter.clearSelection(),this.anchor=e,this.clicks++,this.startEditing()}else this.onEndEditing();else this.onEndEditing()}startEditing(){this.textArea=document.createElement(\"textarea\");const{x:t,y:e}=this.anchor.point,i=this.anchor.axis.pane.getBounds(),n=i.x+i.width-this.anchor.point.x,{height:r,fontSize:s,color:o}=this.styleProps();zt(this.textArea,{position:\"absolute\",top:\"\".concat(e,\"px\"),left:\"\".concat(t,\"px\"),border:\"none\",outline:\"none\",overflow:\"hidden\",height:\"\".concat(r,\"px\"),width:\"\".concat(n,\"px\"),resize:\"none\",backgroundColor:\"rgba(255, 255, 255, 0.05)\",zIndex:5,fontSize:s,color:o}),this.getChartParent().appendChild(this.textArea),this.textArea.onblur=this.onEndEditing.bind(this),this.isNew||(this.textArea.value=this.existing.textLines.join(\"\\n\"),this.existing.textLines=\"\",this.existing.requestRedraw()),setTimeout(()=>this.textArea.focus(),100)}onEndEditing(){const t=this.anchor,e=this.isNew?this.factory(t.axis):this.existing,i=this.textArea.value.split(\"\\n\");if(this.isNew){const{actualWidth:n,actualHeight:r}=this.getTextDimensions(i);e.points[0].update(t.price,t.time);const{x:s,y:o}=e.points[0].point;e.points[1].updateFromPoint({x:s+n,y:o+r}),e.drawn=!1}e.textLines=i,this.textArea.onblur=null,this.getChartParent().removeChild(this.textArea),e.requestRedraw(),this.isNew||e.requestRedraw(),yd(e,!0)}getTextDimensions(t){const e=window.getComputedStyle(this.textArea).getPropertyValue(\"font-size\"),i=parseFloat(e)*t.length;let n=0;const r=this.anchor.axis.pane.presenter,s=r.view.mainContext;s.save();const{chart:{fontFamily:o}}=r.display;s.font=\"\".concat(e,\" \").concat(o);for(let e=0;e<t.length;e++){const i=s.measureText(t[e]).width;i>n&&(n=i)}return s.restore(),{actualWidth:n,actualHeight:i}}}const oh={delete:'<path d=\"M5.293 6.707l5.293 5.293-5.293 5.293c-0.391 0.391-0.391 1.024 0 1.414s1.024 0.391 1.414 0l5.293-5.293 5.293 5.293c0.391 0.391 1.024 0.391 1.414 0s0.391-1.024 0-1.414l-5.293-5.293 5.293-5.293c0.391-0.391 0.391-1.024 0-1.414s-1.024-0.391-1.414 0l-5.293 5.293-5.293-5.293c-0.391-0.391-1.024-0.391-1.414 0s-0.391 1.024 0 1.414z\"></path>',circle:'<circle cx=\"12\" cy=\"12\" r=\"10\"/>',chevronUp:'<path d=\"M18.707 14.293l-6-6c-0.391-0.391-1.024-0.391-1.414 0l-6 6c-0.391 0.391-0.391 1.024 0 1.414s1.024 0.391 1.414 0l5.293-5.293 5.293 5.293c0.391 0.391 1.024 0.391 1.414 0s0.391-1.024 0-1.414z\"></path>',chevronDown:'<path d=\"M5.293 9.707l6 6c0.391 0.391 1.024 0.391 1.414 0l6-6c0.391-0.391 0.391-1.024 0-1.414s-1.024-0.391-1.414 0l-5.293 5.293-5.293-5.293c-0.391-0.391-1.024-0.391-1.414 0s-0.391 1.024 0 1.414z\"></path>'};function ah({plots:t,isMultiSymbol:e,isMultiContract:i,date:n,time:r}){const s=[ph(\"Date\",n,null,\"heading\"),r?ph(\"Time\",r,null,\"heading\"):\"\"],o=t.map(t=>{if(0===t.values.length)return null;const n=(t=>(e||i)&&t.type===v.Symbol||e&&t.type===v.Expression&&t.isMain)(t)?fh(v[t.type],t.name,t.values[0].color):\"\",r=t.values.map(t=>ph(t.longName,t.value,t.color));if(t.events&&t.events.length){const e=t.events.map(t=>fh(\"\".concat(t.field.name,\" (\").concat(ha(u.Day,t.date),\")\"),t.value,t.color));r.push(...e)}return r.unshift(n),r}).flat(),a=s.concat(o).filter(t=>\"\"!==t).join(\"\");return'<table class=\"values-table\">'.concat(a,\"</table>\")}function lh(t,{panes:e,date:i,time:n},r=!1,s=!1,o=!1){return e.map((a,l)=>{const c=r?a.plots:a.plots.filter(t=>!t.isMain),u=t.mainPlot.axis.pane.id===a.id,h=o&&u?'<span class=\"field-name\" style=\"padding-right:5px\">'.concat(i,\" \").concat(n||\"\",\"</span>\"):\"\",d=\"\".concat(h).concat(c.map(t=>function({id:t,name:e,type:i,error:n,description:r,values:s,events:o,isMain:a},l,c){const u=n||r,h=\"value-title\".concat(a?\" value-main\":\"\"),d=v[i],p=[\"Study\",\"BalanceSheet\",\"IncomeStatement\"].includes(d)||\"Expression\"===d&&!c?function(t){return'<a class=\"delete-plot\" data-plot-id=\"'.concat(t,'\">').concat(uh(\"delete\"),\"</a>\")}(t):\"\",f=l?s.map(t=>mh(a?t.abbreviation:null,t.value,t.color)).join(\" \")+dh(o):\"\";return'\\n        <div class=\"plot\" style=\"flex: 0 0 auto\">\\n            '.concat(p,'\\n            <a class=\"').concat(h,'\" ').concat(u?'title=\"'.concat(u,'\" '):\"\",'data-plot-id=\"').concat(t,'\">').concat(e,\"</a>\\n            \").concat(f,\"\\n        </div>\\n    \").trim()}(t,s,u)).join(\"\")),p=function(t,e){const i=t<e-1;return[\"\".concat(t>0?hh(!0,t):\"\"),\"\".concat(i?hh(!1,t):\"\")].join(\" \").trim()}(l,e.length);return{id:\"bc-tip-\".concat(a.id.substring(0,8)),isMainPane:u,content:d,moveContent:p,bounds:a.bounds}})}function ch(t){return\"bchart-icon-\".concat(t)}function uh(t,e=null){const i=K(e)?'style=\"fill:'.concat(e,'\"'):\"\",n=ch(t);return'<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"10px\" height=\"10px\" '.concat(i,'><use xlink:href=\"#').concat(n,'\"></use></svg>')}function hh(t,e){const i=t?\"up\":\"down\";return'\\n        <span\\n            data-pane=\"'.concat(e,'\" \\n            data-dir=\"').concat(i,'\"\\n            title=\"Move ').concat(t?\"Up\":\"Down\",'\" \\n            class=\"move-pane\">\\n            ').concat(uh(t?\"chevronUp\":\"chevronDown\"),\"\\n        </span>\\n    \")}function dh(t){if(t&&t.length){const e=t.map(t=>mh(\"\".concat(t.field.name,\" (\").concat(ha(u.Day,t.date),\")\"),t.value,t.color)).join(\" \");return\"Event \".concat(e)}return\"\"}function ph(t,e,i=null,n=[]){\"string\"==typeof n&&(n=n.split(\" \"));const r=[\"value-row\",...n],s=\"string\"==typeof i?' style=\"color: '.concat(i,'\"'):\"\";return'\\n        <tr class=\"'.concat(r.join(\" \"),'\">\\n            <td class=\"field-name\">').concat(t,\"</td>\\n            <td\").concat(s,' class=\"field-value\">').concat(e,\"</td>\\n        </tr>\\n    \")}function fh(t,e,i=null){return ph(t,e,i,\"value-title\")}function mh(t,e,i){const n=\"string\"==typeof i?' style=\"color: '.concat(i,'\"'):\"\",r=K(t)?'<span class=\"field-name\">'.concat(t,\"</span>\"):\"\";return\"\".concat(r,\"<span\").concat(n,' class=\"field-value\">').concat(e,\"</span>\")}function gh(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,n)}return i}function yh(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?gh(Object(i),!0).forEach((function(e){vh(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):gh(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}function vh(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}function Th(t){return Yp().config.tooltipMovement===t}function bh(){return Th(E[E.Draggable])}function Sh(){return Th(E[E.Auto])}const Ph=te.TOOLTIP_STD_LEGACY_CLASS,Ah=te.TOOLTIP_STD_CLASS,wh=te.TOOLTIP_BUBBLE_CLASS;class Ch{constructor(t){this.view=t,this.tooltipElem=$t(t.el,\"div\"),Yt(this.tooltipElem,{id:\"\".concat(t.presenter.renderTo,\"-global-tooltip\"),class:\"\".concat(Ah,\" \").concat(Ph)}),this.leftSide=!0,zt(this.tooltipElem,{visibility:\"hidden\",position:\"absolute\",cursor:bh()?\"move\":\"default\",zIndex:20,top:\"\".concat(te.TOOLTIP_Y_OFFSET,\"px\"),left:\"\".concat(te.TOOLTIP_X_OFFSET,\"px\")}),this.setMode(t.presenter.display.tooltip.mode),this.isDrag=!1,this.startDrag=()=>{this.isDrag=!0},this.stopDrag=()=>{this.isDrag=!1},this.handleMouseMove=this.handleMouseMove.bind(this),this.view.el.addEventListener(\"mousemove\",this.handleMouseMove),this.view.el.addEventListener(\"mouseleave\",this.stopDrag),this.tooltipElem.addEventListener(\"mousedown\",this.startDrag),this.tooltipElem.addEventListener(\"mouseup\",this.stopDrag)}setMode(t){if(this.mode!==t)if(this.mode=t,t===te.TOOLTIP_BUBBLE)this.canDrag=!1,this.tooltipElem.style.transition=null,this.tooltipElem.classList.remove(Ah,Ph),this.tooltipElem.classList.add(wh),zt(this.tooltipElem,{pointerEvents:\"none\"});else{this.canDrag=bh(),this.tooltipElem.classList.remove(wh),this.tooltipElem.classList.add(Ah,Ph);const t=te.TOOLTIP_TOGGLE_SIDE_ANIM_MS;zt(this.tooltipElem,{pointerEvents:\"all\",top:\"\".concat(te.TOOLTIP_Y_OFFSET,\"px\"),left:\"\".concat(te.TOOLTIP_X_OFFSET,\"px\"),transition:Sh()?\"left \".concat(t,\"ms ease-out\"):null})}}show(t,e){const i=this.tooltipElem;if(e){const{width:t,height:n,leftOffset:r,rightOffset:s}=this.view,o=i.getBoundingClientRect(),a=o.width/2,l=i.style,c=te.TOOLTIP_BUBBLE_OFFSET,u=e.yMin-o.height-c,h=e.x-a,d=e.yMax+c,p=d+o.height,f=u<0?p<n?d:0:u;let m=h;const g=t-s;m<r?m=r:m+o.width>g&&(m=g-o.width),l.top=\"\".concat(f,\"px\"),l.left=\"\".concat(m,\"px\")}\"hidden\"===i.style.visibility&&(i.style.visibility=\"visible\"),Kt(i,t)}hide(){this.tooltipElem.style.visibility=\"hidden\"}remove(){this.view.el.removeEventListener(\"mousemove\",this.handleMouseMove),this.view.el.removeEventListener(\"mouseleave\",this.stopDrag),this.tooltipElem.removeEventListener(\"mousedown\",this.startDrag),this.tooltipElem.removeEventListener(\"mouseup\",this.stopDrag),function(t){let e=t;\"string\"==typeof t&&(e=Gt(t)),e&&e.parentNode.removeChild(e)}(this.tooltipElem)}reposition(t,e){zt(this.tooltipElem,{left:\"\".concat(t,\"px\"),top:\"\".concat(e,\"px\")})}handleMouseMove(t){if(this.isDrag&&this.canDrag){const{movementX:e,movementY:i}=t,{top:n,left:r}=this.tooltipElem.style,s=parseInt(n)+i,o=parseInt(r)+e;this.reposition(o,s)}else if(Sh()){const e=this.tooltipElem.getBoundingClientRect(),i=this.view.el.getBoundingClientRect(),n=t.pageX,r=te.TOOLTIP_TOGGLE_DISTANCE_TOLERANCE,s=i.width>2*e.width,o=n>e.x&&n<=e.right+r,a=n<e.x&&n>=e.x-r;s&&(o||a)&&this.toggleSide()}}repositionAuto(){if(Sh()){const t=this.view.presenter.mainPane.getBoundsWithoutScales(),e=this.tooltipElem.offsetY,i=this.leftSide?te.TOOLTIP_X_OFFSET:t.x+t.width-this.tooltipElem.offsetWidth-te.TOOLTIP_X_OFFSET;this.reposition(i,e)}}toggleSide(){this.isToggling||(this.isToggling=!0,setTimeout(()=>this.isToggling=!1,te.TOOLTIP_TOGGLE_SIDE_ANIM_MS),this.leftSide=!this.leftSide,this.repositionAuto())}}function xh(t,{time:e,lastBarRefresh:i,justMain:n,offset:r}){K(Gt(\".\".concat(te.SVG_ICONS_DOM_NODE)))||function(){const t=$t(document.body,\"div\");Yt(t,{class:te.SVG_ICONS_DOM_NODE});const e=Object.keys(oh).map(t=>'<symbol id=\"'.concat(ch(t),'\" viewBox=\"0 0 24 24\">').concat(oh[t],\"</symbol>\")).join(\"\");t.innerHTML='<svg style=\"display:none\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\"><defs>'.concat(e,\"</defs></svg>\")}();const s=ma(t,e,r,i,n);if(t.showTooltip){const{mode:e,showMainPlot:i}=t.display.tooltip,{includeTimestamp:o,showMainPlot:a}=Yp().config.tooltipHeaders||{},l=K(a)?a:i,c=!!K(o)&&o;switch(e){case te.TOOLTIP_CARDS:{const e=Gt(\"#\".concat(t.renderTo,\"-tooltip\")),i=function({panes:t,date:e,time:i}){const n=t.map(t=>t.plots).flat(),r=n.find(t=>t.isMain);if(n.length>0&&K(r)){const{name:t,values:n,events:s}=r,o=n.map(t=>mh(t.abbreviation,t.value,null)).join(\" \");return'\\n            <span class=\"value-title\">'.concat(t,'</span> \\n            <span class=\"value-timestamp\">').concat(e,\" \").concat(i||\"\",\"</span>\\n            \").concat(o,\" \\n            \").concat(dh(s),\"\\n        \")}return null}(s);e&&i&&(e.innerHTML=i),n||Mh(t,s,l,!0,c);break}case te.TOOLTIP_BUBBLE:{const e=s.panes.find(t=>{const{top:e,left:i,width:n,height:s}=t.bounds;return new ke(i,e,n,s).contains(r)}),i=e.plots.find(t=>t.isMain)||e.plots[0],n=i.values.find(t=>[\"Close\",\"Last\"].includes(t.id)),o=n?n.y:i.values[0].y,a=e.plots.map(t=>t.values.filter(t=>\"Change\"!==t.id&&t.y>0).map(t=>t.y)).flat(),c=ah(yh(yh({},s),{},{plots:e.plots})),u='<div class=\"bubble-box\">'.concat(c,\"</div>\");t.view.tooltip.show(u,{x:r.x,y:o,yMin:Math.min(...a),yMax:Math.max(...a)}),Mh(t,s,l);break}case te.TOOLTIP_STD:{const e=ah(yh(yh({},s),{},{plots:s.panes.map(t=>t.plots).flat()}));t.view.tooltip.show(e),Mh(t,s,l);break}case te.TOOLTIP_EXTERNAL:Po.a.publish(an.CH_TOOLTIPCHANGED,s);break;default:console.warn(\"Unknown tooltip mode requested: \".concat(e))}}}function Mh(t,e,i=!1,n=!1,r=!1){const s=t.view.el;lh(t,e,i,n,r).forEach(({id:t,isMainPane:e,content:i,moveContent:n,bounds:{left:r,right:o,top:a,width:l}},c)=>{if(\"\"!==i){let n=Gt(\"#\".concat(t));K(n)||(n=document.createElement(\"div\"),n.id=t,s.appendChild(n)),zt(n,{position:\"absolute\",display:\"flex\",\"flex-direction\":\"row\",\"flex-wrap\":\"wrap\",left:\"\".concat(r+te.CARDS_X_OFFSET,\"px\"),top:\"\".concat(a+te.CARDS_Y_OFFSET,\"px\"),maxWidth:\"\".concat(l-o-2*te.CARDS_X_OFFSET,\"px\")}),qt(n,{\"bcharts-card\":!0,\"bcharts-card-main\":e,\"bcharts-card-first\":0===c}),n.innerHTML=i}let u=Gt(\"#right-\".concat(t));K(u)||(u=document.createElement(\"div\"),u.id=\"right-\".concat(t),s.appendChild(u),qt(u,\"bcharts-card bcharts-card-move\")),zt(u,{position:\"absolute\",display:\"block\",right:\"\".concat(o+te.CARDS_X_OFFSET,\"px\"),top:\"\".concat(a+te.CARDS_Y_OFFSET,\"px\")}),u.innerHTML=n})}let Eh=null;function Oh(){return null===Eh&&(Eh=Yp().config.hostingModel===O[O.Application]),Eh}class Dh extends ju{constructor(t){super(),this.ap=t,this.presenter=t.presenter,this.panY=t.axis.isCustomDomain,this.snapToSupported=!1,this.panningXAxisAllowed=tt(this.presenter.display,!0,\"xAxis\",\"panning\"),this.warmUp=!0,this.preventDefault=!1}activated(){}deactivated(){this.cancelLongPress()}startPan(t){this.startLongPress(this.presenter,this.ap,t),this.lastOffset=t,this.lastPanningExtremes=this.ap.axis.yScale.domain();const e=this.ap.presenter;e.enableTooltip(!1),e.view.tooltip.hide(),e.view.drawCrosshair({ap:void 0})}onMouseMove(t){if(t.pinchZoom)return void this.presenter.resetActiveTool();const{point:e,view:i,offset:n}=t;if(e&&e.axis!==this.ap.axis)return;const{x:r,y:s}=n,o=r-this.lastOffset.x,a=Math.abs(o),l=this.lastOffset.y,c=s-l,u=Math.abs(c);a>=1&&this.cancelLongPress();const h=Oh();if($()&&!h&&this.warmUp)return(a>7||u>7)&&(this.warmUp=!1,this.preventDefault=a>u),!1;if(this.preventDefault||!$()||h){if(this.panningXAxisAllowed&&(i.xAxis.pan(o),i.setPriceAxesDomains()),this.panY&&e&&e.axis){u>=1&&this.cancelLongPress();const t=function(t,e,i,n){const r=(i-e)/t.viewBox.height,[s,o]=n,a=r*(o-s);return[s+a,o+a]}(e.axis,l,s,this.lastPanningExtremes);this.lastPanningExtremes=t,e.axis.yScale.domain(t)}this.lastOffset=n,i.redraw(),e&&e.presenter.view.setCursor(S.Grabbing)}return h||this.preventDefault}finished(){gd(this.presenter)}onMouseLeave(){this.finished()}onMouseUp(){this.finished()}onMouseDblClick({presenter:t,offset:e}){$()&&Ih(t,e)}performLongPress(t,e,i){t.enableTooltip(!0),t.resetActiveTool(),t.activeTool.startTouchCrosshairMode(t,e,i)}}let Lh=null;function _h(t,e){const i=t.axis.pane.presenter;i.clearSelection(),Po.a.publish(an.CH_ANNNEEDSCONTEXTMENU,{uid:t.id,id:t.name,offset:{x:e.x,y:e.y},traits:t.extractTraits(!0),extras:t.extractTraits(!1),points:t.extractPoints(),chart:i.accessor})}function Ih(t,e,i){Po.a.publish(an.CH_CHTNEEDSCONTEXTMENU,{offset:{x:e.x,y:e.y},chart:t.accessor,originalEvent:i})}class Nh{constructor(t,e=!1){this.factory=t,this.thirdPoint=e,this.dragged=!1,this.snapToSupported=!0,this.isDrawingAnnotation=!0,this.forceAlignPoints=!1}onMouseDown(t){const{point:e,button:i}=t;if(void 0!==e)return i===P.Left&&(void 0!==this.annotation&&!this.dragged&&this.thirdPoint?(this.annotation.points[2].update(e.price,e.time),this.annotation.requestRedraw(),this.finish()):(this.dragged=!0,e.axis.pane.presenter.clearSelection(),this.annotation=this.factory(e.axis),this.annotation.drawn=!1,this.annotation.points[0].update(e.price,e.time),this.annotation.points[1].update(e.price,e.time),this.annotation.requestRedraw())),!0}onMouseMove(t){const{point:e,view:i,offset:n}=t;return i.drawCrosshair({ap:e,offset:n}),K(this.annotation)&&(this.alignPointsMode=this.forceAlignPoints||t.getModifier(A.Shift),this.dragged?(this.annotation.points[1].update(e.price,e.time),this.annotation.requestRedraw()):this.thirdPoint&&!this.dragged&&(this.annotation.points[2].update(e.price,e.time),this.annotation.requestRedraw())),!0}finish(){yd(this.annotation)}onMouseUp(t){void 0!==this.annotation?(this.dragged=!1,this.thirdPoint||this.finish()):Td(t)}}class Rh extends Nh{constructor(t,e=!1){super(t,e),this.forceAlignPoints=!0}}class Hh{constructor(t,e){this.factory=t,this.maxClicks=e,this.clicks=0,this.snapToSupported=!0,this.isDrawingAnnotation=!0}onMouseMove(t){const{point:e,view:i,offset:n}=t;i.drawCrosshair({ap:e,offset:n})}onMouseDown(t){const{point:e}=t;if(0===this.clicks){if(void 0===e)return Td(t),!1;e.axis.pane.presenter.clearSelection(),this.annotation=this.factory(e.axis)}this.applyToPoints(e),this.clicks++,this.clicks===this.maxClicks&&void 0!==this.annotation?(this.annotation.drawn=!1,this.annotation.requestRedraw(),\"function\"==typeof this.annotation.updateOtherPoints&&this.annotation.updateOtherPoints(),yd(this.annotation)):this.annotation.requestRedraw()}applyToPoints(t){this.annotation.points[this.clicks].update(t.price,t.time)}}class kh extends Hh{constructor(t){super(t,1)}applyToPoints(t){this.annotation.points[0].update(t.price,t.time),this.annotation.points[1].update(t.price,t.time)}}class Fh{constructor(t,e){setTimeout(()=>this.finalize(t,e),10),this.snapToSupported=!1}finalize(t,e){const i=t(e);e.pane.presenter.clearSelection(),i.drawn=!1,i.requestRedraw(),yd(i)}}class Uh{constructor(t,e,i,n,r){this.axis=r,K(t,e)&&(this.angle=Ee(t,e),this.extent=this.getExtent(t,e),this.p1=i?this.extendPoint(e,-1):t,this.p2=n?this.extendPoint(t,1):e),this.style=null,this.extended=i||n}extendPoint(t,e){return{x:t.x+e*this.extent*Math.cos(this.angle),y:t.y+e*this.extent*Math.sin(this.angle)}}getExtent(t,e){const i=Math.max(Math.abs(t.x),Math.abs(e.x)),n=Math.max(Math.abs(t.y),Math.abs(e.y));return Math.sqrt(i*i+n*n)+te.OUT_OF_SCREEN}hitTest(t){return!!K(this.p1,this.p2)&&Oe([this.p1,this.p2],t,te.HIT_TEST_TOLERANCE)}draw(t){K(this.p1,this.p2)&&(je(t,this.p1,this.p2),this.extended)}}const Bh=te.MARKER_ARROW_ANGLE*Math.PI/180/2;class Vh{constructor(t,e){this.p1=t[0].point,this.p2=t[1].point,this.vertex=e}hitTest(t){const{anchor:e,p1:i,p2:n}=this.getArrowPoints();return Oe([e,i],t,te.HIT_TEST_TOLERANCE)||Oe([e,n],t,te.HIT_TEST_TOLERANCE)}draw(t){const{anchor:e,p1:i,p2:n}=this.getArrowPoints();je(t,e,i),je(t,e,n)}getArrowPoints(){const t=Ee(this.p1,this.p2),e=\"start\"===this.vertex?0:Math.PI,i=t-Bh+e,n=t+Bh+e,r=\"start\"===this.vertex?this.p1:this.p2;return{anchor:r,p1:{x:te.MARKER_ARROW_LENGTH*Math.cos(i)+r.x,y:te.MARKER_ARROW_LENGTH*Math.sin(i)+r.y},p2:{x:te.MARKER_ARROW_LENGTH*Math.cos(n)+r.x,y:te.MARKER_ARROW_LENGTH*Math.sin(n)+r.y}}}}class Wh{hitTest(){}draw(){}}class jh extends Zu{constructor(t,e){super(t,e),this.addPoints(2),this.alignPointsSupported=!0}get extend1(){return this.traits[te.AT_EXTEND_PT_1]}get extend2(){return this.traits[te.AT_EXTEND_PT_2]}get showPercentDiff(){return this.traits[te.AT_SHOW_PERCENTDIFF]}getElements(){const t=this.points[0].point,e=this.points[1].point,i=new Uh(t,e,this.extend1,this.extend2,this.axis),n=[];return this.extend1&&n.push(new Uh(i.p1,t,!0,!1,this.axis)),n.push(new Uh(t,e,!1,!1,this.axis)),this.extend2&&n.push(new Uh(e,i.p2,!1,!0,this.axis)),n}getBarCount(t,e){if(void 0===this.countCache||this.countCache.time1!==t||this.countCache.time2!==e){const i=this.axis.pane.presenter.view,n=(Math.abs(i.toIndex(t)-i.toIndex(e))+1).toFixed(0);this.countCache={time1:t,time2:e,barCount:n}}return this.countCache.barCount}formatPercDiff(t,e){const i=(e-t)/t*100;return\" (\".concat(i>0?\"+\":\"\").concat(Z(i,2),\"%)\")}adornElements(t,e){if(!this.showBarCount&&!this.showPrices)return;const[i,n]=this.points,r=Ue(e,1),s=function(t,e){return-(t.y-e.y)/(t.x-e.x)}(i.point,n.point);let o=this.getAdornOffset(e);if(s<0&&(o.y=r+5),this.showBarCount){const t=Me(we(i.point,n.point),o);Be(e,this.getBarCount(i.time,n.time).toString(),t,b.Right)}if(this.showPrices){Be(e,aa(this.axis,i.price),Me(i.point,o),b.Right);const t=this.showPercentDiff?this.formatPercDiff(i.price,n.price):\"\";Be(e,\"\".concat(aa(this.axis,n.price)).concat(t),Me(n.point,o),b.Right)}}getMarkers(){const t=this.marker;if(!t||\"none\"===t.vertex)return[];const{vertex:e,kind:i}=t;return(\"both\"===e?[\"start\",\"end\"]:[e]).map(t=>\"arrow\"===i?new Vh(this.points,t):(console.warn(\"There is no markers of \".concat(i,\" kind\")),new Wh))}}class Gh extends Zu{constructor(t,e){super(t,e),this.addPoints(1)}getElements(){return[new Yu(this.points[0].point,!0,this.axis)]}getTimeScaleAdornments(){return this.showTimestamps?[{time:this.points[0].time,color:this.traits.line.color}]:super.getTimeScaleAdornments()}}class zh extends Zu{constructor(t,e){super(t,e),this.addPoints(1)}getElements(){return[new Yu(this.points[0].point,!1,this.axis)]}getPriceScaleAdornments(){return this.showPrices?[{price:this.points[0].price,color:this.traits.line.color}]:super.getPriceScaleAdornments()}}class Yh extends Zu{constructor(t,e,i){super(t,e),this.addPoints(2),K(i)&&K(i.points)&&i.points.forEach((t,e)=>this.points[e].update(t.price,t.time))}allPoints(){const[t,e]=this.points;return K(t,t.point,e,e.point)?[t,this.axis.toAnnotationPoint(we(t.point,e.point)),e]:te.EMPTY_ARRAY}fiftyPercTraits(){return this.traits[te.AT_LINE_2]}getElements(){const t=this.allPoints();if(t===te.EMPTY_ARRAY)return te.EMPTY_ARRAY;return t.map(t=>new Uh({x:-te.OUT_OF_SCREEN,y:t.point.y},{x:te.OUT_OF_SCREEN,y:t.point.y},!1,!1,this.axis))}getStyleForElement(t,e){const i=this.fiftyPercTraits();if(1!==e||!K(i))return super.getStyleForElement(t,e);let n=et(this.traits);return n.line=i,ni(n)}getPriceScaleAdornments(){const t=this.allPoints();if(!this.showPrices||t===te.EMPTY_ARRAY)return super.getPriceScaleAdornments();const e=this.traits.line,i=t.map(t=>({price:t.price,color:e.color})),n=this.fiftyPercTraits();return K(n)&&(i[1].color=n.color),i}}class qh extends Zu{constructor(t,e){super(t,e),this.addPoints(2)}get showTrendLine(){return this.traits[te.AT_SHOW_TRENDLINE]}get factors(){return this.traits[te.AT_FACTORS].filter(t=>t.shown).map(t=>t.value)}get pricesOnScale(){return this.traits[te.AT_PRICES_ON_SCALE]}getElements(){let t=[],e=this.points[0].point,i=this.points[1].point;if(!K(e,i))return t;i.x<e.x&&([e,i]=[i,e]);const n=i.y,r=e.y-i.y;let s=Number.MAX_SAFE_INTEGER,o=Number.MIN_SAFE_INTEGER;if(this.factors.forEach(e=>{const a=n+r*e;a<s&&(s=a),a>o&&(o=a),t.push(new Uh({x:i.x,y:a},{x:i.x+1,y:a},!1,!0,this.axis))}),this.showTrendLine){const n=e.y<i.y;t.unshift(new Uh({x:e.x,y:n?s:o},{x:i.x,y:n?o:s},!1,!1,this.axis))}return t}adornElements(t,e){let i=this.showTrendLine?1:0;this.factors.forEach(n=>{const r=t[i++].p1;let s=r.y-2;const o=\"\".concat((100*n).toFixed(1),\"%\");if(Be(e,o,{x:r.x+3,y:s}),this.showPrices&&!this.pricesOnScale){const t=e.measureText(o).width;Be(e,aa(this.axis,this.axis.toPrice(r.y)),{x:r.x+t+6,y:s})}})}getPriceScaleAdornments(){if(!this.showPrices||!this.pricesOnScale)return super.getPriceScaleAdornments();let t=this.showTrendLine?1:0;const e=this.getElements();if(0===e.length)return super.getPriceScaleAdornments();const i=this.traits.line.color;return this.factors.map(n=>{const r=e[t++].p1;return{price:this.axis.toPrice(r.y),color:i}})}}class $h extends Zu{constructor(t,e){super(t,e),this.addPoints(2)}getElements(){var t=[],e=this.points[0].point,i=this.points[1].point;t.push(new Uh(e,i,!1,!1,this.axis));var n=i.y-e.y;return this.factors.forEach(r=>{var s=e.y+r*n;t.push(new Uh({x:e.x,y:e.y},{x:i.x,y:s},!1,!0,this.axis))}),t}}class Xh extends $h{constructor(t,e){super(t,e),this.factors=[.382,.5,.618]}}class Kh{constructor(t,e,i){this.center=t,this.rim=e,this.axis=i,this.radius=Ce(t,e),this.left={x:this.center.x-this.radius,y:this.center.y},this.right={x:this.center.x+this.radius,y:this.center.y}}hitTest(t){let e=999;if(this.center.y<this.rim.y&&t.y<=this.center.y||this.center.y>this.rim.y&&t.y>=this.center.y)e=Math.min(Ce(this.left,t),Ce(this.right,t));else{const i=xe(t,this.center);e=Math.abs(Math.sqrt(i.x*i.x+i.y*i.y)-this.radius)}return e<=te.HIT_TEST_TOLERANCE}draw(t){We(t,this.center,this.radius,0,Math.PI,this.rim.y<=this.center.y)}}class Zh extends Zu{constructor(t,e){super(t,e),this.addPoints(2)}getElements(){var t=[];if(!K(this.points[0].point,this.points[1].point))return t;var e=this.points[0].point,i=this.points[1].point;t.push(new Uh(e,i,!1,!1,this.axis));var n=Ce(e,i),r=xe(i,e),s=r.y/n,o=r.x/n;return this.factors.forEach(r=>{var a=n*r,l=s*a,c=o*a,u={x:i.x-c,y:i.y-l};t.push(new Kh(e,u,this.axis))}),t}}class Jh extends Zh{constructor(t,e){super(t,e),this.factors=[.382,.5,.618]}}class Qh extends Zu{constructor(t,e){super(t,e),this.factors=[8,4,3,2],this.addPoints(2)}getElements(){var t=[],e=this.points[0].point,i=this.points[1].point,{x:n,y:r}=xe(i,e);return this.factors.forEach(r=>{t.push(new Uh(e,{x:e.x+n/r,y:i.y},!1,!0,this.axis))}),t.push(new Uh(e,i,!1,!0,this.axis)),this.factors.slice().reverse().forEach(n=>{t.push(new Uh(e,{x:i.x,y:e.y+r/n},!1,!0,this.axis))}),t}}class td extends $h{constructor(t,e){super(t,e),this.factors=[1/3,2/3]}}class ed extends Zh{constructor(t,e){super(t,e),this.factors=[1/3,2/3]}}class id extends Zu{constructor(t,e){super(t,e),this.addPoints(3)}getElements(){const t=this.points[0].point,e=this.points[1].point,i=this.points[2].point,n=(e.x+i.x)/2-t.x,r=(e.y+i.y)/2-t.y,s=[];return s.push(new Uh(e,{x:e.x+n,y:e.y+r},!1,!0,this.axis)),s.push(new Uh(t,{x:t.x+n,y:t.y+r},!1,!0,this.axis)),s.push(new Uh(i,{x:i.x+n,y:i.y+r},!1,!0,this.axis)),s.push(new Uh(e,i,!1,!1,this.axis)),s}}class nd extends eh{constructor(t,e){super(t,e)}hitTest(t){return!!this.visible&&this.getRect().contains(t)}draw(t,e){if(!super.draw(t,e))return!1;Ve(t,this.getRect())}}class rd extends eh{constructor(t,e){super(t,e)}getEllipse(){var t=this.getRect();return new Fe(t.centerX,t.centerY,t.width/2,t.height/2)}hitTest(t){return!!this.visible&&this.getEllipse().contains(t)}draw(t,e){if(!super.draw(t,e))return!1;var i,n;i=t,n=this.getEllipse(),i.beginPath(),i.ellipse(n.cx,n.cy,n.radiusX,n.radiusY,0,0,2*Math.PI),i.stroke(),i.fill()}}class sd extends Zu{constructor(t,e){super(t,e),this.addPoints(3)}getLastPoint(){var t=Ce(this.points[0].point,this.points[1].point),e=Ee(this.points[0].point,this.points[1].point);return{x:this.points[2].point.x+t*Math.cos(e),y:this.points[2].point.y+t*Math.sin(e)}}getElements(){var t=[];if(t.push(new Uh(this.points[0].point,this.points[1].point,!1,!1,this.axis)),K(this.points[2].price)){var e=this.getLastPoint();t.push(new Uh(this.points[2].point,e,!1,!1,this.axis))}return t}}class od extends eh{constructor(t,e,i){super(t,e),this.kind=i,this.adjustFill=!0}hitTest(t){return!!this.visible&&this.getRect().contains(t)}get dimension(){const t=\"fish_hook\"===this.kind?2:1;return te.DEFAULT_SYMBOL_WIDTH_HEIGHT*t}updateOtherPoints(){this.points[1].price||this.setBottomRight()}setBottomRight(){const t=this.dimension;let e=this.points[0].point;if(K(e)){const i=Me(e,{x:t,y:t});this.points[1].updateFromPoint(i)}}draw(t,e){if(!super.draw(t,e))return!1;const i=this.getRect();return 0===i.width&&(i.width=this.dimension),Ye(t,this.kind,i),!0}}class ad extends Zu{constructor(t,e){super(t,e),this.addPoints(1),this.helper=new Vu(t)}recalculatePoints(){const t=this.axis.pane.presenter.mainPlot.timeSeries.container.getTimeData(),{price:e,time:i}=this.points[0],n=G(t,i);this.elements=[],-1!==n&&(this.elements=te.PARTIAL_FIBONACCI_SEQUENCE.filter(e=>n+e<t.length).map(i=>(this.helper.update(e,t[n+i]),new Yu(this.helper.point,!0,this.axis))))}getElements(){return this.recalculatePoints(),this.elements}adornElements(t,e){const i=te.PARTIAL_FIBONACCI_SEQUENCE;for(var n=3;n<t.length;n++){let r=t[n];Be(e,i[n].toString(),Me(r.anchor,{x:3,y:-2}))}}getTimeScaleAdornments(){return[{time:this.points[0].time,color:this.traits.line.color}]}}class ld{constructor(t){this.snapToSupported=!0,this.isDrawingAnnotation=!0}onMouseMove(t){const{point:e,view:i,offset:n}=t;i.drawCrosshair({ap:e,offset:n})}onMouseDown(t){const{point:e}=t,i=e.axis.pane.presenter;Po.a.publish(an.CH_ANNPOINTPICKED,{chart:i.accessor,axis:e.axis,point:{time:e.time.getTime(),price:e.price}}),gd(i,null)}}class cd{constructor(t,e,i,n){this.axis=n,this.rect=new ke(t.x,t.y,e,i),this.style=null}hitTest(t){return this.rect.contains(t)}draw(t,e){Ve(t,this.rect)}}const ud=\"Open\",hd=\"Closed\";class dd extends Zu{constructor(t,e,i){super(t,e),this.addPoints(4),this.isLong=i;const n=(t,e)=>this.points[t].moveDirection=e;n(1,w.Vertical),n(2,w.Vertical),n(3,w.Horizontal),this.twoDecMeta=new pe(2)}data(t){return this.presenter.mainPlot.timeSeries.container.getData(t)}get presenter(){return this.axis.pane.presenter}getDataWindow(t,e,i=!0,n=!0){const r=this.data(on.DateTime),s=G(r,+t,Number),o=G(r,+e,Number),a={refIndex:-1,highestIndex:-1,lowestIndex:-1,highest:null,lowest:null,data:[]},[l,c,u]=[on.High,on.Low,on.Close].map(t=>this.data(t)),h=t=>t-s;for(let t=s;t<=o;t++)i&&-1===a.refIndex&&K(this.entryPrice)&&this.entryPrice>=c[t]&&this.entryPrice<=l[t]&&(a.refIndex=h(t)),(!i||a.refIndex>=0&&h(t)>=a.refIndex)&&((!K(a.highest)||l[t]>a.highest)&&(a.highest=l[t]),(!K(a.lowest)||c[t]<a.lowest)&&(a.lowest=c[t])),i&&-1!==a.refIndex&&(-1===a.highestIndex&&l[t]>this.upperPrice&&(a.highestIndex=h(t)),-1===a.lowestIndex&&c[t]<this.lowerPrice&&(a.lowestIndex=h(t))),n&&a.data.push({high:l[t],low:c[t],close:u[t],time:r[t]});if(n&&a.data&&a.data.length>0){a.state=K(a.highest,a.lowest)&&(this.upperPrice<a.highest||this.lowerPrice>a.lowest)?hd:ud,a.special=-1===a.highestIndex&&-1===a.lowestIndex||a.highestIndex===a.lowestIndex;const t=V(a.data);if(a.toPrice=t.close,a.toTime=t.time,a.state===hd)if(a.special){if(-1!==a.refIndex){const t=a.data[a.refIndex];a.toTime=t.time,a.toPrice=(this.isLong?this.lowerPrice<a.lowest:this.upperPrice<a.highest)?this.upperPrice:this.lowerPrice}}else{const t=-1!==a.highestIndex&&-1!==a.lowestIndex;t&&a.highestIndex<a.lowestIndex||-1===a.lowestIndex?(a.toPrice=this.upperPrice,a.toTime=a.data[a.highestIndex].time):(t&&a.lowestIndex<a.highestIndex||-1===a.highestIndex)&&(a.toPrice=this.lowerPrice,a.toTime=a.data[a.lowestIndex].time)}a.pAndL=Z(this.isLong?a.toPrice-this.entryPrice:this.entryPrice-a.toPrice,2)}return a}get dataWindow(){return K(this._dataWindow)||(this._dataWindow=this.getDataWindow(this.entryAnchor.time,this.exitAnchor.time)),this._dataWindow}getVisiblePriceRange(){const t=this.axis.yScale.domain();return t[1]-t[0]}getFutureTimestamp(){const t=this.data(on.DateTime),e=G(t,+this.points[0].time,Number);return t[Math.min(t.length-1,e+50)].getTime()}get entryPrice(){return this.entryAnchor.price}get entryAnchor(){return this.points[0]}get upperPrice(){return this.upperAnchor.price}get upperAnchor(){return this.points[1]}get lowerPrice(){return this.lowerAnchor.price}get lowerAnchor(){return this.points[2]}get exitAnchor(){return this.points[3]}get accountSize(){return this.traits[te.AT_ACCOUNT_SIZE]}get risk(){const t=this.traits[te.AT_RISK_IS_PERCENT],e=this.traits[te.AT_RISK];return Z(t?e/100*this.accountSize:e,2)}get pointValue(){return this._metaData||(this._metaData=this.presenter.mainPlot.metaData),this._metaData.pointValue}formatDollarValue(t){if(!Number.isFinite(t))return te.NOT_APPLICABLE;return\"\".concat(t<0?\"-\":\"\",\"$\").concat(this.twoDecMeta.format(Math.abs(t)))}get qty(){return Math.floor(this.risk/(this.isLong?this.entryPrice-this.lowerPrice:this.upperPrice-this.entryPrice))}get upperDiff(){return Z(this.upperPrice-this.entryPrice,2)}get amountMultiplier(){return this.isLong?1:-1}get upperAmount(){return Z(this.accountSize+this.amountMultiplier*this.qty*this.upperDiff,2)}get upperPandL(){return Z(this.amountMultiplier*this.upperDiff*this.pointValue,2)}get isCompact(){return this.traits[te.AT_COMPACT]}get upper(){const t=aa(this.axis,this.upperPrice),e=\"(\".concat(Z(this.upperDiff/this.entryPrice*100,2).toFixed(2),\"%)\");return this.isCompact,\"\".concat(t,\" \").concat(e)}get upperText(){const t=\"\".concat(this.formatDollarValue(this.upperPandL));return this.isCompact?\"\".concat(this.upper,\" \").concat(t):\"\".concat(this.isLong?\"Target\":\"Stop\",\": \").concat(this.upper,\", P&L: \").concat(t)}get lowerDiff(){return Z(this.entryPrice-this.lowerPrice,2)}get lowerAmount(){return Z(this.accountSize-this.amountMultiplier*this.qty*this.lowerDiff,2)}get lowerPandL(){return Z(-this.amountMultiplier*this.lowerDiff*this.pointValue,2)}get lower(){const t=aa(this.axis,this.lowerPrice),e=\"(\".concat(Z(this.lowerDiff/this.entryPrice*100,2).toFixed(2),\"%)\");return this.isCompact,\"\".concat(t,\" \").concat(e)}get lowerText(){const t=\"\".concat(this.formatDollarValue(this.lowerPandL));return this.isCompact?\"\".concat(this.lower,\" \").concat(t):\"\".concat(this.isLong?\"Stop\":\"Target\",\": \").concat(this.lower,\", P&L: \").concat(t)}get riskReward(){return Z(this.isLong?this.upperDiff/this.lowerDiff:this.lowerDiff/this.upperDiff,2)}get state(){return this.dataWindow.state}get pAndL(){return this.dataWindow.pAndL}get pAndLValue(){return this.pAndL*this.pointValue}positionPoints(){const t=this.getVisiblePriceRange()/5,e=this.getFutureTimestamp();this.upperAnchor.update(this.entryPrice+t,this.entryAnchor.time),this.lowerAnchor.update(this.entryPrice-t,this.entryAnchor.time),this.exitAnchor.update(this.entryPrice,e)}fillOnlyStyle(t){return ni({line:{color:te.COLOR_TRANSPARENT,dashStyle:\"Solid\"},fill:this.traits[t]})}get lowerStyle(){return this.fillOnlyStyle(te.AT_FILL2)}get upperStyle(){return this.fillOnlyStyle(te.AT_FILL)}get textStyle(){return this.fillOnlyStyle(te.AT_FILL_TEXT)}get secondaryLineStyle(){return ni({line:{color:this.traits.line.color,dashStyle:\"ShortDash\"},fill:{color:te.COLOR_TRANSPARENT}})}wasModifiedByTool(){K(this.points[2].price)||this.positionPoints(),this._dataWindow=null}wasPointMovedByTool(t,e){if(t===this.entryAnchor){const e=(e,i,n)=>e.update(i?t.price:e.price,n?t.time:e.time);e(this.exitAnchor,!0,!1),e(this.upperAnchor,!1,!0),e(this.lowerAnchor,!1,!0)}this.wasModifiedByTool()}get isUpperPerPAndL(){const t=this.dataWindow;return this.isLong?t.pAndL>0:t.pAndL<=0}getStyleForElement(t,e){return t.style||this.defaultStyle}getElements(){const t=new Uh(this.entryAnchor.point,this.exitAnchor.point,!1,!1,this.axis),e=this.exitAnchor.point.x<this.entryAnchor.point.x,i=Math.abs(this.exitAnchor.point.x-this.entryAnchor.point.x),n=(t,e)=>({x:t.x+e,y:t.y}),r=new cd(n(this.upperAnchor.point,e?-i:0),i,Math.abs(this.upperAnchor.point.y-this.entryAnchor.point.y),this.axis);r.style=this.upperStyle;const s=new cd(n(this.entryAnchor.point,e?-i:0),i,Math.abs(this.entryAnchor.point.y-this.lowerAnchor.point.y),this.axis);s.style=this.lowerStyle;const o=[t,r,s],a=this.dataWindow;if(-1!==a.refIndex){const t=a.data[a.refIndex],e=new Vu(this.axis,this.entryPrice,t.time.getTime()),i=new Vu(this.axis,a.toPrice,a.toTime.getTime()),n=new Uh(e.point,i.point,!1,!1,this.axis);if(n.style=this.secondaryLineStyle,o.push(n),e.time!==i.time){const e=this.isUpperPerPAndL,i=new Vu(this.axis,e?a.toPrice:this.entryPrice,t.time.getTime()),n=new Vu(this.axis,e?this.entryPrice:a.toPrice,a.toTime.getTime()),r=new cd(i.point,n.point.x-i.point.x,Math.abs(n.point.y-i.point.y),this.axis);r.style=e?this.upperStyle:this.lowerStyle,o.push(r)}}return o}hitTest(t){if(!this.visible)return!1;const e=this.isHit||!1;return this.isHit=super.hitTest(t),this.isHit!==e&&this.requestRedraw(),this.isHit}get showTextAdornments(){return this.isHit||this.isSelected}getPriceScaleAdornments(){const t=t=>Le(this.traits[t].color);return[{price:this.upperPrice,color:t(te.AT_FILL)},{price:this.entryPrice,color:t(te.AT_LINE)},{price:this.lowerPrice,color:t(te.AT_FILL2)}]}adornElements(t,e){const[i,n,r]=t;if(this.showTextAdornments){const[t,s]=[!0,!1].map(t=>this.getAdornOffset(e,t).y),{x:o,y:a,width:l}=n.rect,c={x:o+l/2,y:a+t},u=this.textStyle.fillStyle;Be(e,this.upperText,c,b.Center,u,Le(this.upperStyle.fillStyle));const{x:h,y:d,width:p,height:f}=r.rect,m={x:h+p/2,y:d+f+Math.abs(s)};Be(e,this.lowerText,m,b.Center,u,Le(this.lowerStyle.fillStyle));const{p1:{x:g},p2:{x:y},p1:{y:v}}=i,T=this.isCompact?\"\".concat(this.formatDollarValue(this.pAndLValue)):\"\".concat(this.state||te.NOT_APPLICABLE,\" P&L: \").concat(this.formatDollarValue(this.pAndLValue)),S=this.isCompact?\"\".concat(this.riskReward.toFixed(2)):\"Risk/Reward Ratio: \".concat(this.riskReward.toFixed(2)),P={x:g+(y-g)/2,y:v+t+5},A=Le(this.isUpperPerPAndL?this.upperStyle.fillStyle:this.lowerStyle.fillStyle);Be(e,[T,S],P,b.Center,u,A)}}updatePoints(t){super.updatePoints(t),this.wasModifiedByTool()}}const pd=new class{constructor(){this.resizingPanes=!1,this.stopResizingScale(),this.snapToSupported=!1,this.touchCrosshairMode=!1,this.previousTouchTimestamp=null,this.notifyZoomChanged=function(t,e){let i=null;return function(){const n=this,r=arguments;clearTimeout(i),i=setTimeout((function(){t.apply(n,r)}),e)}}(t=>{Po.a.publish(an.CH_ZOOMCHANGED,t.accessor)},te.ZOOM_DEBOUNCE_DELAY)}startTouchCrosshairMode(t,e,i){this.touchCrosshairMode=!0,this.showCrosshairAndTooltips(t.view,e,i)}activated(){}deactivated(){}findHit(t){if(!t.point)return[];const e=t.presenter.selectedAnnotation;let i;void 0!==e&&(i=e.points.find(e=>e.hitTest(t.point)));let n=V(t.axis.annotations.filter(e=>e.hitTest(t.point)));return void 0!==i&&null==n&&(n=e),[n,i]}stopResizingScale(){this.resizingScale=!1,this.resizingScaleId=null,this.lastScaleResizingOffset=null,this.lastScaleResizingExtremes=null}onMouseDblClick({priceAxis:t,offset:e,ap:i,presenter:n,view:r}){const s=r.xAxis.viewBox.contains(e);if(K(t))this.stopResizingScale(),t.isCustomDomain=!1,t.setDomain(),r.redraw();else if(s)r.xAxis.resetZoom(),r.setPriceAxesDomains(),r.redraw(),this.notifyZoomChanged(n);else if($()){const t=n.selectedAnnotation;null!=t?_h(t,e):Ih(n,e)}}onMouseEnter(){this.previousTouchTimestamp=null}computePreviousTouchStartDuration(){if(!$())return null;const t=(new Date).getTime(),e=K(this.previousTouchTimestamp)?t-this.previousTouchTimestamp:null;return this.previousTouchTimestamp=t,e}onMouseDown(t){const{point:e,button:i,splitter:n,offset:r,priceAxis:s,presenter:o,originalEvent:a}=t,l=i===P.Right||/^Mac/.test(window.navigator.platform)&&i===P.Left&&t.getModifier(A.Control);this.touchCrosshairMode&&K(this.touchCrosshairTimeout)&&(clearTimeout(this.touchCrosshairTimeout),this.touchCrosshairTimeout=null);const c=this.computePreviousTouchStartDuration();if(K(c)&&c<te.DOUBLE_CLICK_DURATION_MILLIS)return this.onMouseDblClick(t),!0;if(!l&&this.isLogoLink(r)&&Po.a.publish(an.CH_LOGOCLICKED,{chart:o.accessor}),K(n))return this.resizingPanes=!0,this.lastResizingOffset=r,this.splitter=n,o.enableTooltip(!1),!0;if(K(s)){return Q(o.display.chart.zooming)[0]&&this.startAxisScaling(s,r),!0}if(null!=e){const[t,i]=this.findHit(e);if(o.clearSelection(),null==t)return l?(Ih(o,r,a),!0):!!this.touchCrosshairMode||(o.activeTool=new Dh(e),o.activeTool.startPan(r),Oh());o.setSelection(t);const n=null!=i;return l?(_h(t,r),$()):!(n&&!i.movable||!n&&!t.canMove(e.point))&&(o.activeTool=n?new zu(t,i):new Gu(t,e,r),$())}return this.prevZoomingOffset=r,!1}onContextMenu(t){return!0}isLogoLink(t){const e=K(Lh)?Lh.rect:null;return K(e)&&e.contains(t)}onMouseMove(t){const{point:e,splitter:i,priceAxis:n,view:r,offset:s}=t;if(K(t.pinchZoom)&&t.pinchZoom&&K(t.pinchDistance))return K(this.prevPinchDistance)&&(t.delta=this.prevPinchDistance-t.pinchDistance,this.onWheel(t)),this.prevPinchDistance=t.pinchDistance,$();if(null!=i||this.resizingPanes)r.setCursor(S.ResizeVertical),this.resizingPanes&&this.resizePanes(r,s);else if(K(e)){const[t,i]=this.findHit(e);K(i)?e.presenter.view.setCursor(S.Crosshair):K(t)?t.isSelected?e.presenter.view.setCursor(S.Move):e.presenter.view.setCursor(S.Hand):e.presenter.view.setCursor(S.Arrow)}else if(K(n))r.setCursor(S.ResizeVertical),this.performAxisScaling(r,n,s);else{if(this.prevZoomingOffset){const{x:t}=this.prevZoomingOffset,{x:e}=s,i=t-e;this.applyZoom(r.presenter,-i),this.prevZoomingOffset=s}r.setCursor(S.Arrow)}return!e||this.resizingPanes?(this.hideCrosshairAndTooltips(r),$()):(r.setCursor(this.isLogoLink(s)?S.Hand:S.Arrow),this.showCrosshairAndTooltips(r,e,s),$())}showCrosshairAndTooltips(t,e,i){!e.time||$()&&!this.touchCrosshairMode||(t.drawCrosshair({ap:e,offset:i}),xh(t.presenter,{time:e.time,offset:i}))}hideCrosshairAndTooltips(t){t.drawCrosshair({ap:void 0}),t.tooltip.hide(),t.presenter.hideCards()}onMouseLeave(t){const{view:e,offset:i}=t;e.presenter.accessor.getPaneBounds().every(t=>{return!t.contains(i)||(e=t,(n=i).x===e.x||n.x===e.x+e.width||n.y===e.y||n.y===e.y+e.height);var e,n})&&(this.hideCrosshairAndTooltips(e),this.stopResizeZoom(e.presenter)),e.setCursor(S.Arrow),this.touchCrosshairMode=!1}stopResizeZoom(t){this.resizingPanes&&(this.resizingPanes=!1,t.enableTooltip(!0),t.onPaneHeightsUpdated()),this.resizingScale&&this.stopResizingScale(),this.prevZoomingOffset&&delete this.prevZoomingOffset}onMouseUp({presenter:t}){if(this.stopResizeZoom(t),$()){const e=function(){const t=Yp().config.touchCrosshairTimeoutMillis;return K(t)&&Number.isFinite(t)?t:te.LONG_PRESS_TIMEOUT_MILLIS}();this.touchCrosshairTimeout=setTimeout(()=>{this.hideCrosshairAndTooltips(t.view),this.touchCrosshairMode=!1},e)}}applyZoom(t,e,i=!0){if(!Q(t.display.chart.zooming)[1])return;const n=Math.sign(e)*($()?2:10),r=t.view;r.xAxis.zoom(n)&&(r.setPriceAxesDomains(),r.redraw(),i&&this.notifyZoomChanged(t))}onWheel({view:t,presenter:e,getModifier:i,delta:n}){const{scrollBehavior:r}=e.display;return!(!($()?\"none\"!==r:\"wheel\"===r||\"wheel+shift\"===r&&i(A.Shift))||0===n)&&(t.drawCrosshair({ap:void 0}),t.tooltip.hide(),t.presenter.hideCards(),this.applyZoom(e,n),!0)}onKeyDown(t){const{key:e,code:i,presenter:n}=t;if(K(n.selectedAnnotation)&&function(t,e){return\"Backspace\"===t||\"Delete\"===t||8===e||46===e}(e,i)){const t=n.selectedAnnotation;t.axis.deleteAnnotation(t)}if(K(n.selectedAnnotation)&&(!function(t,e){return\"Escape\"===t||27===e}(e,i)?function(t,e){return\"F2\"===t||113===e}(e,i)&&n.selectedAnnotation instanceof nh&&n.selectedAnnotation.textEditable&&(n.activeTool=new sh(null,n.selectedAnnotation),n.activeTool.startEditing()):n.clearSelection()),X(e,i)||function(t,e){return\"ArrowRight\"===t||39===e}(e,i)){const t=X(e,i)?-1:1,r=n.view;r.xAxis.xScale.shiftBars(t),r.redraw()}}resizePanes(t,e){const i=e.y-this.lastResizingOffset.y;if(0===i)return;const n=t.presenter.panes,r=te.MINIMUM_PANE_HEIGHT,s=t=>Math.round(1e3*t)/1e3,o=this.splitter.map(t=>n[t]),a=o.map(t=>t.getBounds().height).map((t,e)=>0===e?t+i:t-i);if(a.some(t=>t<r))return;const l=o.map(t=>t.height).reduce((t,e)=>t+e),c=a.reduce((t,e)=>t/e),u=s(l/(c+1));o.forEach((t,e)=>{t.height=0===e?s(c*u):u}),this.lastResizingOffset=e,t.recalculateLayout(),t.redraw()}startAxisScaling(t,e){this.resizingScale=!0,this.resizingScaleId=t.id,this.lastScaleResizingOffset=e,this.lastScaleResizingExtremes=t.yScale.domain()}performAxisScaling(t,e,i){if(this.resizingScale&&this.resizingScaleId===e.id){const n=$()?4:5,r=function(t,e,i,n,r=1,s=1){const o=(i.y-e.y)/t.viewBox.height,[a,l]=n,c=o*(l-a)/10;return[a+c*r,l+c*s]}(e,this.lastScaleResizingOffset,i,this.lastScaleResizingExtremes,-n,n);e.isCustomDomain=!0,e.yScale.domain(r),t.redraw()}}},fd={Default:()=>function(){return pd},Line:()=>vd(Nh,jh,!1),Ray:()=>vd(Nh,jh,!1),GannLine:()=>vd(Rh,jh,!1),VerticalLine:()=>vd(Hh,Gh,1),HorizontalLine:()=>vd(Hh,zh,1),LongPosition:()=>vd(Hh,dd,1,!0),ShortPosition:()=>vd(Hh,dd,1,!1),FiftyPercentLine:function(t,e){return K(t)?vd(Fh,Yh,t.axis||e.mainAxis,t):vd(Hh,Yh,2)},FibonacciRetracement:()=>vd(Nh,qh,!1),FibonacciFan:()=>vd(Nh,Xh,!1),FibonacciArcs:()=>vd(Nh,Jh,!1),GannFan:()=>vd(Nh,Qh,!1),SpeedResistanceFan:()=>vd(Nh,td,!1),SpeedResistanceArcs:()=>vd(Nh,ed,!1),AndrewsPitchfork:()=>vd(Hh,id,3),Rectangle:()=>vd(Nh,nd,!1),Ellipse:()=>vd(Nh,rd,!1),TrendChannel:()=>vd(Nh,sd,!0),SymbolArrowUp:()=>vd(Hh,od,1,\"arrow_up\"),SymbolArrowDown:()=>vd(Hh,od,1,\"arrow_down\"),SymbolArrowRight:()=>vd(Hh,od,1,\"arrow_right\"),SymbolArrowLeft:()=>vd(Hh,od,1,\"arrow_left\"),SymbolArcDown:()=>vd(Hh,od,1,\"arc_down\"),SymbolArcUp:()=>vd(Hh,od,1,\"arc_up\"),SymbolThumbsUp:()=>vd(Hh,od,1,\"thumbs_up\"),SymbolThumbsDown:()=>vd(Hh,od,1,\"thumbs_down\"),SymbolOne:()=>vd(Hh,od,1,\"one\"),SymbolTwo:()=>vd(Hh,od,1,\"two\"),SymbolThree:()=>vd(Hh,od,1,\"three\"),SymbolFour:()=>vd(Hh,od,1,\"four\"),SymbolFive:()=>vd(Hh,od,1,\"five\"),SymbolQuestion:()=>vd(Hh,od,1,\"question\"),SymbolFishHook:()=>vd(Hh,od,1,\"fish_hook\"),FibonacciTimeZones:()=>vd(Hh,ad,1),Text:()=>vd(sh,nh,null),PickPoint:()=>function(){return new ld},ComputedText:function(t){return vd(kh,rh,null,t)}};var md=function(t,e=!1,i=null,n=null,r=null){let s=fd[t];return s=s(n,r),s(t,e,i)};function gd(t,e=null){t.enableTooltip(!0),t.resetActiveTool(),K(e)&&t.onAnnotationsUpdated(e)}function yd(t,e=!0){t.wasModifiedByTool();const i=t.axis;gd(i.pane.presenter,e?i:null)}function vd(t,e,i,n){return function(r,s,o){const a=function(t,e,i,n){return function(r,s=!0){const o=new e(r,t,i);return s?r.addAnnotation(o):o.drawn=!1,K(n)&&(o.traits=n),o}}(r,e,n,o);return s?a:new t(a,i)}}function Td(t){t.button===P.Right&&gd(t.presenter)}class bd extends _u{get title(){return\"\".concat(this.forward).concat(this.suffix)}get forward(){return this._forward}fromModel(t){super.fromModel(t),this.offset=t.offset,this._forward=t.forward}async parseForward(){const{model:t,error:e,clean:i,text:n,symbols:r}=kl(this.forward);if(e?(this.errorText=e,this.fwdModel=null):this.fwdModel=t,this._forward=this.isValid?i:n,this.isValid){this.offset>0?(this.suffix=\" (\".concat(L(xo(this.offset),vs(te.FMT_US_DATE_ONLY))(new Date),\")\"),this.outField=new rn(\"Close_\".concat(this.offset),d.Number,f.Forward,\"Close (\".concat(this.offset,\")\")),this.curves[0].fields[0]=this.outField):(this.suffix=\"\",this.outField=on.Close);const t=await Promise.all(r.map(t=>Ut(t)));this.roots=r.reduce((e,i,n)=>(e[i]=t[n],e),{})}else this.roots=null}get isValid(){return!K(this.errorText)}getMetaData(){if(this.isValid){const t=Object.values(this.roots).map(t=>V(t));this.metaData=new me(t),this.metaData.ready().then(t=>{t&&Po.a.publish(an.MD_CHANGED,{plot:this})})}}get forwardPolicy(){return{mapper:t=>t.query.root,recompute:o.Everything,missing:s.UseNext,stretch:t=>!1,fieldMap:new Map([[on.Close,this.outField]])}}getTimeSeries(){const t=Yp().getTimeSeriesDataSource(),e=Object.keys(this.roots),i=0===this.offset?T.Forward:T.HistoricalForward,n=e.map(e=>{const n={seriesKind:i,root:e,offset:this.offset,symbols:this.roots[e],getHashKey:()=>\"\".concat(i,\"|\").concat(e,\"|\").concat(this.offset)};return t.getTimeSeries(n)});this.timeSeries=new ql(this.fwdModel,n,this.forwardPolicy),this.timeSeries.ready().then(t=>{t&&Po.a.publish(an.TS_MANYCHANGED,{series:this.timeSeries,part:x.Unspecified})})}async initialize(){await this.parseForward(),this.isShutDown||(this.getMetaData(),this.getTimeSeries())}}function Sd(t){yt(1,arguments);var e=vt(t),i=e.getFullYear();return e.setFullYear(i+1,0,0),e.setHours(23,59,59,999),e}const Pd=t=>t.substr(0,t.lastIndexOf(\"::\"));class Ad extends _u{get title(){return this.isAverage?\"\".concat(this.offsets.length,\"Y Average\").concat(this.isAnnual?\" (prior)\":\"\"):\"\".concat(this.seasonal).concat(this.suffix)}get seasonal(){return this._seasonal}fromModel(t){super.fromModel(t),this.offset=t.offset,this.offsets=t.offsets,this.isAverage=!K(t.offset),this.isAnnual=!0===t.isAnnual,this._seasonal=t.seasonal}constructSeasonal(t,e){return Bl(Wl(t,t=>this.applyOffset(t,e)))}constructAverage(t){const e=this.offsets.map(e=>\"(\".concat(this.constructSeasonal(t,e),\")\"));return\"(\".concat(e.join(\"+\"),\")/\").concat(this.offsets.length)}prepareFields(){if(0===this.offset)this.suffix=\"\",this.outField=on.Close;else{const t=this.isPlain?\"\".concat(this.yearFromOffset(this.offset)):\"\".concat(this.offset,\"Y\"),e=this.isAverage?\"Avg\":t;this.suffix=\" (\".concat(e,\")\"),this.outField=new rn(\"Close_\".concat(e),d.Number,f.Seasonal,\"Close\".concat(this.suffix)),this.curves[0].fields[0]=this.outField}}applyOffset(t,e){return this.isPlain?\"\".concat(t,\"::\").concat(e):Wt(t,-e)}createSymbolToOffsetMapping(t){this.symbolToOffset=t.reduce((t,e)=>(this.isPlain||(t[e]=null),t),{}),t.forEach(t=>{this.offsets.forEach(e=>{this.symbolToOffset[this.applyOffset(t,e)]=e})})}async parseSeasonal(){let{model:t,error:e,symbols:i}=kl(this.seasonal,!0);const n=t=>(this.errorText=t,this.seaModel=null,null);if(e)return n(e);this.prepareFields();const r=new Map;for(const t of i){const e=await Ot(t);r.set(t,e)}t=Wl(t,t=>r.get(t)),i=Array.from(r.values());const s=i.every(t=>Dt(t)),o=i.every(t=>_t(t)),a=i.every(t=>!Dt(t)&&!_t(t));if(!s&&!o&&!a)return n(\"Mixed types of symbols aren't supported yet\");this.isPlain=a,this.createSymbolToOffsetMapping(i);const l=this.isAverage?this.constructAverage(t):this.constructSeasonal(t,this.offset),{model:c,clean:u,symbols:h}=kl(l,!0);this.seaModel=c,this._seasonal=u,this.symbols=h}get isValid(){return!K(this.errorText)}getActualSymbols(){return this.isPlain?[...new Set(this.symbols.map(Pd))]:et(this.symbols)}getMetaData(){if(this.isValid){const t=this.getActualSymbols();this.metaData=new me(t),this.metaData.ready().then(t=>{t&&Po.a.publish(an.MD_CHANGED,{plot:this})})}}get seasonalPolicy(){return{mapper:t=>t.query.surrogate||t.query.symbol,recompute:o.Everything,missing:s.UsePrevious,stretch:t=>this.shouldStretch(t),fieldMap:new Map([[on.Close,this.outField]])}}shouldStretch(t){return 0===this.symbolToOffset[t]&&(this.isAverage&&this.symbols.length>1||this.offset>0)}shiftYears(t){return Ct(new Date,-t)}yearFromOffset(t){return Pt(this.shiftYears(t))}getCmdtyRange(t){const e=this.shiftYears(t);return[Iu(e),Sd(e)]}getTimeSeries(){const t=Yp().getTimeSeriesDataSource(),e=Object.keys(this.symbolToOffset).map(e=>{const i=this.makeQuery();return i.surrogate=e,i.symbol=this.isPlain?Pd(e):e,i.offset=this.symbolToOffset[e],i.cacheMe=!this.isPlain||0===i.offset,this.isPlain&&(i.range=this.getCmdtyRange(i.offset),i.offset>0&&(i.disableStreamingUpdates=!0)),t.getTimeSeries(i)});this.timeSeries=new ql(this.seaModel,e,this.seasonalPolicy),this.timeSeries.ready().then(t=>{t&&Po.a.publish(an.TS_MANYCHANGED,{series:this.timeSeries,part:x.Unspecified})})}async initialize(){await this.parseSeasonal(),this.isShutDown||(this.getMetaData(),this.getTimeSeries())}}const wd=[\"bottom\",\"right\",\"left\"],Cd={bottom:\"center\",right:\"start\",left:\"end\"};class xd{constructor(t){this.lineWidth=1,this.arrowWidth=7,this.arrowLength=7,this.position=\"bottom\",this.fontSize=14,this.fontFamily=\"Arial\",this.padding=4,this.strokeColor=\"white\",this.textColor=\"white\",this.backgroundColor=\"black\",t&&this.configure(t)}configure(t){Object.assign(this,t)}draw(t,e,i,n,r){if(r=r||this.fontSize+this.padding+this.padding,!wd.includes(this.position.toLowerCase()))return void console.error(\"Can not draw indicator in position [\".concat(this.position,\"]\"));t.font=\"bold \".concat(this.fontSize,\"px \").concat(this.fontFamily),t.textAlign=Cd[this.position],t.strokeStyle=this.strokeColor,t.fillStyle=Le(this.backgroundColor),t.lineWidth=this.lineWidth;const s=t.measureText(n).width,o=Math.round(s+this.padding+this.padding),a=Math.round(o/2),l=Math.round(r/2);t.setLineDash([]);const c=\"bottom\"===this.position?Math.max(a+1,e):e;t.beginPath(),t.moveTo(c,i),\"right\"===this.position?(t.lineTo(c+this.arrowLength,i+l),t.lineTo(c+this.arrowLength+o,i+l),t.lineTo(c+this.arrowLength+o,i-l),t.lineTo(c+this.arrowLength,i-l)):\"left\"===this.position?(t.lineTo(c-this.arrowLength,i+l),t.lineTo(c-this.arrowLength-o,i+l),t.lineTo(c-this.arrowLength-o,i-l),t.lineTo(c-this.arrowLength,i-l)):\"bottom\"===this.position&&(t.lineTo(c+this.arrowWidth,i+this.arrowLength),t.lineTo(c+a,i+this.arrowLength),t.lineTo(c+a,i+r),t.lineTo(c-a,i+r),t.lineTo(c-a,i+this.arrowLength),t.lineTo(c-this.arrowWidth,i+this.arrowLength)),t.closePath(),t.stroke(),t.fill(),t.fillStyle=this.textColor,t.textBaseline=\"middle\",\"bottom\"===this.position?t.fillText(n,c,i+this.arrowLength+Ue(t,1)):\"right\"===this.position?t.fillText(n,c+this.arrowLength+this.padding,i):\"left\"===this.position&&t.fillText(n,c-this.arrowLength-this.padding,i)}}const Md=Array.from(Array(6),(t,e)=>++e).reverse();class Ed{constructor(){this.annotations=[],this.id=Ho()(),this.isCustomDomain=!1,this.ticks=null,this.lastUsedOptions=null,this.config={innerTickSize:7,tickPadding:5,indicatorPadding:4,fontWeight:400,fontSize:12},this.crosshairIndicator=new xd({fontSize:this.config.fontSize,arrowLength:this.config.innerTickSize})}makePlot(t){let e=null;switch(v[t.type]){case v.Symbol:e=new ku;break;case v.Expression:e=new Wu;break;case v.Study:e=new Bu;break;case v.IncomeStatement:e=new Uu(T.IncomeStatement);break;case v.BalanceSheet:e=new Uu(T.BalanceSheet);break;case v.Forward:e=new bd;break;case v.Seasonal:e=new Ad;break;default:throw new Error(\"\".concat(t.type,\" isn't supported yet\"))}return e.axis=this,e.fromModel(t),e}toPrice(t){return this.yScale.yToPrice(t)}toTime(t){return this.pane.presenter.view.toTime(t)}toAnnotationPoint(t){const e=this.toPrice(t.y),i=this.toTime(t.x);return new Vu(this,e,i)}toX(t){return this.pane.presenter.view.toX(t)}toY(t){return this.yScale.priceToY(t)}snapTo(t){const e={x:this.toX(t.time),y:this.toY(t.price)},i=this.pane.presenter,n=i.activeTool,r=n.annotation;return n.alignPointsMode&&r&&r.alignPointsSupported&&r.points.includes(t)?this.alignPoints(r,t,e):n.snapToSupported&&i.display.yAxis.snapAnnotationsToPrices&&(t.moveDirection===w.Both||t.moveDirection===w.Vertical)&&this.snapToPrices(t,e),e}snapToPrices(t,e){const i=this.plots.find(t=>t.main);if(i&&i.timeSeries&&i.timeSeries.hasData){const n=i.timeSeries.container,r=G(n.getTimeData(),+t.time,Number),s=[].concat(...i.curves.map(t=>t.fields)).filter(t=>n.hasField(t)).map(t=>{const i=n.getData(t)[r],s=this.toY(i);return{priceSnap:i,ySnap:s,dist:Math.abs(s-e.y)}}).filter(t=>t.dist<=te.SNAP_PROXIMITY_PIXELS).reduce((t,e)=>null===t||e.dist<t.dist?e:t,null);K(s)&&(t.price=s.priceSnap,e.y=s.ySnap,t.time=n.getTimeData()[r],e.x=this.toX(t.time))}}alignPoints(t,e,i){const n=t.points.find(t=>t!==e);if(e!==n&&n&&n.point){const t=n.point,r=(360+180*-Ee(t,i)/Math.PI)%360,s=22.5,o=r>90-s&&r<90+s||r>270-s&&r<270+s;if(r>360-s||r<s||r>180-s&&r<180+s)i.y=t.y,e.price=this.toPrice(i.y);else if(o)i.x=t.x,e.time=this.toTime(i.x);else{const n=Math.abs(i.x-t.x),r=t.y>i.y?-1:1;i.y=t.y+n*r,e.price=this.toPrice(i.y)}}}toPoint(t){if(K(this.pane.presenter.view))return this.snapTo(t)}makeAnnotation(t){let e=md(t.id,!0,t.traits)(this,!1),i=e.activePoints,n=t.points.length-i.length;return n>0&&e.addPoints(n),e.activePoints.forEach((e,i)=>{let n=t.points[i];J(n.price)&&J(n.time)&&e.update(n.price,n.time)}),e.visible=t.visible,e}expand(t){let e=[];switch(v[t.type]){case v.Forward:{const i=t.curves,n=t.offsets;delete t.curves,delete t.offsets;for(let r=0;r<i.length;r++){let s=Object.assign({},t);s.curves=[i[r]],s.offset=n[r],e.push(s)}break}case v.Seasonal:{const i=t.curves,n=t.offsets;delete t.curves,delete t.offsets;const r=n.length;for(let s=0;s<i.length;s++){let o=Object.assign({},t);o.curves=[i[s]],o.offsets=n,o.offset=s===r?null:n[s],(K(o.offset)||r>1)&&e.push(o)}break}case v.Annual:{const i=t.curves;delete t.curves;const n=\"{\".concat(t.annual,\"}\"),r=[...Array(5+1).keys()];let s={type:\"Seasonal\",isAnnual:!0,main:!0,seasonal:n,offsets:r,offset:0,curves:[i[0]]};e.push(s);let o={type:\"Seasonal\",isAnnual:!0,main:!0,seasonal:n,curves:[i[1]],offsets:r.slice(1),offset:null};e.push(o);break}default:e.push(t)}return e}fromModel(t){this.comparison=g[t.comparison],this.scale=y[t.scale],this.yScale=new Ou(this.scale),this.plots=[].concat(...t.plots.map(t=>this.expand(t))).map(t=>this.makePlot(t));const e=t.annotations||[];this.annotations=e.map(t=>this.makeAnnotation(t));const{chart:{fontFamily:i,backgroundColor:n},yAxis:{textColor:r,crosshair:{color:s}}}=this.pane.presenter.display;this.crosshairIndicator.configure({position:this.primary?\"right\":\"left\",fontFamily:i,strokeColor:s,textColor:r,backgroundColor:Ie(.15)(n)})}findIndex(t){return this.annotations.findIndex(e=>e.id===t.id)}addAnnotation(t){-1===this.findIndex(t)&&this.annotations.push(t)}fireAnnotationsChanged(t=!1){this.pane.presenter.onAnnotationsUpdated(this,t)}deleteAnnotation(t){t.isSelected&&this.pane.presenter.clearSelection();const e=this.findIndex(t);-1!==e&&this.annotations.splice(e,1),this.fireAnnotationsChanged(!t.isSelected)}duplicateAnnotation(t){const e=t.axis;let i=this.makeAnnotation(t.toModel());i.drawPoints(null,!0),i.offset({x:te.ANN_DUPLICATE_OFFSET,y:te.ANN_DUPLICATE_OFFSET}),e.addAnnotation(i),i.requestRedraw(),this.fireAnnotationsChanged()}updateAnnotation(t,e){t.isSelected&&this.pane.presenter.clearSelection(),t.updateFrom(e.traits,e.extras,e.points,e.visible),t.requestRedraw(),this.fireAnnotationsChanged()}setViewBox(t){this.viewBox=t;const{y:e,height:i}=this.viewBox;this.yScale.range([Math.floor(e),Math.floor(e+i)]),this.plots.forEach(e=>e.setViewBox(t))}get fullDomain(){return K(this._fullDomain)||(this._fullDomain=this.getDataDomain()),this._fullDomain}updateFullDomain(t){const e=this.fullDomain;this._fullDomain=this.getDataDomain([t,t],e)}getPlotDataDomain(t,e,i){const n=t.timeSeries;if(!n.hasData)return;const r=n.container,s=r.getTimeData(),o=t=>G(s,+t,Number),a=K(e)?o(e):0,l=K(i)?o(i):s.length-1,c=this.comparison===g.Percent,u=this.comparison===g.Value;if(c||u){const e=t.curves[0].fields,i=e.find(t=>\"Close\"===t.id)||e[0],n=r.getData(i)[a],s=t=>100*(t-n)/n,o=t=>t-n;t.priceMapper=c?s:o}else t.priceMapper=t=>t;const h=t.curves.map(t=>t.fields).flat().filter(t=>t.id!==on.Change.id),d=K(t.targetFields);d&&h.push(t.targetFields);const p={};let f=[null,null];return B(r.fields,h,t=>t.id).forEach(e=>{const[i,n]=(e=>{const i=d?t.curves[0]:t.curves.find(t=>t.fields.includes(e));if(!K(i)||0===i.shift)return[a,l];if(!K(p[i.id])){const t=i.shiftedTimeDomain;if(!K(t))return[a,l];p[i.id]=[o(t[0]),o(t[1])]}return p[i.id]})(e);Y(z(r.getData(e),i,n,t.priceMapper),f)}),t.isStudy&&\"VOL\"===t.model.study&&(f[0]=0),f}getDataDomain([t,e]=[null,null],i=[null,null]){let n=et(i);this.plots.filter(t=>!t.hasDetachedScale).forEach(i=>{const r=this.getPlotDataDomain(i,t,e);K(r)&&Y(r,n)});const[r,s]=n;if(!K(r,s))return null;let o=[Number(r),Number(s)];return o[0]===o[1]&&(o[0]-=1,o[1]+=1),o}setDomain(){const t=this.pane.presenter,e=t.view.xAxis.xScale.domain();if(!K(e))return;if(this.plots.filter(t=>t.hasDetachedScale).forEach(t=>{const i=this.getPlotDataDomain(t,e[0],e[1]);t.yScale.domain(i)}),this.isCustomDomain)return;let i=this.getDataDomain(e);if(this.pane===t.mainPlot.pane){const e=t.mainPlot.getPreviousValue(),n=tt(t.display,!1,\"chart\",\"previous\",\"forceVisible\");K(e,i)&&n&&(i[0]=Math.min(i[0],e),i[1]=Math.max(i[1],e))}if(this.yScale.priceDomain(i),K(i)){const t=this.getPadding(i);i=[i[0]-t[0],i[1]+t[1]]}this.yScale.domain(i)}getInitialPadding(){let t=Gt(\"#\".concat(te.HEADER_SIZE_PLACEHOLDER_ID));if(!K(t)){t=$t(document.body,\"div\"),zt(t,{display:\"none\"}),Yt(t,{id:te.HEADER_SIZE_PLACEHOLDER_ID,class:\"bcharts-card bcharts-card-first\"});const{lineHeight:e}=getComputedStyle(t);isNaN(Number.parseFloat(e))&&zt(t,{lineHeight:\"120%\"})}const{paddingTop:e,paddingBottom:i,marginTop:n,lineHeight:r}=getComputedStyle(t),s=this.pane.isMain?n:\"0\";if(\"cards\"!==this.pane.presenter.display.tooltip.mode)return Number.parseFloat(s);return[e,i,s,r].map(Number.parseFloat).reduce((t,e)=>t+e,0)+te.CARDS_Y_OFFSET}getPadding([t,e]){const i=this.pane.presenter,n=this.getInitialPadding(),r=te.PANE_CAP_MIN_PADDING_PERCENT*this.viewBox.height,s=Math.max(r,Math.min(te.PANE_CAP_MAX_PADDING_PERCENT*this.viewBox.height,n));let o=[this.toAmount(Math.ceil(r),t),this.toAmount(Math.ceil(s),e)];const a=i.mainPlot;if(a&&a.hasEvents){const t=Fu(i.view);o[1]+=this.toAmount(3*t,e+o[1])}return o}toAmount(t,e){const i=this.toY(e);return this.toPrice(i)-this.toPrice(i+t)}clearTicks(){this.ticks=null}getTicks(t,e=0){const{height:i}=this.viewBox,n=Ue(t,1.3),r={height:i,approxLineHeight:n,domain:this.yScale.domain()};if(K(this.ticks)&&K(r.domain)&&K(this.lastUsedOptions)&&K(this.lastUsedOptions.domain)&&r.height===this.lastUsedOptions.height&&r.approxLineHeight===this.lastUsedOptions.approxLineHeight&&r.domain[0]===this.lastUsedOptions.domain[0]&&r.domain[1]===this.lastUsedOptions.domain[1])return this.ticks;this.lastUsedOptions=r;const s=Math.floor((i+40)/(n+40));let o=this.yScale.getTicks(s);const a=tt(Yp().config,null,\"overrides\",\"yAxis\",\"tickProvider\");if(K(a)&&\"function\"==typeof a&&r.height>0&&K(r.domain)){const t=et(r);t.autoTicks=et(o),o=a(t)}const{innerTickSize:l,tickPadding:c,fontSize:u}=this.config;return this.ticks=o.map(i=>{const n=aa(this,i),r=t.measureText(n).width,s=Math.round(this.yScale.priceToY(i)),o={y1:s,y2:s,dy:0,label:n,labelY:s+.32*u};return this.primary?(o.x1=e,o.x2=o.x1+l,o.labelX=o.x2+r+c):(o.x1=e-l,o.x2=o.x1+l,o.labelX=o.x1-c),o}),this.ticks}widthNeeded(t){if(!K(this.fullDomain))return te.DEFAULT_PRICE_AXIS_WIDTH;t.save();const{fontWeight:e,fontSize:i}=this.config,{chart:{fontFamily:n}}=this.pane.presenter.display;t.font=\"\".concat(e,\" \").concat(i,\"px \").concat(n);const r=Math.max(...this.fullDomain.map(e=>t.measureText(aa(this,e,!0)).width)),{innerTickSize:s,tickPadding:o}=this.config,a=r+s+2*o;return t.restore(),a}draw(t){const{chart:{fontFamily:e},yAxis:{gridLines:i,textColor:n,visible:r}}=this.pane.presenter.display;if(!r)return;t.save();const{x:s,y:o,width:a,height:l}=this.viewBox,{fontWeight:c,fontSize:u}=this.config;He(t,this.viewBox),t.font=\"\".concat(c,\" \").concat(u,\"px \").concat(e),t.lineWidth=2,t.strokeStyle=i.color,t.textAlign=\"end\";const h=this.primary?s:a;t.setLineDash([]),Ge(t,h,o,o+l);const d=this.getTicks(t,h);this.drawTicks(t,d,n),this.drawPriceAdornments(t),t.restore()}drawTicks(t,e,i){t.fillStyle=i,e.forEach(e=>{t.fillText(e.label,e.labelX,e.labelY+e.dy)})}drawCrosshairIndicator(t,e){if(!this.pane.presenter.display.yAxis.crosshair.enabled)return;const i=this.primary?this.viewBox.x:this.viewBox.width,n=aa(this,this.yScale.yToPrice(e));this.crosshairIndicator.draw(t,i,e,n)}get indicatorHeight(){return this.config.fontSize+this.config.indicatorPadding+this.config.indicatorPadding}drawPriceAdornments(t){const e=this.pane.presenter,{chart:{fontFamily:i,previous:n},yAxis:{showLastValue:r,preventLabelOverlap:s}}=e.display,o=e.view,a=[],l=(t,e,i,n,r)=>{if(null!=e){e=t.priceMapper?t.priceMapper(e):e;const s=t.hasDetachedScale?t.metaData.format(e,r):null;a.push({y:t.priceToY(e),formattedValue:s,value:e,color:i,halfHeight:Math.round(this.indicatorHeight/2),priority:n})}};this.plots.forEach(t=>{t.timeSeries&&t.timeSeries.hasData&&((\"All\"===r||\"Main\"===r&&t.main)&&t.curves.filter(t=>t.visible).forEach(e=>{const i=e.pickMainField();let n=this.getLastValue(e.plot.timeSeries.container,i);const r=this.getLastColor(e);l(t,n,r,t.main?1:3,i)}),t.showPrevious&&l(t,t.getPreviousValue(),n.color,2))}),this.annotations.forEach(t=>{a.push(...t.getPriceScaleAdornments().map(t=>({y:this.toY(t.price),value:t.price,color:t.color,halfHeight:Math.round(this.indicatorHeight/2),priority:4})))}),a.sort((t,e)=>t.y-e.y),s&&function(t){t.forEach((t,e,i)=>{if(e>0){const n=i[e-1],r=(({y:t,halfHeight:e})=>t-e)(t),s=(({y:t,halfHeight:e})=>t+e)(n);r<s&&(t.y=s+1+t.halfHeight)}})}(a);const c=({y:e,value:n,formattedValue:r,color:s})=>{const{leftOffset:a,rightOffset:l}=o,c=this.primary?this.pane.viewBox.width-l:a,u=new xd({position:this.primary?\"right\":\"left\",fontSize:this.config.fontSize,padding:this.config.indicatorPadding,fontFamily:i,textColor:\"#fff\",strokeColor:s,backgroundColor:s}),h=r||aa(this,n);u.draw(t,c,e,h)};s?a.forEach(c):Md.forEach(t=>a.filter(e=>e.priority===t).forEach(c))}getLastValue(t,e){let i=t.getLastDataPoint(e);return null==i&&(i=F(t.getData(e),t=>null!==t)),i}getLastColor(t){const e=t.plot.timeSeries.container;return t.getColor(e.size-1)}}class Od{constructor(){this.id=Ho()()}fromModel(t){this.height=t.height,this.axes=t.axes.map((t,e)=>{const i=new Ed;return i.pane=this,i.primary=0===e,i.fromModel(t),i},this)}getBounds(){return this.viewBox}setViewBox(t){this.viewBox=t}draw(t){this.drawAxes(t),t.save(),this.clipToNoScales(t),this.drawPrevious(t),this.drawGrid(t),this.drawPlots(t),this.drawAnnotations(t),this.drawLogo(t),t.restore()}drawLogo(t){this.isMain&&function(t,{x:e,y:i,height:n,width:r}){if(!K(Lh))return;const{img:s,width:o,height:a,rect:l}=Lh,c=r/8,u=Math.min(Math.max(50,c),o),h=a*u/o,d=e+5,p=i+n-h-5;l.x=d,l.y=p,l.width=u,l.height=h,t.drawImage(s,d,p,u,h)}(t,this.getBoundsWithoutScales())}drawAxes(t){for(let e of this.axes)e.draw(t)}drawPrevious(t){const e=this.presenter.mainPlot;if(e.showPrevious){const i=e.getPreviousValue();if(null!=i){const{leftOffset:n,rightOffset:r}=this.presenter.view,s=n,o=this.viewBox.width-r,a=e.axis.yScale.priceToY(i),{color:l,dashStyle:c}=this.presenter.display.chart.previous,u=De(c);t.save(),t.strokeStyle=l,t.setLineDash(u),ze(t,a,s,o),t.restore()}}}getBoundsWithoutScales(){const t=this.viewBox.duplicate(),e=this.presenter.view;return t.x=e.leftOffset,t.width-=e.leftOffset+e.rightOffset,t}clipToNoScales(t){He(t,this.getBoundsWithoutScales())}drawAnnotations(t){t.save(),this.axes.forEach(e=>{e.annotations.forEach(e=>e.draw(t,!0))}),t.restore()}drawGrid(t){const{chart:{fontFamily:e},yAxis:{gridLines:i,visible:n,minorGridLines:r}}=this.presenter.display;if(!n||!i.visible)return;const{lineWidth:s,color:o,dashStyle:a}=i;t.save();const l=this.axes[0],{fontWeight:c,fontSize:u}=l.config;t.font=\"\".concat(c,\" \").concat(u,\"px \").concat(e);const h=l.getTicks(t),{leftOffset:d,rightOffset:p}=this.presenter.view,f=d,m=this.viewBox.width-p,g=(e,i,n)=>{t.lineWidth=e,t.strokeStyle=i,t.setLineDash(De(n)),t.beginPath()};if(g(s,o,a),h.forEach(e=>{t.moveTo(f,e.y1),t.lineTo(m,e.y2)}),t.stroke(),r&&r.visible&&h.length>=2){const{lineWidth:e,color:i,dashStyle:n}=r,s=(h[0].y1-h[1].y1)/5;g(e,i,n),h.forEach(e=>{for(let i=1;i<5;i++){const n=Math.ceil(e.y1+i*s);t.moveTo(f,n),t.lineTo(m,n)}}),t.stroke()}t.restore()}drawYCrosshair(t,e){const{yAxis:{crosshair:{enabled:i,showValue:n,color:r,dashStyle:s}}}=this.presenter.display;if(!i)return;const o=De(s);t.strokeStyle=r,t.setLineDash(o);const a=this.presenter.view.leftOffset,l=this.viewBox.width-this.presenter.view.rightOffset,c=Ke();c.prolog(t),ze(t,c.adjust(e.y),c.adjust(a),c.adjust(l)),c.epilog(t),n&&this.axes.forEach(i=>{i.drawCrosshairIndicator(t,e.y)})}drawNoData(t){t.save(),t.font=\"800 14px \".concat(this.presenter.display.chart.fontFamily),t.fillStyle=\"#f00\";Be(t,Yp().config.noDataText||te.NO_DATA_TEXT,{x:this.viewBox.centerX,y:this.viewBox.centerY},b.Center),t.restore()}get isMain(){const t=this.presenter.mainPlot;return this.axes.some(e=>e.plots.includes(t))}drawPlots(t){t.save();const e=t=>t&&t.hasData&&t.container.isEmpty,i=this.presenter.mainPlot;for(let n of this.axes){for(let r of n.plots){const n=e(r.timeSeries),s=this.presenter.display.chart.showNoDataText;(!K(s)||s)&&r.main&&n?this.drawNoData(t):r===i||n||r.draw(t)}n.plots.includes(i)&&!e(i.timeSeries)&&i.draw(t)}t.restore()}}function Dd(t,e){return{width:t,spacing:e,get totalWidth(){return this.width+this.spacing},offset:0}}class Ld extends Eu{constructor(t,e){super(),this.timeline=t;const i=t.presenter.display;this.marginBars=i.xAxis.marginBars||0,this.aggregation=e,this.bar=Dd(tt(i,te.DEFAULT_BAR_WIDTH,\"chart\",\"bar\",\"width\"),tt(i,te.DEFAULT_BAR_SPACING,\"chart\",\"bar\",\"spacing\")),this._extent=null,this.wasZoomed=!1,this.fitAllData=!1}extent(){return Mu.call(this,\"_extent\",arguments[0])}get presenter(){return this.timeline.presenter}get display(){return this.presenter.display}scaleBarToFit(){if(this.wasZoomed)return;if(this.fitAllData)return this.scaleBarToFitDensity(this.timeline.withoutPrologEpilogLength);const t=this.display.xAxis.visibleRange;if(K(t))return this.scaleBarToFitRange([t.from,t.to]);const e=this.display.density;if(Number.isFinite(e))return this.scaleBarToFitDensity(e);const i=this.display.period;return Number.isFinite(i)?this.scaleBarToFitPeriod(i):void 0}deriveExtentsFromBarWidth(t){if(!K(this._range))return null;if(0===this.timeline.length)return null;const e=this._range[1]-this._range[0],i=e/t.totalWidth,n=Math.ceil(i);t.offset=e-n*t.totalWidth;let r=this.timeline.lastSeriesIndex+this.marginBars;const s=this._domain&&this._domain[1];s&&(r=G(this.timeline,+s,Number,pa));return[r-n+1,r]}adjustDomain(){if(K(this._range)){if(this.scaleBarToFit(),!K(this.display.xAxis.visibleRange)){const t=this.deriveExtentsFromBarWidth(this.bar);if(!K(t))return;this.extent(t)}this.setDomainFromExtent()}}xToTime(t){if(!this.ready)return null;const e=t-this._range[0]-this.bar.offset,i=Math.floor(e/this.bar.totalWidth),n=this._extent[0]+i;return this.timeline.at(n)}timeToIndex(t){return this.ready?(t=\"number\"==typeof t?t:+t,G(this.timeline,t,Number,pa)):null}indexToX(t){const e=t-this._extent[0];return this.bar.width/2+this.range()[0]+this.bar.offset+e*this.bar.totalWidth}timeToX(t){if(!this.ready)return null;const e=this.timeToIndex(t);return this.indexToX(e)}zoom(t){const e=t,i=e*this.bar.width/100,n=this.bar.width-i,r=this.bar.spacing-e*this.bar.spacing/100;if(n>te.MAXIMUM_BAR_WIDTH||n<te.MINIMUM_BAR_WIDTH)return!1;const s=Dd(n,r),o=this.deriveExtentsFromBarWidth(s);return!!this.isUsableExtent(o)&&(this.setBar(n,r),this.adjustDomain(),this.wasZoomed=!0,!0)}scaleBarToFitRange(t){const e=(t,e,i,n)=>K(t)?G(this.timeline,t,Number,pa,i,n):e,{from:i,to:n}=this.presenter.data.range||{},r=t[0]===i&&t[1]===n,{firstSeriesIndex:s,lastSeriesIndex:o}=this.timeline,a=r?s:void 0,l=r?o:void 0,c=[e(t[0],s,a,l),e(t[1],o,a,l)];this.timeline.at(c[1])>t[1]&&(c[1]=Math.max(0,c[1]-1)),this.extent(c),this.scaleBarToFitDensity(c[1]-c[0]+1)}scaleBarToFitDensity(t){const e=Math.max(te.MINIMUM_BARS_VISIBLE,t),i=this.display.xAxis.marginBars||0,n=(this._range[1]-this._range[0])/(e+i);this.setBar(2/3*n,1/3*n,!1)}scaleBarToFitPeriod(t){const e=this.timeline.lastSeriesIndex;let i=this.timeline.at(e),n=i,r=e;const s=this.presenter.data.aggregation;if(s.isEndOfDay||s.isIntraday&&t>=te.INTRA_THRESHOLD)for(;r>0&&Go(i,n)<t;)r--,n=this.timeline.at(r);else if(!s.isTick){let e=Math.floor(t/te.ONE_DAY_MILLIS);const n=t=>function(t,e){yt(2,arguments);var i=Go(t,e)/6e4;return i>0?Math.floor(i):Math.ceil(i)}(t,Tt(t)),s=n(i);let o=i;for(;r>0;){let t=this.timeline.at(r);const i=bt(t,o);if(0===e){if(n(t)<=s||!i)break}else i||(e--,o=t);r--}}this.scaleBarToFitDensity(e-r+1)}setBar(t,e,i=!0){const[n,r]=dt(t,e,te.MINIMUM_BAR_WIDTH,te.MAXIMUM_BAR_WIDTH);this.bar.width=n,this.bar.spacing=r,this.wasZoomed||(this.resetBar={width:n,spacing:r}),i&&(this.presenter.model.display.chart.bar={width:t,spacing:e})}resetZoom(){K(this.resetBar)?(this.bar.width=this.resetBar.width,this.bar.spacing=this.resetBar.spacing):(this.bar.width=te.DEFAULT_BAR_WIDTH,this.bar.spacing=te.DEFAULT_BAR_SPACING),delete this.presenter.model.display.chart.bar,this.adjustDomain()}isUsableExtent(t){return K(t)&&K(t[0],t[1])&&t[0]>=0&&t[1]<this.timeline.withPrologEpilogLength&&t[1]-t[0]>=te.MINIMUM_BARS_VISIBLE}shiftBars(t,e=null){const i=this._extent.map(e=>e+t);this.isUsableExtent(i)&&(K(e)&&(this.bar.offset=e),this.extent(i),this.setDomainFromExtent())}setDomainFromExtent(){this.domain(this.extent().map(t=>this.timeline.at(t)))}pan(t){if(!Number.isFinite(t)||0===t)return;const e=t%this.bar.totalWidth;let i=this.bar.offset+e;const n=Math.sign(t);let r=-(t<0?Math.ceil:Math.floor)(t/this.bar.totalWidth);(i>this.bar.totalWidth||i<-this.bar.totalWidth)&&(r+=i>0?-1:1,i-=n*this.bar.totalWidth),this.shiftBars(r,i)}getSeriesThatCouldLoadMoreData(){const t=this.domain();if(!K(t)||!K(t[0]))return[];const e=t[0].getTime();return this.timeline.presenter.allPlots.map(t=>t.timeSeries).filter(t=>!(!K(t)||!t.hasData||0===t.container.size||!0!==t.canLoadMoreData)&&e<=t.container.getTimeData()[0].getTime())}}class _d{constructor(t){this.xScale=new Ld(t.presenter.timeline,t.presenter.data.aggregation),this.view=t,this.ticks=null,this.lastUsedOptions=null,this.config={innerTickSize:5,tickPadding:5,indicatorPadding:5,fontWeight:200,fontSize:12};const{chart:{fontFamily:e,backgroundColor:i},xAxis:{textColor:n,visible:r,crosshair:{color:s}}}=this.view.presenter.display;this.isVisible=r,this.crosshairIndicator=new xd({position:\"bottom\",fontSize:this.config.fontSize,fontFamily:e,padding:this.config.indicatorPadding,strokeColor:s,textColor:n,backgroundColor:Ie(.15)(i),arrowLength:this.config.innerTickSize})}setDomain(){this.xScale.adjustDomain();const t=this.view.presenter.display.period===te.FIFTY_YEARS_MILLIS;K(this.xScale.extent())&&!t&&this.checkForMoreData()}zoom(t){const e=this.xScale.zoom(t);return this.checkForMoreData(),e}checkForMoreData(){this.xScale.getSeriesThatCouldLoadMoreData().forEach(t=>t.loadMoreData())}shouldScrollIntoView(t){const e=this.xScale.extent();return!!K(e)&&(t-this.xScale.timeline.lastSeriesIndex>=0&&t-e[1]<=1)}pan(t){this.xScale.pan(t),this.checkForMoreData()}resetZoom(){this.xScale.resetZoom()}get barsToLast(){const t=this.xScale.timeline.lastSeriesIndex,e=this.xScale.extent();return t-(e?e[1]:t)}canGoToLast(){return this.barsToLast>0}goToLatest(){this.canGoToLast()&&(this.xScale.shiftBars(this.barsToLast+this.xScale.marginBars+1),this.view.setPriceAxesDomains(),this.view.redraw())}setViewBox(t){this.viewBox=t;const{x:e,width:i}=this.viewBox;this.xScale.range([e,e+i])}heightNeeded(t){if(!this.isVisible)return 0;const e=this.view.presenter.display.chart.fontFamily,{fontWeight:i,fontSize:n}=this.config;t.save(),t.font=\"\".concat(i,\" \").concat(n,\"px \").concat(e);const{innerTickSize:r,tickPadding:s,indicatorPadding:o}=this.config,a=Ue(t,1)+r+s+o;return t.restore(),a}getTicks(t){if(K(this.lastUsedOptions)&&(e=t.agg,i=this.lastUsedOptions.agg,e.unit===i.unit&&e.size===i.size&&e.spec===i.spec)&&t.unitWidth===this.lastUsedOptions.unitWidth&&t.barWidth===this.lastUsedOptions.barWidth&&t.extent[0]===this.lastUsedOptions.extent[0]&&t.extent[1]===this.lastUsedOptions.extent[1]&&t.formatString===this.lastUsedOptions.formatString&&t.minTickInterval===this.lastUsedOptions.minTickInterval&&K(this.ticks))return this.ticks;var e,i;this.lastUsedOptions=t;const n=function(t){switch(t.agg.unit){case u.Tick:return new Qo(t);case u.Intraday:return new ea(t,t.agg.size);case u.Day:return new ia(t);case u.Week:return new na(t);case u.Month:case u.Quarter:return new ra(t);case u.Year:return new sa(t);default:throw new Error(\"Aggregation unit \".concat(u[t.agg.unit],\" not supported.\"))}}(t),r=Math.max(0,t.extent[0]),s=Math.min(this.xScale.timeline.withPrologEpilogLength-1,t.extent[1]+1);return this.ticks=this.view.presenter.timeline.slice(r,s).map((t,e)=>{if(!K(t)||Number.isNaN(t.getTime()))return null;const i=n.getTick(t);return K(i)&&(i.index=r+e),i}).filter(t=>K(t)),this.ticks}normalizeDuration(t){const e=function(){const t=Object.keys($o);return 1===$o.Day.Multipliers[0]&&t.forEach(t=>{const e=$o[t],i=ht(e.Period);e.One=1*i,e.Multipliers=e.Multipliers.map(t=>t*i)}),$o}();let i=e.Year;const n=Object.keys(e);for(let r=0;r<n.length-1;++r){const s=e[n[r]].Multipliers,o=e[n[r+1]].Multipliers,a=(V(s)+W(o))/2;if(t<=a){i=e[n[r]];break}}const r=i.Multipliers,s=r.findIndex(e=>t<e);let o=-1===s?V(r):r[s];return\"P1M\"===i.Period?o*=.9:\"P1W\"===i.Period&&(o*=.84),o}draw(t){if(!this.isVisible)return;const{xAxis:{gridLines:e,textColor:i,minTickInterval:n,tickPixelInterval:r,format:s,forceTicksVisible:o},chart:{fontFamily:a}}=this.view.presenter.display,{fontWeight:l,fontSize:c,innerTickSize:u,tickPadding:h}=this.config,{x:d,y:p,width:f}=this.viewBox,{lineWidth:m,color:g,dashStyle:y}=e,v=De(y);t.textAlign=\"center\",t.font=\"\".concat(l,\" \").concat(c,\"px \").concat(a),t.lineWidth=1,t.strokeStyle=g,t.fillStyle=i,t.setLineDash([]),ze(t,p,d,d+f);const T=this.xScale.extent(),b=t=>!K(t)||!K(t[0],t[1]);if(b(T))return;const S=e=>t.measureText(e).width,P=r>0?r:120,A=this.xScale.domain();if(b(A))return;const w=(A[1].getTime()-A[0].getTime())*P*.6/f,C=this.normalizeDuration(w),x=this.view.presenter.data.aggregation.isEndOfDay,M=(t,e)=>{if(!K(t.date))return!0;if(i=t.date,r=e.date,(K(i)?Go(r,i):te.FIFTY_YEARS_MILLIS)<n)return!1;var i,r;const s=e.x-t.x,o=e.date.getTime()-t.date.getTime()>=C,a=s>P;return!(t.x+t.textWidth/2>=e.x-e.textWidth/2)&&(a||!!x&&o)},E=d+f,O=({text:i,x:n,date:r})=>{K(r)&&(Ge(t,n,p,p+u),t.fillText(i,n,p+u+h+.71*c),e.visible&&(t.save(),t.lineWidth=m,t.setLineDash(v),Ge(t,n,0,p),t.restore()))},D={agg:this.view.presenter.data.aggregation,unitWidth:S(\"M\"),barWidth:this.xScale.bar.width,extent:T,formatString:s,minTickInterval:n||0,duration:w},L=this.getTicks(D);let _={date:null,priority:999,x:-999,text:null,index:-1,textWidth:0};L.forEach(t=>{t.x=this.xScale.indexToX(t.index),t.textWidth=S(t.text),(t=>{const{x:e,textWidth:i}=t;let n=e;if(o){const r=i/2;n=e-r<d?d+r:e,n=n+r>E?E-r:n,t.x=n}})(t),M(_,t)?(O(_),_=t):t.priority<_.priority&&(_=t)}),O(_),this.drawTimeAdornments(t)}drawTimeAdornments(t){const e=this.view.presenter,{chart:{fontFamily:i}}=e.display,n=[];this.view.presenter.allAnnotations.forEach(t=>{n.push(...t.getTimeScaleAdornments().map(t=>({x:this.xScale.timeToX(t.time),value:la(e,t.time),color:t.color})))}),n.sort((t,e)=>t.x-e.x),n.forEach(e=>{new xd({position:\"bottom\",fontSize:this.config.fontSize,fontFamily:i,padding:this.config.indicatorPadding,strokeColor:te.COLOR_TRANSPARENT,textColor:\"#fff\",backgroundColor:e.color,arrowLength:this.config.innerTickSize}).draw(t,e.x,this.viewBox.y+1,e.value)})}drawCrosshair(t,{x:e}){const i=this.view.presenter,{enabled:n,showValue:r,color:s,dashStyle:o}=i.display.xAxis.crosshair;if(!n)return;const a=this.xScale.xToTime(e);e=this.xScale.timeToX(a);const l=De(o);t.strokeStyle=s,t.setLineDash(l);const c=Ke();if(c.prolog(t),Ge(t,c.adjust(e),0,c.adjust(this.viewBox.y)),c.epilog(t),!r||!i.display.xAxis.visible)return;const u=la(i,a);this.crosshairIndicator.draw(t,e,this.viewBox.y+1,u,this.viewBox.height-2);const{plotHover:h}=i.display.chart;h&&i.allPlots.forEach(i=>i.curves.forEach(i=>i.drawHover(t,a,e)))}}const Id={mousedown:\"onMouseDown\",mousemove:\"onMouseMove\",mouseup:\"onMouseUp\",dblclick:\"onMouseDblClick\",contextmenu:\"onContextMenu\",mouseover:\"onMouseEnter\",mouseout:\"onMouseLeave\",wheel:\"onWheel\",touchstart:\"onMouseDown\",touchmove:\"onMouseMove\",touchend:\"onMouseUp\",keydown:\"onKeyDown\"},Nd={Shift:\"shiftKey\",Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\"};class Rd{constructor(t){this.subscriptions=[],this.view=t}init(t){const e=$();Object.keys(Id).filter(t=>!(t=>t.startsWith(\"touch\"))(t)||e).forEach(e=>{const i=t=>{const i=Id[e];!0===this.notifyActiveTool(i,t)&&t.preventDefault()};t.addEventListener(e,i),this.subscriptions.push(()=>{t.removeEventListener(e,i)})})}shutdown(){this.subscriptions.forEach(t=>t()),this.subscriptions=[]}notifyActiveTool(t,e){const i=this.view.presenter;if(void 0===i||null===i.activeTool)return!1;const n=this.getPayload(e,i),r=i.activeTool;let s=!1;return\"function\"==typeof r[t]&&(s=r[t](n)||!1),s}getPayload(t,e){const i=t instanceof MouseEvent,n=$()&&t instanceof TouchEvent;if(i||n){const r={x:0,y:0};if(n&&1===t.touches.length){const e=t.touches[0],{left:i,top:n}=t.target.getBoundingClientRect();r.x=e.clientX-i,r.y=e.clientY-n}else r.x=t.offsetX,r.y=t.offsetY;const s={button:i?t.which:P.Left,offset:r,view:e.view,presenter:e,originalEvent:t};if(t instanceof WheelEvent&&(s.delta=t.shiftKey?t.deltaX:t.deltaY),n&&2===t.touches.length){const[e,i]=t.touches;s.pinchZoom=!0;const n=e.clientX-i.clientX,r=e.clientY-i.clientY;s.pinchDistance=Math.sqrt(n*n+r*r)}return s.getModifier=e=>t[Nd[A[e]]],this.view.splitters.forEach((t,e)=>{t.contains(r)&&(s.splitter=[e,e+1])}),e.panes.forEach(t=>{if(t.getBounds().contains(r)){const e=t.axes.find(t=>t.viewBox.contains(r));if(e)s.priceAxis=e;else{const e=t.axes.find(t=>t.primary);s.point=e.toAnnotationPoint(r)}}}),s}if(t instanceof KeyboardEvent){let i={key:t.key||t.keyIdentifier,code:t.keyCode||t.charCode,repeat:t.repeat,presenter:e,getModifier:e=>t.getModifierState(A[e])};return i}}}function Hd(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,n)}return i}function kd(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?Hd(Object(i),!0).forEach((function(e){Fd(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):Hd(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}function Fd(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}function Ud(t,e){if(null==t)return{};var i,n,r=function(t,e){if(null==t)return{};var i,n,r={},s=Object.keys(t);for(n=0;n<s.length;n++)i=s[n],e.indexOf(i)>=0||(r[i]=t[i]);return r}(t,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);for(n=0;n<s.length;n++)i=s[n],e.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(t,i)&&(r[i]=t[i])}return r}class Bd{constructor(t){this.view=t,this.text=null,this.align=\"center\",this.verticalAlign=\"top\",this.x=0,this.y=0,this.style={color:\"#333\",fontSize:18}}update(t){let{style:e}=t,i=Ud(t,[\"style\"]);Object.assign(this,i),this.style=kd(kd({},this.style),e)}read(){const t={};return Object.assign(t,this),delete t.view,t}draw(t){if(!this.text)return;const{fontFamily:e}=this.view.presenter.display.chart,{fontSize:i,color:n}=this.style,{x:r,y:s,width:o,height:a}=this.view.presenter.mainPlot.axis.pane.getBounds(),l=r+this.view.leftOffset,c=r+o-this.view.rightOffset;let u=l;u=\"center\"===this.align?o/2:\"right\"===this.align?c:l;let h=s+i;\"middle\"===this.verticalAlign?h=s+i+a/2:\"bottom\"===this.verticalAlign&&(h=s+a),u+=this.x,h+=this.y,t.save(),t.font=\"\".concat(i,\"px \").concat(e),t.textAlign=this.align,t.textBaseline=\"bottom\",t.fillStyle=n,t.fillText(this.text,u,h),t.restore()}}var Vd=i(173);const Wd=window.ResizeObserver||Vd.a;class jd{constructor(){this.listeners=[],this.leftOffset=0,this.rightOffset=0,this.title=new Bd(this),this.draw=this.draw.bind(this)}findSvgParentWithClass(t,e){return[t,t.parentElement,t.parentElement.parentElement].find(t=>K(t)&&t.className===e)}onNonToolHandledMouseDown({target:t}){const e=this.presenter;if(\"string\"==typeof t.className&&t.className.split(\" \").includes(\"value-title\"))e.onCardClicked(t);else{const i=this.findSvgParentWithClass(t,\"move-pane\");if(K(i))return void e.onMovePaneClicked(i);const n=this.findSvgParentWithClass(t,\"delete-plot\");K(n)&&e.deletePlotClicked(n)}}initialize(t){this.presenter=t,this.el=Gt(\"#\".concat(this.presenter.renderTo));const e=new Wd(t=>{for(let e of t){const{width:t,height:i}=e.contentRect;this.setSize(t,i),K(this.tooltip)&&this.tooltip.repositionAuto()}});e.observe(this.el.parentElement),this.listeners.push(()=>e.unobserve(this.el.parentElement));const i=t=>this.onNonToolHandledMouseDown(t);this.el.addEventListener(\"mousedown\",i),this.listeners.push(()=>this.el.removeEventListener(\"mousedown\",i)),zt(this.el,{flex:1,display:\"flex\",position:\"relative\",\"flex-direction\":\"column\",\"touch-action\":\"pan-x pan-y\"}),this.tooltip=new Ch(this);const{clientHeight:n,clientWidth:r}=this.el;this.width=r,this.height=n,this.canvasContainer=$t(this.el,\"div\"),Yt(this.canvasContainer,{class:\"chart-canvas-container\"}),zt(this.canvasContainer,{flex:1,display:\"flex\",\"flex-direction\":\"column\",position:\"relative\",height:\"100%\"}),this.mainCanvas=$t(this.canvasContainer,\"canvas\");const s={height:\"\".concat(n,\"px\"),width:\"\".concat(r,\"px\"),\"z-index\":2,position:\"absolute\",top:0,left:0};zt(this.mainCanvas,s),this.mouseCanvas=$t(this.canvasContainer,\"canvas\"),Yt(this.mouseCanvas,{tabIndex:1}),s[\"z-index\"]=3,s.outline=\"none\",zt(this.mouseCanvas,s),this.goToLatestButton=$t(this.el,\"button\"),Kt(this.goToLatestButton,'<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\\n            <path d=\"M13.707 17.707l5-5c0.391-0.391 0.391-1.024 0-1.414l-5-5c-0.391-0.391-1.024-0.391-1.414 0s-0.391 1.024 0 1.414l4.293 4.293-4.293 4.293c-0.391 0.391-0.391 1.024 0 1.414s1.024 0.391 1.414 0zM6.707 17.707l5-5c0.391-0.391 0.391-1.024 0-1.414l-5-5c-0.391-0.391-1.024-0.391-1.414 0s-0.391 1.024 0 1.414l4.293 4.293-4.293 4.293c-0.391 0.391-0.391 1.024 0 1.414s1.024 0.391 1.414 0z\"></path>\\n        </svg>'),zt(this.goToLatestButton,{position:\"absolute\",right:0,bottom:0,zIndex:3}),Yt(this.goToLatestButton,{class:\"go-to-latest\"}),this.goToLatestButton.onclick=()=>{this.xAxis.goToLatest()},this.listeners.push(()=>{this.goToLatestButton.onclick=null}),this.mainContext=this.mainCanvas.getContext(\"2d\"),this.mouseContext=this.mouseCanvas.getContext(\"2d\"),this.splitters=[],this.xAxis=new _d(this),this.eventCapture=new Rd(this),this.eventCapture.init(this.mouseCanvas),this.setChartSize(r,n)}reinitialize(){Xt(\".bcharts-card\").forEach(t=>t.remove()),\"standard\"!==this.presenter.display.tooltip.mode&&this.tooltip.hide(),this.tooltip.setMode(this.presenter.display.tooltip.mode),this.xAxis=new _d(this),this.recalculateLayout(),this.redraw()}setSize(t,e,i=!1){this.setChartSize(t,e),this.redraw(i)}setChartSize(t,e){const i={width:\"\".concat(t,\"px\"),height:\"\".concat(e,\"px\")};zt(this.el,i),this.width=t,this.height=e;const n=window.devicePixelRatio||1,r={height:this.height*n,width:this.width*n};[this.mainCanvas,this.mouseCanvas].forEach(t=>{Yt(t,r),zt(t,i)}),this.mainContext.scale(n,n),this.mouseContext.scale(n,n),this.recalculateLayout()}widthNeeded(t,e){return Math.max(...this.presenter.allAxes.filter(t=>t.primary===e).map(e=>e.widthNeeded(t)))}recalculateLayout(){if(!this.isHostElementVisible)return;this.leftOffset=0,this.rightOffset=0,this.presenter.allAxes.forEach(t=>t.clearTicks()),this.splitters.length=0;const t=this.xAxis.heightNeeded(this.mainContext),e=this.widthNeeded(this.mainContext,!0),i=this.height-t,n=this.presenter.panes;let r=I(n.map(t=>t.height)),s=0;const o=te.PANE_SPLITTER_PERCENT_HEIGHT/100,a=Math.floor(o*i);if(r*=1+(n.length-1)*o,this.presenter.display.yAxis.visible){n.some(t=>t.axes.length>1)&&(this.leftOffset=this.widthNeeded(this.mainContext,!1)),this.rightOffset=e}n.forEach((t,n,o)=>{const l=n===o.length-1,c=Math.floor(i*t.height/r),u=new ke(0,s,this.width,c);t.setViewBox(u);const h=new ke(this.width-this.rightOffset,s,e,c);t.axes[0].setViewBox(h);const d=t.axes[1];if(d){const t=new ke(0,s,this.leftOffset,c);d.setViewBox(t)}if(s+=c,!l){const t=new ke(this.leftOffset,s,this.width-this.rightOffset-this.leftOffset,a);this.splitters.push(t),s+=a}});const l=new ke(this.leftOffset,s,this.width-this.rightOffset-this.leftOffset,t);this.xAxis.setViewBox(l),zt(this.goToLatestButton,{right:\"\".concat(e+5,\"px\"),bottom:\"\".concat(t+5,\"px\")}),this.xAxis.setDomain(),this.setPriceAxesDomains()}setPriceAxesDomains(){this.presenter.allAxes.forEach(t=>{t.setDomain()})}refreshLastBarTooltipValues(t){}draw(){this.mainContext.save(),this.mainContext.miterLimit=1,this.drawBackground(this.mainContext),this.xAxis.draw(this.mainContext);for(let t of this.presenter.panes)t.draw(this.mainContext);this.drawSplitters(this.mainContext),this.title.draw(this.mainContext);const t=Yp().config.showGoToLatest,{showGoToLatest:e}=this.presenter.display.chart,i=K(t)?t:e;this.goToLatestButton.style.display=i&&this.xAxis.canGoToLast()?\"block\":\"none\",this.mainContext.restore()}get isHostElementVisible(){return K(this.el)&&K(this.el.offsetParent)}redraw(t=!1){this.isHostElementVisible&&(t?this.draw():Yp().redraw(this.presenter.renderTo))}drawBackground(t){const e=this.presenter.display.chart.backgroundColor;t.clearRect(0,0,this.width,this.height),t.fillStyle=e,t.fillRect(0,0,this.width,this.height)}drawCrosshair({ap:t,offset:e}){const i=this.mouseContext;i.clearRect(0,0,this.width,this.height),t&&(this.xAxis.drawCrosshair(i,e),this.presenter.display.yAxis.visible&&t.axis.pane.drawYCrosshair(i,e))}drawSplitters(t){const e=(t=>{const e=Ne(t);return Re(_e(function({r:t,g:e,b:i,a:n}){return{r:255-t,g:255-e,b:255-i,a:n}}(e),e,.7))})(this.presenter.display.chart.backgroundColor);t.stokeStyle=e,t.lineWidth=2,this.splitters.forEach(e=>{const{x:i,y:n,width:r,height:s}=e,o=n+s/2;t.beginPath(),t.moveTo(i,o),t.lineTo(i+r,o),t.stroke()})}toTime(t){return this.xAxis.xScale.xToTime(t)}toIndex(t){return this.xAxis.xScale.timeToIndex(t)}toX(t){return this.xAxis.xScale.timeToX(t)}setCursor(t){const e=function(t){switch(t){case S.Arrow:default:return\"default\";case S.Crosshair:return\"crosshair\";case S.Hand:return\"pointer\";case S.Move:return\"move\";case S.ResizeVertical:return\"ns-resize\";case S.Grabbing:return\"grabbing\"}}(t);zt(this.el,{cursor:e})}shutdown(){this.listeners.forEach(t=>t()),this.eventCapture&&this.eventCapture.shutdown(),this.tooltip&&this.tooltip.remove(),Xt(\".bcharts-card\").forEach(t=>t.remove()),this.canvasContainer.remove()}}function Gd(t){switch(c[t]){case c.OHLC:case c.HLC:case c.Candlestick:case c.HollowCandles:case c.HeikinAshi:case c.ElderImpulseSystem:return!0;default:return!1}}function zd(t,e){switch(t){case v.Symbol:case v.Expression:return function(t,e){const i=Yp().getDefaultMultiFieldCurve();if(null!==i&&i.style===t)return i;const n=t=>t.id,r=[on.Open,on.High,on.Low,on.Close,on.Change].map(n);c[t]===c.HLC&&r.splice(0,1);const s=[on.Close].map(n),o=et(te.COLOR_DEFAULT_AREA),a=et(te.COLOR_DEFAULT_OHLC),l=et(te.COLOR_DEFAULT_VARY);let u={fields:r,colors:l,lineWidth:1,visible:!0};switch(c[t]){case c.OHLC:case c.HLC:case c.Renko:u.colors=e?l:[a];break;case c.Candlestick:case c.HollowCandles:case c.HeikinAshi:break;case c.ElderImpulseSystem:u.colors=l.concat(o);break;case c.Line:u.fields=s,u.colors=[a];break;case c.Area:{u.fields=s;let t=Ne(o);t.a=.5,u.colors=[Re(t),o];break}case c.Column:u.fields=s;break;default:throw new Error('Curve style \"'.concat(t,'\" is not supported here.'))}return u}(e.style||c[c.Candlestick],e.varyColorPerBar);case v.Forward:case v.Seasonal:return{fields:[\"Close\",\"Change\"],style:\"Line\",lineWidth:2,visible:!0,colors:[\"#888\"],varyColorPerBar:!1};case v.Annual:return{colors:[\"#00b04b\"],fields:[\"Close\",\"Change\"],style:\"Line\",lineWidth:2,visible:!0,varyColorPerBar:!1};default:throw new Error(\"Unexpected plot type '\".concat(v[t],\"', don't know its default curve.\"))}}function Yd(t,e){var i;Object.keys(t).length>0&&(t.varyColorPerBar=t.varyColorPerBar||function(t){switch(c[t]){case c.Candlestick:case c.HollowCandles:case c.HeikinAshi:case c.ElderImpulseSystem:case c.Column:case c.Renko:return!0;default:return!1}}(t.style)||void 0!==(i=t.attributes)&&i.length>0&&i.some(t=>t===l[l.ChangeBased]||t===l[l.OpenVsClose]));const n=zd(v[e],t);return lt(n,t),n}var qd=function(t,e){const i=e.curves[0],n=Xd(t),r=Yd(i,e.type);n.curves=[r],e.type===v[v.Annual]&&n.curves.push({colors:[\"#8b6038\"],fields:[\"Close\"],style:\"Line\",lineWidth:2,visible:!0,varyColorPerBar:!1});const{mainAxis:s}=Kd(t);return Gd(i.style)&&(s.comparison=g[g.None]),t};const $d=\"..plots{.main === true}\";function Xd(t){return Ai(t,$d)[0]}function Kd(t){const e=Ai(t,\"..panes{\".concat($d,\"}\"))[0];return{mainPane:e,mainAxis:Ai(e,\"..axes{\".concat($d,\"}\"))[0]}}const Zd=\"Symbol\",Jd=\"Expression\",Qd=\"Forward\",tp=\"Seasonal\",ep=\"Annual\",ip=[Zd,Jd,Qd,tp,ep];var np=function(t,e){const i=Xd(t),n=t=>i.type===t,r=t=>K(e[t.toLowerCase()]),s=ip.find(t=>r(t)),o=s.toLowerCase();let a=e[o];const l=a===te.PLACEHOLDER_SYMBOL_NAME,c=r(Jd)||r(Qd)||r(tp),u=ip.some(t=>r(t)&&!n(t)),h=Yp().config.cachedAnnotationsCount||0,d=h>0,{mainAxis:p}=Kd(t);u&&(p.comparison=g[r(ep)?g.Value:g.None]);const f=(t,e)=>t.findIndex(t=>t.symbol===e);if(d){if(n(Zd)){const t=p.annotations||[],e=p.annCache||[],n=f(e,i.symbol);if(-1!==n&&e.splice(n,1),t.length>0){const n={symbol:i.symbol,annotations:t};e.length+1>h&&e.splice(0,e.length+1-h),e.push(n)}p.annCache=e}if(delete p.annotations,r(Zd)){const t=p.annCache||[],i=f(t,e.symbol);-1!==i&&(p.annotations=t[i].annotations)}}if(!l){const{error:t,clean:i}=kl(a),n=K(t);if(c){if(n)throw new Error('Cannot set \"'.concat(a,\"\\\" as a main plot because it's not a valid expression.\\n\").concat(t));a=i}else if(!n)throw new Error('Cannot set \"'.concat(a,\"\\\" as a main plot because it's an expression, unsupported for \").concat(e.plotType,\".\"))}const m=r(Jd)&&n(Zd)||r(Zd)&&n(Jd);let y=wi(t,$d,t=>(u&&(delete t.expression,delete t.symbol,delete t.showPrevious,delete t.forward,delete t.offsets,delete t.seasonal,delete t.annual,t.type=s,m||(t.curves=[{}]),(r(Qd)||r(tp))&&(t.offsets=[0])),t[o]=a,t));if(u)if(r(Qd))y.data.aggregation={unit:\"Month\"},y.display.period=\"P10Y\";else if(!r(tp)&&!r(ep)||y.data.aggregation.isEndOfDay){if(n(Qd)||n(tp)||n(ep)){y.data.aggregation=Yp().getDefaultAggregation(),y.data.maxDataPoints=te.DEFAULT_MAX_RECORDS;const t=Yp().getDefaultPeriod();K(t)&&(y.display.period=t)}}else y.data.aggregation={unit:\"Day\"},r(ep)&&(y.data.maxDataPoints=te.US_TRADING_DAYS_PER_YEAR),y.display.period=r(tp)?\"P9M\":\"P1Y10D\";const v=new Map([['..plots{.type === \"Study\"}',t=>{const e=vi(yi(t.study));return r(Qd)||r(tp)||r(ep)||r(Jd)&&e?te.NULL_OBJECT:t}],['..plots{.type === \"BalanceSheet\" || .type === \"IncomeStatement\"}',t=>r(Zd)?(t.symbol=a,t):te.NULL_OBJECT],[\"..plots{..events}\",t=>(r(Zd)||delete t.events,t)]]);for(const[t,e]of v)y=wi(y,t,e);return u&&!m&&(y=qd(y,{type:s,curves:[{}]})),y=en(y),y};function rp(t,e){if(!((i=t).annotations&&i.annotations.length>0))return;var i;let n=e.annotations||[];e.annotations=n.concat(t.annotations)}class sp{constructor(t){this.accessor=t,this.defaultTool=md(\"Default\"),this._activeTool=this.defaultTool,this.tooltipEnabled=!0,this.timeline=new fa(this),this.sentInitialLoadNotification=!1}getModel(){return this.model}get isEmpty(){return!K(this.model)}fromModel(t){K(this.model)&&this.allPlots.forEach(t=>t.shutdown()),this.sentInitialLoadNotification=!1,this.clearSelection(),this.model=t;let e=et(t);this.data=e.data,this.data.aggregation=Fi(e.data.aggregation),this.display=e.display,K(this.display.period)&&(this.display.period=ht(this.display.period)),this.panes=e.panes.map(t=>{const e=new Od;return e.presenter=this,e.fromModel(t),e},this),this.allPlots.forEach(t=>t.initialize()),this.timeline.invalidate(),this.reinitializeView()}closeView(){K(this.view)&&(this.view.shutdown(),this.view=null)}reinitializeView(){K(this.view)?this.view.reinitialize():(this.view=new jd,this.view.initialize(this)),Po.a.publish(an.CH_RECREATED,this.accessor.elementId)}getCacheableEntities(t){this.isEmpty||this.allPlots.map(e=>e.getCacheableEntities(t))}get activeTool(){return this._activeTool}set activeTool(t){K(this._activeTool.deactivated)&&this._activeTool.deactivated(this),this._activeTool=t,K(this._activeTool.activated)&&this._activeTool.activated(this),Po.a.publish(an.TL_CHANGED,this)}get mainPlot(){return this.allPlots.find(t=>t.main)}get mainAxis(){return this.mainPlot.axis}get mainPane(){return this.mainAxis.pane}get allAxes(){const t=[];return this.panes.forEach(e=>{e.axes.forEach(e=>{t.push(e)})}),t}get allAnnotations(){const t=[];return this.allAxes.forEach(e=>{e.annotations.forEach(e=>{t.push(e)})}),t}get allPlots(){const t=[];return this.allAxes.forEach(e=>{e.plots.forEach(e=>{t.push(e)})}),t}findAxis(t){return this.allAxes.find(e=>e.id===t)}findPlot(t){return this.allPlots.find(e=>e.id===t)}get allCurves(){const t=[];return this.allPlots.forEach(e=>{e.curves.forEach(e=>{t.push(e)})}),t}findCurve(t){return this.allCurves.find(e=>e.id===t)}fixupDensityForForwards(t){if(t.hasData){const e=t.container.size;e>0&&(this.display.density=e)}}onSeriesChanged(t,e){if(!this.view||!this.allPlots)return;const i=e.series,n=t=>t.timeSeries===i||t.eventsSeries===i,r=this.allPlots.find(n);if(!K(r))return;const s=K(r)&&r.main;let o=!1,a=!1;const l=K(e.index)?i.container.getTimeData()[e.index]:null,c=t===an.TS_EVENTSCHANGED,u=this.view.xAxis.xScale;if(t===an.TS_MANYCHANGED||c){if(s&&this.data.checkRange){if(K(this.display.xAxis.visibleRange))return void this.accessor.change({id:\"Period\",context:{range:this.display.xAxis.visibleRange}});delete this.data.checkRange}if(r.type===v.Forward&&this.fixupDensityForForwards(i),e.part===x.Tail){const t=G(this.timeline,l,Number,pa);this.view.xAxis.shouldScrollIntoView(t)&&u.shiftBars(e.count)}this.timeline.invalidate(),o=!0}else if(t===an.TS_DATAPOINTADDED){const t=this.timeline.mergeDateIntoTimeline(l);-1!=t&&this.view.xAxis.shouldScrollIntoView(t)?(u.shiftBars(1),o=!0):a=!0}else t===an.TS_DATAPOINTCHANGED&&(a=!0);if(!c&&n(this.mainPlot)&&i.hasData&&0===i.container.size&&Po.a.publish(an.CH_NODATAFORMAINSYMBOL,this.accessor),o&&this.view.recalculateLayout(),a){o&&Bp(\"Performance : redundant call to recompute price domains (layout recalculation took care of this)\",\"warn\");this.allAxes.filter(t=>t.plots.includes(r)).forEach(t=>{t.setDomain(),K(l)&&t.updateFullDomain(l)})}if(!this.sentInitialLoadNotification&&t===an.TS_MANYCHANGED){if(this.allPlots.every(t=>t.timeSeries&&t.timeSeries.hasData)){this.sentInitialLoadNotification=!0,Po.a.publish(an.CH_ALL_DATA_PROJECTED,this.accessor);const t=this.display.period===te.FIFTY_YEARS_MILLIS;this.mainPlot&&(this.mainPlot.isAnnual||t)&&(u.fitAllData=!0,u.adjustDomain())}}this.view.redraw()}onMetaChanged(t,e){t===an.MD_CHANGED&&this.view&&this.allPlots&&this.allPlots.find(t=>t.id===e.plot.id)&&(this.view.recalculateLayout(),this.view.redraw())}onStreamingUpdates(t){this.view&&this.allPlots.some(e=>t.includes(e.metaData.symbol)&&e.showPrevious)&&this.view.redraw()}getStreamingSubscription(){return Yp().getRecordSource().subject.pipe(Ao(t=>t.filter(t=>t.topic===an.RT_QUOTE).map(t=>t.data.symbol)),Qn(t=>t.length>0)).subscribe(this.onStreamingUpdates.bind(this))}initialize(t){if(!Gt(\"#\".concat(t)))throw new Error(\"There is no element \".concat(t,\" in the DOM\"));this.renderTo=t,this.seriesChangedToken=Po.a.subscribe(an.TS_ALL,this.onSeriesChanged.bind(this)),this.metaChangedToken=Po.a.subscribe(an.MD_ALL,this.onMetaChanged.bind(this)),this.streamingSubscription=this.getStreamingSubscription()}shutdown(){return Po.a.unsubscribe(this.seriesChangedToken),Po.a.unsubscribe(this.metaChangedToken),K(this.streamingSubscription)&&this.streamingSubscription.unsubscribe(),this.allPlots.forEach(t=>t.shutdown()),this.model=null,this.closeView(),Po.a.publish(an.CH_SHUTDOWN,this.accessor.elementId),!0}fireSelectionChanged(){Po.a.publish(an.CH_ANNSELECTIONCHANGED,this)}setSelection(t){this.selectedAnnotation=t,this.selectedAnnotation.isSelected=!0,this.selectedAnnotation.requestRedraw(),this.fireSelectionChanged()}clearSelection(){K(this.selectedAnnotation)&&(this.selectedAnnotation.isSelected=!1,this.selectedAnnotation.requestRedraw(),this.selectedAnnotation=void 0),this.fireSelectionChanged()}resetActiveTool(){this.activeTool=this.defaultTool}print(t={}){const e=$t(document.body,\"iframe\");e.src=\"\",e.style.display=\"none\",e.onload=()=>{const{title:i}=t,n=this.exportImage({title:i}),r=new Image;r.src=n.data,r.style.width=\"100%\";e.contentDocument.body.appendChild(r),Zt(r).then(()=>{const t=e.contentWindow;e.focus(),t.print(),e.remove()})}}setTitle(t,e=!1){this.view.title.update(t),this.view.redraw(e)}enableTooltip(t){this.tooltipEnabled=t;const e=this.display.tooltip.mode===te.TOOLTIP_CARDS;!t&&e&&this.hideCards()}get showTooltip(){return this.display.tooltip.visible&&this.tooltipEnabled}hideCards(){const t=this.display.tooltip;t.visible&&t.mode===te.TOOLTIP_CARDS&&(this.view.refreshLastBarTooltipValues(this.mainPlot),Xt(\"#\".concat(this.renderTo,\" .bcharts-card\")).forEach(t=>{t.style.display=\"none\"}))}handleAnnotationChange(t){if(\"List\"===t.id)return this.allAnnotations.map(t=>({id:t.name,uid:t.id,visible:t.visible}));const e=this.allAnnotations.find(e=>e.id===t.uid);if(void 0!==e){const i=e.axis,n=i[\"\".concat(t.id.toLowerCase(),\"Annotation\")];if(\"function\"==typeof n)return void n.call(i,e,t)}throw new Error(\"Unknown sub-action \".concat(t.id,\" for action \").concat(te.ANN_ACTION_ID))}getPlotInfoFromDomId(t){const e=t.attributes[\"data-plot-id\"].value,i=this.allPlots,n=i.findIndex(t=>t.id===e);return{type:v[i[n].type],index:n}}getSimplePlot(t,e){return this.accessor.change({id:\"Plot\",context:{id:te.ACTION_GET,type:t,index:e}})[0]}onCardClicked(t){const e=this.getPlotInfoFromDomId(t),i=this.getSimplePlot(e.type,e.index);Po.a.publish(an.CH_CARDPLOTCLICKED,{chart:this.accessor,plot:i})}deletePlotClicked(t){const e=this.getPlotInfoFromDomId(t),i=this.getSimplePlot(e.type,e.index);this.accessor.change({id:\"Plot\",context:{id:\"Delete\",type:e.type,index:e.index}}),Po.a.publish(an.CH_CARDPLOTREMOVED,{chart:this.accessor,plot:i})}onMovePaneClicked(t){const e=parseInt(t.attributes[\"data-pane\"].value),i=\"down\"===t.attributes[\"data-dir\"].value,n=e+(i?1:0),r=e-(i?0:1);setTimeout(()=>{this.accessor.change({id:\"MovePane\",context:{from:n,to:r}}),Po.a.publish(an.CH_PANESREORDERED,this.accessor)})}onAnnotationsUpdated(t,e=!1){const i=this.allAxes.indexOf(t),n=t.annotations.map(t=>t.toModel());let r=function(t,e){const i=\"..axes[\".concat(e.axisIndex,\"]\");return wi(t,i,t=>(t.annotations=e.annotations,t))}(this.model,{axisIndex:i,annotations:n});try{this.model=tn(r,te.CHART_SCHEMA)}catch(t){Bp(\"Cannot update annotation (corrupts definition), error is: \".concat(t.message),\"error\")}e&&this.view.draw(),Po.a.publish(an.CH_ANNOTATIONCHANGED,this.accessor)}onPaneHeightsUpdated(){const t=(t,e)=>t+e,e=this.panes.map(t=>t.getBounds().height).reduce(t,0),i=this.panes.map(t=>t.height).reduce(t,0),n=this.panes.map((t,n)=>({index:n,relativeHeight:Z(t.getBounds().height/e*i,4)}));this.model=function(t,{paneHeights:e}){let i=t;return e.forEach(e=>{var n;i=wi(t,(n=e.index,\"..panes[\".concat(n,\"]\")),t=>(t.height=e.relativeHeight,t))}),i}(this.model,{paneHeights:n}),Po.a.publish(an.CH_PANEHEIGHTSCHANGED,this.accessor)}exportData(){const t=this.allPlots;if(!t.every(t=>K(t.timeSeries)&&t.timeSeries.hasData))return\"No data to export\";const e=t=>{let e=[];return t.main&&(e.push(on.DateTime),this.data.aggregation.isMultiContract&&e.push(on.Symbol)),e.concat(...t.curves.map(t=>t.fields))},i=this.data.aggregation.isEndOfDay?te.FMT_ISO_DATE_ONLY:te.FMT_EXPORT_ALL_BUT_MILLIS,n={},r=this.timeline.firstSeriesIndex,s=this.timeline.lastSeriesIndex,o=(s,o)=>{const a=s-r,l=t=>{if(-2===a){const i=new Array(e(t).length).fill(\"\");return i[0]=(t=>'\"'.concat(v[t.type],\": \").concat(t.title,'\"'))(t),i.join(\",\")}if(-1===a)return e(t).map(t=>'\"'.concat(t.name,'\"'));{const r=t.timeSeries.container,s=r.getData(on.DateTime),a=n[t.id]||0,l=G(s,+o,Number,j,a),c=+o==+s[l];return c&&(n[t.id]=l),e(t).map(t=>{return c?(e=t,n=r.getData(t)[l],e===on.DateTime?$r(n,i):n):\"\";var e,n})}};return[].concat(...t.map(t=>l(t))).join(\",\")};let a=[];for(let t=r-2;t<=s;t++)a.push([o(t,this.timeline.at(t))]);return a.join(\"\\n\")}exportImage(t={}){const{width:e,height:i,mainCanvas:n}=this.view,{width:r,height:s,title:o}=t,a=K(o),l=K(r,s);let c=a?this.view.title.read():null;a&&this.setTitle(o,!l),l&&this.view.setSize(r,s,!0);const u=n.toDataURL();return a&&this.setTitle(c,!l),l&&this.view.setSize(e,i,!0),{width:r||e,height:s||i,data:u}}getDataStats(){const t=this.mainPlot.timeSeries.container;if(!K(t)||0===t.size)return null;const e=t.getTimeData();return{dataRange:{from:W(e).getTime(),to:V(e).getTime()},barCount:t.size}}}var op=function(t,e){if(0===e.plots.length)return t;let i=t;return e.plots.forEach(t=>{let e=cp(t.index);const n=up(i,e);K(n)&&n.type===t.type&&(i=wi(i,e,t=>(t.MARKED_FOR_DELETION=!0,t)))}),i=wi(i,\"..plots{.\".concat(\"MARKED_FOR_DELETION\",\" === true}\"),t=>te.NULL_OBJECT),en(i)};var ap=function(t,{main:e,type:i,index:n},r){const s=Ai(t,\"..panes\").map((t,e)=>{const i=1===Ai(t,\"..plots{.main === true}\").length;return Ai(t,\"..axes\").map((t,n)=>{const s=1===Ai(t,\"..plots{.main === true}\").length;return Ai(t,\"..plots\").map(t=>{const o=function(t,e,i,n){const r=v[t.type];let s={curves:et(t.curves),type:t.type};const o=(t,e)=>{K(t[e])?s[e]=t[e].map(t=>et(t)):s[e]=[]},a=(t,e)=>{!0===e.main&&(t.main=!0)};switch(r){case v.Symbol:s.title=t.symbol,a(s,t);break;case v.Study:{o(t,\"inputs\");const n=yi(t.study),r=s.inputs,a=0===r.length?\"\":\" (\".concat(r.map(t=>t.value).join(\", \"),\")\"),l=s.curves.map(t=>Number(t.shift)).filter(t=>t>0),c=0===l.length?\"\":\" [\".concat(l.join(\", \"),\"]\");s.title=\"\".concat(n.id).concat(a).concat(c),s.studyId=n.id,o(t,\"levels\"),o(t,\"bands\"),s.placement=e?i?\"overlay\":\"withMain\":\"standalone\";break}case v.BalanceSheet:case v.IncomeStatement:{const e=on[t.curves[0].fields[0]];s.title=\"\".concat(e.name,\" (\").concat(t.fundamental.substring(0,1),\")\"),s.fundamentalId=e.id,s.frequency=t.fundamental;break}case v.Expression:s.title=t.expression,a(s,t);break;case v.Forward:case v.Seasonal:s.title=r===v.Forward?t.forward:t.seasonal,K(n)&&(s.subtitles=n.allPlots.filter(t=>t.type===r).map(t=>t.title)),o(t,\"offsets\"),a(s,t);break;default:throw new Error(\"Unexpected plot type\")}return s}(t,i,s,r);return o.paneIndex=e,o.axisIndex=n,o})})}).flat(2).map((t,e)=>(t.index=e,t));if(e)return s.filter(t=>t.main);if(K(i)){const t=s.filter(t=>t.type===i);return K(n)?t.filter(t=>t.index===n):t}return s};function lp(t,e){!function(t){const e=v[t.type];return e===v.Forward||e===v.Seasonal}(t)?function(t,e){if(i=e,void 0!==i&&e.length===t.length)for(let i=0;i<t.length;++i){nt(t[i],e[i]);const n=e[i].shift;K(n)&&(t[i].shift=n)}var i}(t.curves,e.curves):K(e.curves)&&(t.curves=e.curves);const i=v[e.type];i===v.Study?(!function(t,e,i){const n=st(t),r=st(e);nt(n,r);const s=(o=r,Object.keys(o).map(t=>({name:t,value:o[t]})));var o;s.length>0&&(i.inputs=s)}(t.inputs,e.inputs,t),[\"bands\",\"levels\",\"detachedScale\"].forEach(i=>function(t,e,i){e[i]&&(t[i]=e[i])}(t,e,i))):i!==v.BalanceSheet&&i!==v.IncomeStatement||!e.frequency?i===v.Expression?K(e.expression)&&(t.expression=e.expression):i===v.Forward?(K(e.offsets)&&(t.offsets=e.offsets),K(e.forward)&&(t.forward=e.forward)):i===v.Seasonal&&(K(e.offsets)&&(t.offsets=e.offsets),K(e.seasonal)&&(t.seasonal=e.seasonal)):t.fundamental=e.frequency}const cp=t=>\"..plots[\".concat(t,\"]\");function up(t,e){const i=Ai(t,e);return 1!==i.length?null:i[0]}const hp=[\"withMain\",\"overlay\",\"standalone\",\"clone\"];function dp(t,e,i){let n=null;const{mainPane:r,mainAxis:s}=Kd(t);switch(e){case\"withMain\":n=bp(r,s);break;case\"overlay\":n=s;break;case\"standalone\":{n={plots:[]};const e={axes:[],height:t.display.chart.newPaneHeight};e.axes.push(n),t.panes.push(e);break}case\"clone\":if(\"number\"==typeof i){const e={main:!1,index:i,type:v[v.Study]},r=ap(t,e).find(t=>t.index===e.index);n=Ai(t,\"..panes[\".concat(r.paneIndex,\"]..axes[\").concat(r.axisIndex,\"]\"))[0]}}return n}const pp=[{fields:[on.Close.id],colors:[\"#888\"],style:\"Line\",lineWidth:2,varyColorPerBar:!1,visible:!0}];let fp=0;const mp=[\"#0d223a\",\"#8abc21\",\"#910000\",\"#2f7ed8\"],gp=\"Symbol\",yp=\"Expression\";function vp(t,e){let i={curves:[{colors:mp.slice(fp,fp+1),fields:t?[on.Last.id]:[on.Close.id],style:\"Line\",varyColorPerBar:!1,lineWidth:2}]};return delete e.leftScale,rt(i,e),K(e.curves)&&nt(i.curves,e.curves),fp+=1,i}const Tp='..plots{.type === \"Symbol\" && .main !== true}';function bp(t,e){let i=t.axes.find(t=>t!==e);return K(i)||(i={plots:[]},t.axes.push(i)),i}const Sp=()=>te.NULL_OBJECT;function Pp(t){return wi(t,\"..annotations\",Sp)}function Ap(t){return en(wi(t,'..plots{.type === \"Symbol\" && .main !== true}',Sp))}function wp(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,n)}return i}function Cp(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?wp(Object(i),!0).forEach((function(e){xp(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):wp(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}function xp(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}let Mp={Symbol:np,MainPlot:np,Aggregation:function(t,e){let i=Fi(t.data.aggregation).isTick,n=Fi(e).isTick,r=wi(t,\"\".concat($d,\".curves[0]\"),t=>{let e=[on.Open.id,on.High.id,on.Low.id,on.Close.id,on.Change.id].slice();if(!n&&i){const i=Yp().getDefaultMultiFieldCurve();if(null!==i)return i;t.fields=e,t.style!==c[c.Candlestick]&&t.style!==c[c.OHLC]&&t.style!==c[c.HLC]&&(t.style=c[c.Candlestick],t.colors=[\"#ff6961\",\"#77dd77\"],t.varyColorPerBar=!0),t.style===c[c.HLC]&&t.fields.splice(0,1)}else n&&!i&&(t.fields=[on.Last.id,on.Change.id],t.style=c[c.Line],t.colors=[\"#0055cc\"],t.varyColorPerBar=!1);return t});return r=wi(r,'..plots{.type === \"Study\" && .study === \"VOL\"}.curves{.fields === \"TradeSize\" || .fields === \"Volume\"}',t=>(t.fields=n?[on.TradeSize.id]:[on.Volume.id],t)),lt(r.data.aggregation,e),qi(r),Yi(r),function(t){const e=Yp().getDefaultDensity();K(e)&&(t.display.density=e)}(r),zi(r),r},Period:function(t,e,i){const n=K(e.period),r=K(e.range),s=K(e.density),o=t=>t?1:0;if(o(n)+o(r)+o(s)>1)throw new Error(\"Cannot set more than one of: period, range, density.\");if(n&&(t.display.period=e.period,Yi(t),$i(t)),r)if(K(t.display.period)&&!Xi(t.display.period)||(t.display.xAxis.visibleRange=e.range),qi(t),$i(t),K(i)){const n=function(t){const e=t.getDataStats();return null===e?null:e.dataRange}(i),r=Fi(t.data.aggregation),s=i.data.aggregation,o=(l=s,(a=r).unit!==l.unit||a.size!==l.size||a.spec!==l.spec||!K(n));let c=o;if(!o){const{from:t,to:i}=n,{from:r,to:s}=e.range;c=r<t||r>i||s<t||s>i}c&&(t.data.range=e.range),delete t.data.checkRange}else t.data.checkRange=!0;var a,l;return s&&(t.display.density=e.density,Yi(t),qi(t),i&&(i.hasUserCustomizedRange=!1)),(n||r||s)&&zi(t),t},Crosshair:function(t,e){let[i,n]=Q(e.crosshair),r=wi(t,\".display.xAxis.crosshair\",t=>(t.enabled=i,t));return wi(r,\".display.yAxis.crosshair\",t=>(t.enabled=n,t))},Tooltip:function(t,{visible:e,mode:i}){return wi(t,\".display.tooltip\",t=>(null!=e&&(t.visible=e),i&&(t.mode=i),t))},Events:function(t,e){return wi(t,$d,t=>{if(\"Symbol\"===t.type){if(!te.EVENTS.some(t=>!0===e[t]))return void 0!==t.events&&delete t.events,t;t.events=t.events||{},te.EVENTS.forEach(i=>{((t,e,i)=>{t[e]=t[e]||{},t[e].show=i})(t.events,i,e[i]||!1)})}return t})},Scale:function(t,e){let i=wi(t,\"..axes[0]\",t=>(y.hasOwnProperty(e.scale)&&(t.scale=e.scale),t));i=wi(i,\".display.xAxis\",t=>(K(e.marginBars)&&(t.marginBars=e.marginBars),t));return i=wi(i,\".display.yAxis\",t=>((K(e.minPadding)||K(e.maxPadding))&&Bp(\"The 'minPadding' and 'maxPadding' are deprecated (ignored)\",\"warn\"),K(e.preventLabelOverlap)&&(t.preventLabelOverlap=e.preventLabelOverlap),K(e.snapAnnotationsToPrices)&&(t.snapAnnotationsToPrices=e.snapAnnotationsToPrices),t)),i},Other:{Update:function(t,e){let i=t;if(K(e.comparisonMode)&&\"string\"==typeof e.comparisonMode&&g.hasOwnProperty(e.comparisonMode)&&(i=wi(t,\"..panes{\".concat($d,\"}.axes\"),t=>(t.comparison=e.comparisonMode,t)),e.comparisonMode!==g[g.None]&&(i=wi(i,\"..panes{\".concat($d,'}..plots{.type === \"Symbol\"}.curves{.style !== \"Line\"}'),t=>Yd({style:\"Line\"},\"Symbol\")))),K(e.gridLines)){const[t,n]=Q(e.gridLines);i=wi(i,\".display.xAxis.gridLines\",e=>(e.visible=t,e)),i=wi(i,\".display.yAxis.gridLines\",t=>(t.visible=n,t))}if(K(e.minorGridLines)){const[,t]=Q(e.minorGridLines);i=wi(i,\".display.yAxis.minorGridLines\",e=>(e.visible=t,e))}return K(e.newPaneHeight)&&\"number\"==typeof e.newPaneHeight&&(i=wi(i,\".display.chart{.newPaneHeight > 0}\",t=>(t.newPaneHeight=e.newPaneHeight,t))),K(e.showNavigator)&&\"boolean\"==typeof e.showNavigator&&(i=wi(t,\".display.scrollbar\",t=>(t.visible=e.showNavigator,t))),K(e.plotHover)&&\"boolean\"==typeof e.plotHover&&(i=wi(t,\".display.chart\",t=>(t.plotHover=e.plotHover,t))),K(e.showLastValue)&&\"string\"==typeof e.showLastValue&&(i=wi(t,\".display.yAxis\",t=>(t.showLastValue=e.showLastValue,t))),K(e.showMinMaxArc)&&\"boolean\"==typeof e.showMinMaxArc&&(i=wi(t,\".display.chart\",t=>(t.showMinMaxArc=e.showMinMaxArc,t))),K(e.showGoToLatest)&&\"boolean\"==typeof e.showGoToLatest&&(i=wi(t,\".display.chart\",t=>(t.showGoToLatest=e.showGoToLatest,t))),i},Get:function(t,e,i){const n=Ai(t,\"..panes{\".concat($d,\"}.axes.comparison\"))[0],r=t.display,s=(t,e)=>tt(t,!1,e,\"visible\"),o=t=>function(t,e){const i=t=>K(t)&&\"boolean\"==typeof t&&t,n=i(t),r=i(e);return n&&r?\"both\":n?\"vertical\":r?\"horizontal\":\"none\"}(s(r.xAxis,t),s(r.yAxis,t));return{comparison:n,gridLines:o(\"gridLines\"),minorGridLines:o(\"minorGridLines\"),newPaneHeight:r.chart.newPaneHeight,showLastValue:r.yAxis.showLastValue}}},Plot:{Add:function(t,e){switch(v[e.type]){case v.Study:return function(t,e){const i=yi(e.studyId);if(void 0===i)throw new Error(\"Unknown study with id \".concat(e.studyId));const n=Xd(t),r=vi(i);if(n.type===v[v.Expression]&&r)throw new Error('Cannot add study \"'.concat(i.meta.title,'\" because it cannot be based on an expression (current main plot); study needs more than \"OHLC\" fields to be calculated.'));const s=e.placement||(i.meta.overlay?\"overlay\":\"standalone\");let o={type:v[v.Study],study:e.studyId};void 0!==e.curves&&(o.curves=i.defaults.curves),lp(o,e);const a=dp(t,s,e.cloneIndex);return K(a)&&a.plots.push(o),t}(t,e);case v.IncomeStatement:case v.BalanceSheet:return function(t,e){const i=Xd(t);if(i.type!==v[v.Symbol])throw new Error(\"Cannot add fundamental to the chart whose main plot is not a Symbol plot.\");let n=i.symbol,r={curves:[{fields:[e.fundamentalId],lineWidth:2,style:\"Line\",varyColorPerBar:!1,visible:!0,colors:[\"#888\"]}],fundamental:u[u.Quarter],symbol:n,type:f[on[e.fundamentalId].category]};return lp(r,e),t.panes.push({axes:[{plots:[r]}]}),t}(t,e);case v.Expression:return function(t,e){const i=Xd(t);let n={curves:v[i.type]===v.Symbol?et(i.curves):pp,expression:\"\",type:v[v.Expression]};return lp(n,e),t.panes.push({axes:[{plots:[n]}]}),t}(t,e);default:throw new Error(\"Only fundamentals, studies and expressions can be added at the moment\")}},Get:ap,Delete:op,Update:function(t,e,i){if(K(e.placement)&&!hp.includes(e.placement))throw new Error(\"Unknown placement: \".concat(e.placement));const n=e.main?$d:cp(e.index),r=up(t,n);if(!K(r)||K(e.type)&&r.type!==e.type)return t;if(r.main&&function(t){const e=v[t.type];return e===v.Symbol||e===v.Expression}(r))return e.type||(e.type=r.type),qd(t,e);{let r=wi(t,n,t=>(lp(t,e),delete t.detachedScale,t));const s=ap(r,e,i).find(t=>t.index===e.index);if(!K(s))return t;if(!(e.type===v[v.Study]&&K(e.placement)&&e.placement!==s.placement))return r;const o=up(r,n);r=op(r,{id:\"Delete\",plots:[{index:e.index,type:e.type}]});const a=dp(r,e.placement);return null!==a&&a.plots.push(o),r}}},Compare:function(t,e){const i=function(t){return K(t.symbols)?(Bp(\"Use of 'symbols' for Compare API is deprecated. Please see docs for the latest version which supports more plot types\",\"warn\"),t.symbols.map(t=>(t.type=gp,t))):t.plots}(e),{yes:n,no:r}=k(i,t=>t.leftScale),{mainPane:s,mainAxis:o}=Kd(t),a=bp(s,o),l=t=>![gp,yp].includes(t.type);a.plots=a.plots.filter(l);const c=o.plots.filter(t=>t.main||l(t)),u=\"Tick\"===t.data.aggregation.unit;fp=0;const h=D(vp,u);return o.plots=c.concat(r.map(h)),n.length>0&&(a.plots.push(...n.map(h)),a.comparison=o.comparison),en(t)},Annotation:{Get:function(t,e,i){const n=Ai(t,\"..panes\").map((t,e)=>Ai(t,\"..axes\").map((t,i)=>Ai(t,\"..annotations\").map(t=>Cp(Cp({},t),{},{paneIndex:e,axisIndex:i})))).flat(2).map((t,e)=>Cp(Cp({},t),{},{index:e}));return K(e.index)&&Number.isFinite(e.index)?e.index<n.length?[n[e.index]]:te.EMPTY_ARRAY:n}},MovePane:function(t,e){let i=t.panes;return i.splice(e.to,0,i.splice(e.from,1)[0]),t},Template:function(t,e){let i=et(t);if(e.strip.main){const t=Xd(i),e=t.type.toLowerCase();t[e]=te.PLACEHOLDER_SYMBOL_NAME}return e.strip.annotations&&(i=Pp(i)),e.strip.compare&&(i=Ap(i)),i=wi(i,\".data\",t=>(t.range&&(delete t.range,t.checkRange=!0),t)),i},Outline:function(t,e,i){const n=ap(t,{main:!0},i)[0],r=n.title===te.PLACEHOLDER_SYMBOL_NAME,s=\"Symbol\"===n.type,o=\"Expression\"===n.type,{symbols:a}=o?kl(n.title):{symbols:r?[]:[n.title]};return{isTemplate:r,isDefinition:!r,main:{isSymbol:s,isExpression:o,symbols:a,title:r?null:n.title},compare:Ai(t,Tp).map(t=>t.symbol),annotations:Ai(t,\"..annotations\").map(t=>t.id),studies:ap(t,{type:\"Study\"}).map(t=>t.title)}},Theme:function(t,e){let i=t;const{backgroundColor:n,axis:{gridLinesColor:r,textColor:s,crosshairColor:o,gridLinesStyle:a}}=e;if(n&&(i=wi(t,\".display.chart\",t=>(t.backgroundColor=n,t))),r){const t=t=>(t.color=r,t);i=wi(i,\".display.xAxis.gridLines\",t),i=wi(i,\".display.yAxis.gridLines\",t)}if(a){const t=t=>(t.dashStyle=a,t);i=wi(i,\".display.xAxis.gridLines\",t),i=wi(i,\".display.yAxis.gridLines\",t)}if(s){const t=t=>(t.textColor=s,t);i=wi(i,\".display.xAxis\",t),i=wi(i,\".display.yAxis\",t)}if(o){const t=t=>(t.color=o,t);i=wi(i,\".display.xAxis.crosshair\",t),i=wi(i,\".display.yAxis.crosshair\",t)}return i}};function Ep(t){return\"function\"==typeof t}function Op(t,e,i){return function(t,e){\"Symbol\"===t&&Bp(\"This API ('Symbol') has been deprecated and will be removed in the future version of the API. Please use 'MainPlot' instead (functionally equivalent)\",\"warn\");let i=Mp[t];if(!Ep(i)){let t=i[e];if(!Ep(t)&&(t=i[te.DEFAULT_ACCESSOR_SUBACTION],!Ep(t)))throw new Error(\"Invalid accesor id and/or sub id\");return t}return i}(t.id,t.context.id)(e,t.context,i)}function Dp(t){return{id:\"MainPlot\",context:t}}class Lp{constructor(t=!1){this.headless=t,this.presenter=t?null:new sp(this)}get elementId(){return this.headless?null:this.presenter.renderTo}initialize(t,e){if(this.headless)console.error(\"You cannot initialize a headless chart.\");else if(this.presenter.initialize(t),e){const t=\"string\"==typeof e;t&&Bp(\"Initializing the chart with symbol name is deprecated. Please use object form instead (see docs for details). This API will be removed in the future.\",\"warn\"),e.template&&this.load(e.template),delete e.template;const i=t?{symbol:e}:e;this.change(Dp(i))}}shutdown(){if(!this.headless){const t=this.presenter.shutdown();return this.presenter=null,t}return!1}annotate(t,e=null,i=null){if(!this.headless)if(K(t)){const n=md(t,!1,e,i,this.presenter);n.isDrawingAnnotation&&this.presenter.view.setCursor(S.Crosshair),this.presenter.activeTool=n}else this.presenter.resetActiveTool()}getDefaultTemplate(){return et(Yp().template)}get model(){return(this.headless?this._model:this.presenter.getModel())||this.getDefaultTemplate()}asTemplate(t={main:!0,annotations:!1,compare:!1}){return this.change({id:te.ACTION_TEMPLATE,context:{strip:t}})}change(...t){Po.a.publish(an.CH_API_ACTIONS_RECEIVED,{chart:this,actions:t});const e=Yp().config.validateInput,i=t.map(t=>e?tn(t,te.ACCESSOR_SCHEMA):t);if(1===i.length){const t=i[0];if(t.id===te.ACTION_TEMPLATE||t.context.id===te.ACTION_GET)return Op(t,this.model,this.presenter);if(!this.headless&&t.id===te.ANN_ACTION_ID)return this.presenter.handleAnnotationChange(t.context)}const{yes:n,no:r}=k(i,t=>t.id===te.ACTION_PLOT&&K(t.context)&&t.context.id===te.ACTION_DELETE);let s=this.model;const o=r;n.length>0&&o.push({id:te.ACTION_PLOT,context:{id:te.ACTION_DELETE,plots:n.map(t=>t.context)}}),o.forEach(t=>{if(s=Op(t,s,this.presenter),!K(s))throw new Error(\"Forgot to return model from accessor\")}),this.fromModel(s)}fromModel(t){let e=tn(t,te.CHART_SCHEMA);this.headless?this._model=e:this.presenter.fromModel(e)}load(t,e={keepOldAnnotations:!1,keepNewAnnotations:!0,keepOldCompare:!1,keepNewCompare:!0,keepOldAggregation:!1,keepNewBarWidth:!1}){let i=JSON.parse(t),n=this.model;if(e.keepNewAnnotations||(i=Pp(i)),e.keepOldAnnotations&&(i=function(t,e){const{mainAxis:i}=Kd(t),{mainAxis:n}=Kd(e);rp(i,n);const r=t=>Ai(t,'..plots{.type===\"Study\"}.study')[0],s=Ai(t,'..axes{..plots{.type===\"Study\"}}').filter(t=>t!==i),o=Ai(e,'..axes{..plots{.type===\"Study\"}}').filter(t=>t!==n);return s.forEach(t=>{const e=r(t),i=o.find(t=>e===r(t));K(i)&&rp(t,i)}),e}(n,i)),e.keepNewCompare||(i=Ap(i)),e.keepOldCompare&&(i=function(t,e){const i=Ai(t,Tp),n=Ai(e,Tp),r=Math.max(0,4-n.length);if(0===r)return e;const s=i.filter(t=>!n.find(e=>t.symbol===e.symbol)).slice(0,r);if(0===s.length)return e;const{mainPane:o,mainAxis:a}=Kd(e),{mainAxis:l}=Kd(t);return s.forEach(t=>{if(l.plots.includes(t))a.plots.push(t);else{bp(o,a).plots.push(t)}}),e}(n,i)),e.keepOldAggregation){const t={id:te.ACTION_AGGREGATION,context:n.data.aggregation},r=i.display.density;i=Op(t,i,this.presenter),e.keepNewBarWidth&&K(r)&&(i.display.density=r)}this.fromModel(i)}save(){return JSON.stringify(this.model)}reset(){const t=this.getDefaultTemplate();if(this.headless)this._model=t;else if(this.presenter.getModel()){const e=this.presenter.mainPlot;let i=null;if(e.isSymbol?i={symbol:e.symbol}:e.isExpression?i={expression:e.expression}:e.isForward?i={forward:e.forward}:e.isSeasonal&&(i={seasonal:e.seasonal}),K(i)){const e=Op(Dp(i),t,this.presenter);this.presenter.fromModel(e)}}}print(t={}){this.headless||this.presenter.print(t)}getSVGForExport(){Bp(\"Obsolete: please use 'exportImage' method instead.\",\"warn\")}setTitle(t){this.headless||this.presenter.setTitle(t)}getPaneBounds(){if(!this.headless)return this.presenter.panes.map(t=>t.getBounds())}exportData(){return this.headless?null:this.presenter.exportData()}exportImage(t={}){return this.headless?null:this.presenter.exportImage(t)}getDataStats(){return this.presenter.getDataStats()}}function _p(t){return t&&\"function\"==typeof t.schedule}var Ip=function(){function t(t,e,i,n){this.bufferTimeSpan=t,this.bufferCreationInterval=e,this.maxBufferSize=i,this.scheduler=n}return t.prototype.call=function(t,e){return e.subscribe(new Rp(t,this.bufferTimeSpan,this.bufferCreationInterval,this.maxBufferSize,this.scheduler))},t}(),Np=function(){return function(){this.buffer=[]}}(),Rp=function(t){function e(e,i,n,r,s){var o=t.call(this,e)||this;o.bufferTimeSpan=i,o.bufferCreationInterval=n,o.maxBufferSize=r,o.scheduler=s,o.contexts=[];var a=o.openContext();if(o.timespanOnly=null==n||n<0,o.timespanOnly){var l={subscriber:o,context:a,bufferTimeSpan:i};o.add(a.closeAction=s.schedule(Hp,i,l))}else{var c={subscriber:o,context:a},u={bufferTimeSpan:i,bufferCreationInterval:n,subscriber:o,scheduler:s};o.add(a.closeAction=s.schedule(Fp,i,c)),o.add(s.schedule(kp,n,u))}return o}return yn(e,t),e.prototype._next=function(t){for(var e,i=this.contexts,n=i.length,r=0;r<n;r++){var s=i[r],o=s.buffer;o.push(t),o.length==this.maxBufferSize&&(e=s)}e&&this.onBufferFull(e)},e.prototype._error=function(e){this.contexts.length=0,t.prototype._error.call(this,e)},e.prototype._complete=function(){for(var e=this.contexts,i=this.destination;e.length>0;){var n=e.shift();i.next(n.buffer)}t.prototype._complete.call(this)},e.prototype._unsubscribe=function(){this.contexts=null},e.prototype.onBufferFull=function(t){this.closeContext(t);var e=t.closeAction;if(e.unsubscribe(),this.remove(e),!this.closed&&this.timespanOnly){t=this.openContext();var i=this.bufferTimeSpan,n={subscriber:this,context:t,bufferTimeSpan:i};this.add(t.closeAction=this.scheduler.schedule(Hp,i,n))}},e.prototype.openContext=function(){var t=new Np;return this.contexts.push(t),t},e.prototype.closeContext=function(t){this.destination.next(t.buffer);var e=this.contexts;(e?e.indexOf(t):-1)>=0&&e.splice(e.indexOf(t),1)},e}(On);function Hp(t){var e=t.subscriber,i=t.context;i&&e.closeContext(i),e.closed||(t.context=e.openContext(),t.context.closeAction=this.schedule(t,t.bufferTimeSpan))}function kp(t){var e=t.bufferCreationInterval,i=t.bufferTimeSpan,n=t.subscriber,r=t.scheduler,s=n.openContext();n.closed||(n.add(s.closeAction=r.schedule(Fp,i,{subscriber:n,context:s})),this.schedule(t,e))}function Fp(t){var e=t.subscriber,i=t.context;e.closeContext(i)}var Up=i(174);function Bp(t,e=\"info\"){const i=window.console;i[void 0!==i[e]?e:\"log\"](t)}const Vp={validateInput:!1,throttleMillis:0,isAlt64:!0,defaultTemplate:\"/\".concat(te.CHART_DEFINITION),cachedAnnotationsCount:0,showResizeHandles:!1,scrollBehavior:\"wheel+shift\",bypassSmoothing:!1,showGoToLatest:void 0,tooltipMovement:\"Auto\",tooltipHeaders:void 0,touchCrosshairTimeoutMillis:void 0,mode:C[C.Unspecified],hostingModel:\"Page\",overrides:void 0,logo:void 0,noDataText:void 0,baseUrl:{instruments:\"/proxies/instruments\",futures:\"/proxies/futures\",timeseries:\"/proxies/timeseries\",timeseriesNew:\"/proxies/new-timeseries\",ondemand:\"/proxies/ondemand\"},async fetch(t,e){const i=this.baseUrl[t],n=await fetch(\"\".concat(i).concat(e));return await n.text()}};async function Wp(t,e){const i=Yp().config;return await i.fetch.call(i,t,e)}let jp=!1,Gp=null;function zp(t,e={}){if(jp)throw new Error(\"You should only call initFeed once during page's lifetime\");jp=!0;const i=Object.assign(Vp);return nt(i,e),Gp=new t(i),Gp.version=function(){const t=Up,e=t.prerelease?\"-\".concat(t.prerelease.identifier,\".\").concat(t.prerelease.ordinal):\"\";return\"\".concat(t.major,\".\").concat(t.minor,\".\").concat(t.patch).concat(e)}(),Bp(\"Barchart HTML5 Streaming Chart version \".concat(Gp.version,\" initialized.\"),\"info\"),Gp.cachesData&&(Gp.subject.subscribe(Gp.onPerformInternalGc.bind(Gp)),Po.a.subscribe(an.CH_ALL,Gp.onChartChanged.bind(Gp))),Gp}function Yp(){return Gp}function qp(){return new Lp(!0)}function $p(t){const e=qp();return e.load(t),e.change({id:\"Outline\",context:{id:\"Get\"}})}class Xp{constructor(t){this.config=t,this.timeSeriesSource=this.metaDataSource=this.recordSource=null,this.charts=new Map,this.pendingRedraw=new Set,this.ongoingAnimationCallbackId=null,this.drawCharts=this.drawCharts.bind(this),this.template=null,this.cachesData=!1}get subject(){return K(this._subject)||(this._subject=(new Gn).pipe(function(t){var e=arguments.length,i=Fn;_p(arguments[arguments.length-1])&&(i=arguments[arguments.length-1],e--);var n=null;e>=2&&(n=arguments[1]);var r=Number.POSITIVE_INFINITY;return e>=3&&(r=arguments[2]),function(e){return e.lift(new Ip(t,n,r,i))}}(te.INTERNAL_GC_MILLIS),Qn(t=>t.length>0))),this._subject}getTimeSeriesDataSource(){return this.timeSeriesSource}getMetaDataSource(){return this.metaDataSource}getRecordSource(){return this.recordSource}async ready(){return Jt.call(this,async()=>{let t=this.config.defaultTemplate;if(\"string\"==typeof t){const e=await fetch(this.config.defaultTemplate);t=await e.json()}return this.template=tn(t,te.CHART_SCHEMA),K(this.config.logo)&&await async function(t){const e=(new DOMParser).parseFromString(t,\"image/svg+xml\").querySelector(\"svg\").getAttribute(\"viewBox\");if(K(e)){const i=e.split(\" \").map(Number);if(4===i.length&&i.every(Number.isFinite)){const[,,e,n]=i,r=\"data:image/svg+xml;utf8,\".concat(t),s=$t(document.body,\"img\");Yt(s,{src:r}),zt(s,{display:\"none\"}),await Zt(s),Lh={img:s,width:e,height:n,rect:new ke(0,0,0,0)}}}}(this.config.logo),!0})}getHeadlessChart(){return qp()}checkChart(t,e){if(e!==this.charts.has(t))throw new Error(\"There is \".concat(e?\"no\":\"already a\",\" chart inside the element \").concat(t))}addChart(t,e=null){this.checkChart(t,!1);const i=new Lp;return this.charts.set(t,i),i.initialize(t,e),i}removeChart(t){this.checkChart(t,!0);this.charts.get(t).shutdown(),this.charts.delete(t)}removeAllCharts(){for(const t of this.charts.keys())this.removeChart(t)}getChart(t){return this.charts.has(t)?this.charts.get(t):null}redraw(t){this.checkChart(t,!0),K(this.ongoingAnimationCallbackId)||(this.ongoingAnimationCallbackId=requestAnimationFrame(this.drawCharts)),this.pendingRedraw.add(t)}drawCharts(){this.ongoingAnimationCallbackId=null,this.pendingRedraw.forEach(t=>{if(!this.charts.has(t))return;const e=this.charts.get(t).presenter.view;e.isHostElementVisible&&e.draw()}),this.pendingRedraw.clear()}get emptyEntities(){return{metaData:new Set,records:new Set,timeSeries:new Set}}getCacheableEntities(){const t=this.emptyEntities;for(const e of this.charts.values())e.presenter.getCacheableEntities(t);return t.timeSeries.forEach(e=>{K(e)&&(K(e.record)?t.records.add(e.record):K(e.records)&&Object.values(e.records).forEach(e=>t.records.add(e)))}),t}clearCaches(){this.evictUnused(this.emptyEntities)}refreshCaches(){this.getTimeSeriesDataSource().refresh()}evictUnused(t){this.getMetaDataSource().evictUnused(t.metaData),this.getRecordSource().evictUnused(t.records),this.getTimeSeriesDataSource().evictUnused(t.timeSeries)}onPerformInternalGc(t){const e=this.getCacheableEntities();this.evictUnused(e)}onChartChanged(t,e){t!==an.CH_RECREATED&&t!==an.CH_SHUTDOWN||this.subject.next()}getDefaultMultiFieldCurve(){if(!this.knowDefaultCurve){const t=Xd(this.template);1===t.curves.length&&Gd(t.curves[0].style)?this.defaultOhlcCurve=et(t.curves[0]):this.defaultOhlcCurve=null,this.knowDefaultCurve=!0}return this.defaultOhlcCurve}getDefaultAggregation(){return this.knowDefaultAggregation||(this.defaultAggregation=et(this.template.data.aggregation),this.knowDefaultAggregation=!0),this.defaultAggregation}getDefaultPeriod(){return this.knowDefaultPeriod||(this.defaultPeriod=this.template.display.period||null,this.knowDefaultPeriod=!0),this.defaultPeriod}getDefaultDensity(){return this.knowDefaultDensity||(this.defaultDensity=this.template.display.density||null,this.knowDefaultDensity=!0),this.defaultDensity}}class Kp extends Xp{constructor(t){super(t),this.timeSeriesSource=new No(!1),this.metaDataSource=new ye,this.recordSource=new Zr}}class Zp extends Xp{constructor(t){super(t),this.cachesData=!0,this.timeSeriesSource=new No(!0),this.metaDataSource=new ve,this.recordSource=new Jr,this.onEvents=this.onEvents.bind(this),this.onTimestamp=this.onTimestamp.bind(this),this.resetStreamingState()}resetStreamingState(){this.lastStreamingTimestamp=null,this._isActivelyStreaming=null,this.needToResubscribe=!1}get connection(){return this._connection}set connection(t){this._connection=t,this.initializeStreaming()}addChart(t,e=null){return this.needToResubscribe&&this.initializeStreaming(),super.addChart(t,e)}set isActivelyStreaming(t){K(this._isActivelyStreaming)&&!this._isActivelyStreaming&&t&&this.refreshCaches(),this._isActivelyStreaming=t}get isActivelyStreaming(){return this._isActivelyStreaming}initializeStreaming(){this.resetStreamingState(),this.connection.on(\"events\",this.onEvents),this.connection.on(\"timestamp\",this.onTimestamp)}onTimestamp(t){this.isActivelyStreaming&&(this.lastStreamingTimestamp=t)}onEvents({event:t}){t===te.BC_EVENT_DISCONNECTED||t===te.BC_EVENT_FEED_PAUSED?this.isActivelyStreaming=!1:t===te.BC_EVENT_LOGGED_IN||t===te.BC_EVENT_FEED_RESUMED?this.isActivelyStreaming=!0:t===te.BC_EVENT_DISCONNECTING&&(this.clearCaches(),this.needToResubscribe=!0)}}function Jp(t){const e=t.split(\".\");if(!e||4!==e.length)return!1;const i=e.map(Number);if(!i.every(t=>Number.isFinite(t)&&t>=0&&t<=255))return!1;const[n,r]=i;return 10===n||172===n&&r>=16&&r<=31||192===n&&168===r}function Qp(){const t=window.location.hostname;return[\"localhost\",\"127.0.0.1\"].includes(t)||Jp(t)}function tf(){let t=document.domain;const e=t.split(\".\"),i=\"__tld\"+(new Date).getTime();let n=0;for(;n<e.length-1&&-1===document.cookie.indexOf(\"\".concat(i,\"=\").concat(i));)t=e.slice(-1-++n).join(\".\"),document.cookie=\"\".concat(i,\"=\").concat(i,\";domain=\").concat(t,\";\");return document.cookie=\"\".concat(i,\"=;expires=Thu, 01 Jan 1970 00:00:01 GMT;domain=\").concat(t,\";\"),t}function ef(t,e){var i;i=e,Object.keys(i).forEach(t=>!K(i[t])&&delete i[t]);const n=new URLSearchParams(e);return\"\".concat(t,\"/?\").concat(n.toString())}function nf(t,e=null){return ef(atob(\"aHR0cHM6Ly9iYXJjaGFydHdpZGdldHMud2Vic29sLmJhcmNoYXJ0LmNvbQ==\"),{module:atob(\"YXV0aGVudGljYXRlQ2hhcnRSZWZlcmVy\"),secret:e,referer:t})}},3:function(t,e,i){\"use strict\";t.exports=i(179)},6:function(t,e,i){const n=i(2);t.exports=(()=>{\"use strict\";function t(t,i,r,s,o){r===String?n.string(t)||e(i,\"string\",o):r===Number?n.number(t)||e(i,\"number\",o):r===Function?n.fn(t)||e(i,\"function\",o):r===Boolean?n.boolean(t)||e(i,\"boolean\",o):r===Date?n.date(t)||e(i,\"date\",o):r===Array?n.array(t)||e(i,\"array\",o):t instanceof(r||Object)||e(i,s,o)}function e(t,e,i){let n;throw n=\"number\"==typeof i?`The argument [ ${t||\"unspecified\"} ], at index [ ${i.toString()} ] must be a [ ${e||\"unknown\"} ]`:`The argument [ ${t||\"unspecified\"} ] must be a [ ${e||\"Object\"} ]`,new Error(n)}function i(t,e){throw new Error(`The argument [ ${t||\"unspecified\"} ] failed a validation check [ ${e||\"No description available\"} ]`)}return{argumentIsRequired(e,i,n,r){t(e,i,n,r)},argumentIsOptional(e,r,s,o,a,l){null!=e&&(t(e,r,s,o),n.fn(a)&&!a(e)&&i(r,l))},argumentIsArray(e,i,n,r){if(this.argumentIsRequired(e,i,Array),n){let s;s=\"function\"==typeof n&&n!==Function?(t,e)=>void 0!==n.prototype&&t instanceof n||n(t,`${i}[${e}]`):(e,s)=>t(e,i,n,r,s),e.forEach((t,e)=>{s(t,e)})}},argumentIsValid(t,e,n,r){n(t)||i(e,r)},areEqual(t,e,i,n){if(t!==e)throw new Error(`The objects must be equal [${i||t.toString()}] and [${n||e.toString()}]`)},areNotEqual(t,e,i,n){if(t===e)throw new Error(`The objects cannot be equal [${i||t.toString()}] and [${n||e.toString()}]`)}}})()},7:function(t,e,i){const n=i(2);t.exports=(()=>{\"use strict\";const t={A:\"F\",B:\"G\",C:\"H\",D:\"J\",E:\"K\",I:\"M\",L:\"N\",O:\"Q\",P:\"U\",R:\"V\",S:\"X\",T:\"Z\"},e={F:1,G:2,H:3,J:4,K:5,M:6,N:7,Q:8,U:9,V:10,X:11,Z:12},i={bats:/^(.*)\\.BZ$/i,percent:/(\\.RT)$/},r={forex:/^\\^([A-Z]{3})([A-Z]{3})$/i,futures:{}};r.futures.spread=/^_S_/i,r.futures.concrete=/^([A-Z][A-Z0-9\\$\\-!\\.]{0,2})([A-Z]{1})([0-9]{4}|[0-9]{1,2})$/i,r.futures.alias=/^([A-Z][A-Z0-9\\$\\-!\\.]{0,2})(\\*{1})([0-9]{1,2})$/i,r.futures.options={},r.futures.options.short=/^([A-Z][A-Z0-9\\$\\-!\\.]?)([A-Z])([0-9]{1,4})([A-Z])$/i,r.futures.options.long=/^([A-Z][A-Z0-9\\$\\-!\\.]{0,2})([A-Z])([0-9]{1,4})\\|(\\-?[0-9]{1,5})(C|P)$/i,r.futures.options.historical=/^([A-Z][A-Z0-9\\$\\-!\\.]{0,2})([A-Z])([0-9]{2})([0-9]{1,5})(C|P)$/i,r.equities={},r.equities.options=/^([A-Z\\$][A-Z\\-]{0,})([0-9]?)(\\.[A-Z]{2})?\\|([[0-9]{4})([[0-9]{2})([[0-9]{2})\\|([0-9]+\\.[0-9]+)[P|W]?(C|P)/i,r.indicies={},r.indicies.external=/^\\$(.*)$/i,r.indicies.sector=/^\\-(.*)$/i,r.indicies.cmdty=/^(.*)\\.CM$/i;const s=[];s.push(t=>{let e=null;return r.futures.spread.test(t)&&(e={},e.symbol=t,e.type=\"future_spread\"),e}),s.push(t=>{let e=null;const i=t.match(r.futures.concrete);return null!==i&&(e={},e.symbol=t,e.type=\"future\",e.dynamic=!1,e.root=i[1],e.month=i[2],e.year=c(i[3])),e}),s.push(t=>{let e=null;const i=t.match(r.futures.alias);return null!==i&&(e={},e.symbol=t,e.type=\"future\",e.dynamic=!0,e.root=i[1],e.dynamicCode=i[3]),e}),s.push(t=>{let e=null;return r.forex.test(t)&&(e={},e.symbol=t,e.type=\"forex\"),e}),s.push(t=>{let e=null;const i=t.match(r.equities.options);if(null!==i){const n=void 0!==i[3]?i[3]:\"\";e={},e.symbol=t,e.type=\"equity_option\",e.option_type=\"C\"===i[8]?\"call\":\"put\",e.strike=parseFloat(i[7]),e.root=`${i[1]}${n}`,e.month=parseInt(i[5]),e.day=parseInt(i[6]),e.year=parseInt(i[4]),e.adjusted=\"\"!==i[2]}return e}),s.push(t=>{let e=null;return r.indicies.external.test(t)&&(e={},e.symbol=t,e.type=\"index\"),e}),s.push(t=>{let e=null;return r.indicies.sector.test(t)&&(e={},e.symbol=t,e.type=\"sector\"),e}),s.push(t=>{let e=null;const i=t.match(r.futures.options.short);if(null!==i){e={};const n=i[4].charCodeAt(0),r=80,s=67;let o,l;n<r?(o=\"call\",l=n-s):(o=\"put\",l=n-r),e.symbol=t,e.type=\"future_option\",e.option_type=o,e.strike=parseInt(i[3]),e.root=i[1],e.month=i[2],e.year=a()+l}return e}),s.push(e=>{let i=null;const n=e.match(r.futures.options.long)||e.match(r.futures.options.historical);var s;return null!==n&&(i={},i.symbol=e,i.type=\"future_option\",i.option_type=\"C\"===n[5]?\"call\":\"put\",i.strike=parseInt(n[4]),i.root=n[1],i.month=(s=n[2],t[s]||s),i.year=c(n[3])),i});const o=[];function a(){return(new Date).getFullYear()}function l(t,e){const i=t.toString();return i.substring(i.length-e,i.length)}function c(t){const e=a();let i=parseInt(t);if(i<10){const t=i<e%10?1:0;i=10*Math.floor(e/10)+i+10*t}else if(i<100&&(i=100*Math.floor(e/100)+i,i<e)){const t=i+100;e-i>t-e&&(i=t)}return i}function u(t){return\"call\"===t?\"C\":\"put\"===t?\"P\":null}o.push(t=>{let e=null;return h.getIsFuture(t)&&h.getIsConcrete(t)&&(e=t.replace(/(.{1,3})([A-Z]{1})([0-9]{3}|[0-9]{1})?([0-9]{1})$/i,\"$1$2$4\")||null),e}),o.push(t=>{let e=null;if(h.getIsFutureOption(t)){const i=h.parseInstrumentType(t),n=u(i.option_type);if(i.root.length<3){const t=n.charCodeAt(0);e=`${i.root}${i.month}${i.strike}${String.fromCharCode(t+i.year-a())}`}else e=`${i.root}${i.month}${l(i.year,1)}|${i.strike}${n}`}return e}),o.push(t=>t);class h{constructor(){}static parseInstrumentType(t){if(!n.string(t))return null;let e=null;for(let i=0;i<s.length&&null===e;i++){e=(0,s[i])(t)}return e}static getProducerSymbol(t){if(!n.string(t))return null;let e=null;for(let i=0;i<o.length&&null===e;i++){e=(0,o[i])(t)}return e}static getFuturesOptionPipelineFormat(t){const e=h.parseInstrumentType(t);let i=null;if(\"future_option\"===e.type){const t=u(e.option_type);i=`${e.root}${e.month}${l(e.year,1)}|${e.strike}${t}`}return i}static getIsConcrete(t){return n.string(t)&&!r.futures.alias.test(t)}static getIsReference(t){return n.string(t)&&r.futures.alias.test(t)}static getIsFuture(t){return n.string(t)&&(r.futures.concrete.test(t)||r.futures.alias.test(t))}static getIsFutureSpread(t){return n.string(t)&&r.futures.spread.test(t)}static getIsFutureOption(t){return n.string(t)&&(r.futures.options.short.test(t)||r.futures.options.long.test(t)||r.futures.options.historical.test(t))}static getIsForex(t){return n.string(t)&&r.forex.test(t)}static getIsIndex(t){return n.string(t)&&r.indicies.external.test(t)}static getIsSector(t){return n.string(t)&&r.indicies.sector.test(t)}static getIsCmdty(t){return n.string(t)&&r.indicies.cmdty.test(t)}static getIsBats(t){return n.string(t)&&i.bats.test(t)}static getIsEquityOption(t){return n.string(t)&&r.equities.options.test(t)}static getIsExpired(t){const i=h.parseInstrumentType(t);let n=!1;if(null!==i&&i.year&&i.month){const t=a();if(i.year<t)n=!0;else if(i.year===t&&e.hasOwnProperty(i.month)){(new Date).getMonth()+1>e[i.month]&&(n=!0)}}return n}static displayUsingPercent(t){return n.string(t)&&i.percent.test(t)}toString(){return\"[SymbolParser]\"}}return h})()},9:function(t,e,i){const n=i(2);t.exports=(()=>{\"use strict\";return function(t,e,i,r){if(!n.number(t))return\"\";const s=t<0&&!0===r;s&&(t=0-t);let o=t.toFixed(e);if(i&&(t<-999||t>999)){const n=t<0;let r=0===e,a=0;const l=[];for(let t=o.length-1;!(t<0);t--){3!==a||n&&0===t||(l.unshift(i),a=0);const e=o.charAt(t);l.unshift(e),r?a+=1:\".\"===e&&(r=!0)}s&&(l.unshift(\"(\"),l.push(\")\")),o=l.join(\"\")}else s&&(o=\"(\"+o+\")\");return o}})()}})}));\n//# sourceMappingURL=chart.bundle.js.map</script><script>const summaryChart = {\n\tchart: {\n        plotBackgroundColor: null,\n        plotBorderWidth: null,\n        plotShadow: false,\n        type: 'pie',\n        height: '250px'\n    },\n    credits: {\n        enabled: false,\n    },\n    tooltip: {\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n    },\n    plotOptions: {\n        pie: {\n            allowPointSelect: true,\n            animation: false,\n            cursor: 'pointer',\n            dataLabels: {\n                enabled: false,\n                format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n                style: {\n                    color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'\n                }\n            },\n            showInLegend: true\n        }\n    }\n};</script><script>document.addEventListener('DOMContentLoaded', () => {\n\tconst fontSize = '10px';\n\n\t// Highcharts requires data to be floats/ints\n\tconst startSummary = convertToFloat(startingSummaryChartData);\n\tconst closeSummary = convertToFloat(closingSummaryChartData);\n\n\tif (startSummary.length > 0) {\n\t\tHighcharts.chart('summary-start-chart', Object.assign({}, summaryChart, {\n\t\t\ttitle: {\n\t\t\t\ttext: 'Starting Allocation',\n\t\t\t\tstyle: {\n\t\t\t\t\tfontSize,\n\t\t\t\t\tfontWeight: 700\n\t\t\t\t}\n\t\t\t},\n\t\t\tseries: [{\n\t\t\t\tcolorByPoint: true,\n\t\t\t\tdata: startSummary\n\t\t\t}],\n\t\t\tlegend: {\n\t\t\t\titemStyle: {\n\t\t\t\t\tfontSize\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t} else {\n\t\tdocument.getElementById('summary-end-chart').style.marginLeft = '25%';\n\t}\n\n\tif (closeSummary.length > 0) {\n\t\tHighcharts.chart('summary-end-chart', Object.assign({}, summaryChart, {\n\t\t\ttitle: {\n\t\t\t\ttext: 'Ending Allocation',\n\t\t\t\tstyle: {\n\t\t\t\t\tfontSize,\n\t\t\t\t\tfontWeight: 700\n\t\t\t\t}\n\t\t\t},\n\t\t\tseries: [{\n\t\t\t\tcolorByPoint: true,\n\t\t\t\tdata: closeSummary\n\t\t\t}],\n\t\t\tlegend: {\n\t\t\t\titemStyle: {\n\t\t\t\t\tfontSize\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n});\n\nconst convertToFloat = (dataPoints) => {\n\treturn dataPoints.map((point) => {\n\t\tpoint.y = parseFloat(point.y);\n\n\t\treturn point;\n\t});\n};\n\nconst displayCurrency = (value) => {\n\tif (value instanceof Decimal) {\n\t\treturn value.parseFloat().toFixed(2);\n\t} else {\n\t\treturn value;\n\t}\n};</script></head><body><div class=\"container-fluid\"><div class=\"row\"><div class=\"col-12\"><div class=\"alert alert-secondary uppercase\" role=\"alert\">PERIOD PERFORMANCE SUMMARY</div><table class=\"table table-sm\" id=\"summary-table\"><thead><tr><th class=\"borderless text-left\" scope=\"col\"></th><th class=\"borderless text-right\" scope=\"col\">Cost Basis</th><th class=\"borderless text-right\" scope=\"col\">Market Value</th><th class=\"borderless text-right\" scope=\"col\">Period Gain</th><th class=\"borderless text-right\" scope=\"col\">Period Gain (%)</th><th class=\"borderless text-right\" scope=\"col\">Period Income</th><th class=\"borderless text-right\" scope=\"col\">Period Realized</th><th class=\"borderless text-right\" scope=\"col\">Period Unrealized</th></tr></thead><tbody><tr><td>Equities</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00%</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td></tr><tr><td>Equities (US$)</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00%</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td></tr><tr><td>Funds</td><td class=\"text-right\">36,376.45</td><td class=\"text-right\">37,342.49</td><td class=\"text-right\">966.04</td><td class=\"text-right\">2.66%</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td><td class=\"text-right\">966.04</td></tr><tr><td>Funds (US$)</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00%</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td></tr><tr><td>Cash</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00%</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td></tr><tr><td>Cash (US$)</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00%</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td></tr><tr><td>Other</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00%</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td></tr><tr><td>Other (US$)</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00%</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td></tr></tbody><tbody><tr><td>TOTAL</td><td class=\"text-right\">36,376.45</td><td class=\"text-right\">37,342.49</td><td class=\"text-right\">966.04</td><td class=\"text-right\">2.66%</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td><td class=\"text-right\">966.04</td></tr></tbody></table></div></div><div class=\"row\"></div><div class=\"row\"><div class=\"col-12\"><div class=\"alert alert-secondary uppercase\" role=\"alert\">ASSET ALLOCATION COMPARISON</div></div><div class=\"col-6\"><div id=\"portfolio-summary\"><table class=\"table table-sm\" id=\"asset-allocation\"><thead><tr><th class=\"borderless\" scope=\"col\"></th><th class=\"borderless text-right\" scope=\"col\">Starting Value</th><th class=\"borderless text-right\" scope=\"col\">Ending Value</th><th class=\"borderless text-right\" scope=\"col\">Allocation Change</th></tr></thead><tbody><tr><td>Equities</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00%</td></tr><tr><td>Equities (US$)</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00%</td></tr><tr><td>Funds</td><td class=\"text-right\">0.00</td><td class=\"text-right\">37,342.49</td><td class=\"text-right\">100.00%</td></tr><tr><td>Funds (US$)</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00%</td></tr><tr><td>Cash</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00%</td></tr><tr><td>Cash (US$)</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00%</td></tr><tr><td>Other</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00%</td></tr><tr><td>Other (US$)</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00</td><td class=\"text-right\">0.00%</td></tr></tbody></table></div></div><div class=\"col-6\"><div class=\"float-left\" id=\"summary-start-chart\"></div><div class=\"float-left\" id=\"summary-end-chart\"></div></div></div><div class=\"pagebreak\"></div><div class=\"row\"><div class=\"col-12\"><div class=\"alert alert-secondary uppercase\" role=\"alert\">PORTFOLIO MARKET VALUE</div></div><div class=\"col-12\"><script type=\"application/json\" id=\"barchart-www-inline-data\">{}\n</script><script>window.data = window.data || { };\nwindow.data.values = \"mv,2001-10-10,0,0,0,36376.45,0\\nmv,2001-10-11,0,0,0,37242.56,0\\nmv,2001-10-12,0,0,0,36509.7,0\\nmv,2001-10-13,0,0,0,36509.7,0\\nmv,2001-10-14,0,0,0,36509.7,0\\nmv,2001-10-15,0,0,0,36343.14,0\\nmv,2001-10-16,0,0,0,36543.01,0\\nmv,2001-10-17,0,0,0,37475.74,0\\nmv,2001-10-18,0,0,0,36742.88,0\\nmv,2001-10-19,0,0,0,36276.51,0\\nmv,2001-10-20,0,0,0,36276.51,0\\nmv,2001-10-21,0,0,0,36276.51,0\\nmv,2001-10-22,0,0,0,36543.01,0\\nmv,2001-10-23,0,0,0,37275.87,0\\nmv,2001-10-24,0,0,0,37509.05,0\\nmv,2001-10-25,0,0,0,37608.98,0\\nmv,2001-10-26,0,0,0,38042.04,0\\nmv,2001-10-27,0,0,0,38042.04,0\\nmv,2001-10-28,0,0,0,38042.04,0\\nmv,2001-10-29,0,0,0,37309.18,0\\nmv,2001-10-30,0,0,0,36976.06,0\\nmv,2001-10-31,0,0,0,37342.49,0\";\nwindow.data.density = 22\n</script><div class=\"chart-container\"><div class=\"chart\" id=\"chart-mv\"></div></div><script>const { BarchartSiteDataFeed, formatPriceWithDecimals, initFeed } = Barchart.RealtimeWidgets.Charts;\n\nclass ChartMetaData {\n\tready() {\n\t\treturn Promise.resolve(true);\n\t}\n\n\tformat(price) {\n\t\treturn formatPriceWithDecimals(price, 2);\n\t}\n}\n\nclass ChartMetaDataSource {\n\tgetMetaData() {\n\t\treturn new ChartMetaData();\n\t}\n}\n\nclass ChartFeed extends BarchartSiteDataFeed {\n\tconstructor(config) {\n\t\tsuper(config);\n\n\t\tthis.metaDataSource = new ChartMetaDataSource();\n\t}\n}\n\nfunction provideStaticData(kind, relativeUrl) {\n\tlet data = '';\n\n\tif (kind === 'timeseries') {\n\t\tconst matches = relativeUrl.match(/symbol=([^&]*)/);\n\n\t\tif (matches !== null) {\n\t\t\tdata = window.data.values;\n\t\t}\n\t}\n\n\treturn Promise.resolve(data);\n}\n\nconst feed = initFeed(ChartFeed, {\n\tvalidateInput: true,\n\tthrottleMillis: 25,\n\tfetch: provideStaticData,\n});\n\nfeed.config.defaultTemplate = getTemplate();\n\nfeed.ready().then(() => {\n\tfeed.addChart('chart-mv', {\n\t\tsymbol: 'mv',\n\t\ttemplate: JSON.stringify(getTemplate())\n\t});\n});\n\nfunction getTemplate() {\n\tconst density = window.data && window.data.density;\n\n\treturn {\n\t\tdata: {\n\t\t\taggregation: {\n\t\t\t\tunit: 'Day',\n\t\t\t\tsize: 1\n\t\t\t}\n\t\t},\n\t\tdisplay: {\n\t\t\tdensity: Math.max(density, 10),\n\t\t\tchart: {\n\t\t\t\tbackgroundColor: '#fff',\n\t\t\t\tplotBorderColor: '#fff',\n\t\t\t\tfontFamily: 'sans-serif'\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\tvisible: false,\n\t\t\t\tmode: 'standard'\n\t\t\t},\n\t\t\txAxis: {\n\t\t\t\tvisible: true,\n\t\t\t\tgridLines: {\n\t\t\t\t\tvisible: false,\n\t\t\t\t\tcolor: '#777'\n\t\t\t\t},\n\t\t\t\ttextColor: '#000',\n\t\t\t\tcrosshair: {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tshowValue: true,\n\t\t\t\t\tcolor: '#000',\n\t\t\t\t\tdashStyle: 'LongDash'\n\t\t\t\t}\n\t\t\t},\n\t\t\tyAxis: {\n\t\t\t\tvisible: true,\n\t\t\t\tgridLines: {\n\t\t\t\t\tvisible: true,\n\t\t\t\t\tcolor: '#e2e2e3'\n\t\t\t\t},\n\t\t\t\ttextColor: '#777',\n\t\t\t\tcrosshair: {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tshowValue: true,\n\t\t\t\t\tcolor: '#000',\n\t\t\t\t\tdashStyle: 'LongDash'\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tpanes: [\n\t\t\t{\n\t\t\t\taxes: [\n\t\t\t\t\t{\n\t\t\t\t\t\tplots: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcurves: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tcolors: [\n\t\t\t\t\t\t\t\t\t\t\t'rgba(79,151,193,0.50)',\n\t\t\t\t\t\t\t\t\t\t\t'#458CB9'\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tfields: [\n\t\t\t\t\t\t\t\t\t\t\t'Close',\n\t\t\t\t\t\t\t\t\t\t\t'Change'\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tstyle: 'Area',\n\t\t\t\t\t\t\t\t\t\tlineWidth: 2\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tmain: true,\n\t\t\t\t\t\t\t\tsymbol: 'PLACEHOLDER',\n\t\t\t\t\t\t\t\ttype: 'Symbol',\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tversion: 22\n\t};\n}\n</script></div></div><div class=\"pagebreak\"></div><div class=\"row\"><div class=\"col-12\"><div class=\"alert alert-secondary uppercase\" role=\"alert\">INVESTMENT SUMMARY</div><table class=\"table\" id=\"summary-table\"><thead><tr><th class=\"borderless\" scope=\"col\"><div class=\"alert alert-dark bold\" role=\"alert\">FUNDS</div></th></tr></thead><tbody><tr><td class=\"borderless\"><table class=\"table table-sm\" id=\"position-summary-table\"><thead><tr><th class=\"borderless\" colspan=\"1\"></th><th class=\"text-right bg-blue\" colspan=\"2\">Starting</th><th class=\"text-right bg-blue\" colspan=\"2\">Ending</th><th class=\"text-right bg-blue\" colspan=\"5\">Gains</th></tr><tr><th scope=\"col\">Ticker/Name</th><th class=\"text-right\" scope=\"col\">Shares</th><th class=\"text-right\" scope=\"col\">Price</th><th class=\"text-right\" scope=\"col\">Shares</th><th class=\"text-right\" scope=\"col\">Price</th><th class=\"text-right\" scope=\"col\">Period Gain</th><th class=\"text-right\" scope=\"col\">Period Gain (%)</th><th class=\"text-right\" scope=\"col\">Period Income</th><th class=\"text-right\" scope=\"col\">Period Realized</th><th class=\"text-right\" scope=\"col\">Period Unrealized</th></tr></thead><tbody><tr><td style=\"width:11%\">FID216.CF</td><td class=\"text-right\" style=\"width:9%\">0.00</td><td class=\"text-right\" style=\"width:7%\">—</td><td class=\"text-right\" style=\"width:9%\">3,331.18</td><td class=\"text-right\" style=\"width:7%\">11.21</td><td class=\"text-right\" style=\"width:12%\">966.04</td><td class=\"text-right\" style=\"width:10%\">2.66%</td><td class=\"text-right\" style=\"width:11%\">0.00</td><td class=\"text-right\" style=\"width:12%\">0.00</td><td class=\"text-right\" style=\"width:12%\">966.04</td></tr></tbody></table></td></tr></tbody></table></div></div><div class=\"pagebreak\"></div><div class=\"row\"><div class=\"col-12\"><div class=\"alert alert-secondary\" role=\"alert\">TRANSACTIONS (INVESTMENT)</div><table class=\"table table-sm\" id=\"transactions\"><thead><tr><th class=\"borderless\" scope=\"col\">Date</th><th class=\"borderless\" scope=\"col\">Ticker/Name</th><th class=\"borderless\" scope=\"col\">Type</th><th class=\"text-right borderless\" scope=\"col\">Effective Qty</th><th class=\"text-right borderless\" scope=\"col\">Price</th><th class=\"text-right borderless\" scope=\"col\">Rate</th><th class=\"text-right borderless\" scope=\"col\">Fee</th><th class=\"text-right borderless\" scope=\"col\">Amount</th><th class=\"text-right borderless\" scope=\"col\">Currency</th><th class=\"text-right borderless\" scope=\"col\">Bought/Sold</th></tr></thead><tbody><tr><td>2001-10-10</td><td>FID216.CF</td><td>Buy</td><td class=\"text-right\">—</td><td class=\"text-right\">10.92</td><td class=\"text-right\">—</td><td class=\"text-right\">0.00</td><td class=\"text-right\">-36,376.45</td><td class=\"text-right\">CAD</td><td class=\"text-right\">3,331.18</td></tr></tbody></table></div></div><div class=\"pagebreak\"><div class=\"row\"><div class=\"col-12\"><div class=\"alert alert-secondary\" role=\"alert\">TRANSACTIONS (CASH)</div><div style=\"margin-left:4em;\">No cash transactions occurred during this period.</div></div></div></div></div></body></html>","pdfSettings":{"displayHeaderFooter":true,"landscape":true,"printBackground":true,"margin":{"top":100,"bottom":50},"headerTemplate":"<div class=\"pdfheader\" style=\"font-size:8px!important;color:grey!important;padding-left:10px;width:500px;\"><div id=\"logo\" style=\"float:left;margin-right:7px;\"><img width=\"50\" height=\"50\" src=\"data:image/png;base64,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\"></div><div class=\"header-title\" style=\"margin-top:4px;font-weight:bold;\">Globe Investor Portfolio</div><div class=\"description\" style=\"font-weight:bold;\">Dorothy Long 256794401 Open</div><div class=\"range-description\">For the month ended 2001-10-31</div><div class=\"date-generated\">Generated on 2020-07-20</div><div class=\"clearfix\"></div></div>","footerTemplate":"<div class=\"pdffooter\" style=\"font-size:8px!important;color:grey!important;padding-left:10px;width:100%;\"><span class=\"page-count\" style=\"float:left;\"><span>Page&nbsp;</span><span class=\"pageNumber\"></span><span>&nbsp;of&nbsp;</span><span class=\"totalPages\"></span></span><span style=\"float:right;margin-right:15px;\">* All values in CAD, unless otherwise noted | Forex rate on 2001-10-31 was 1.5887 CAD per USD</span></div>"}}",
  "isBase64Encoded": true
}
